diff --git a/DD_package/notebooks/a01_demo_data_playground.ipynb b/DD_package/notebooks/a01_demo_data_playground.ipynb
index 1357065..b4e9651 100644
--- a/DD_package/notebooks/a01_demo_data_playground.ipynb
+++ b/DD_package/notebooks/a01_demo_data_playground.ipynb
@@ -2,7 +2,7 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 7,
+   "execution_count": 1,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -602,7 +602,9 @@
     }
    ],
    "source": [
-    "data_sets[\"norm\"].head()"
+    "\n",
+    "data_sets[\"norm\"].head()\n",
+    "\n"
    ]
   },
   {
@@ -729,7 +731,10 @@
     }
    ],
    "source": [
-    "data_sets[\"dyslexia\"].head()"
+    "\n",
+    "\n",
+    "data_sets[\"dyslexia\"].head()\n",
+    "\n"
    ]
   },
   {
@@ -856,7 +861,10 @@
     }
    ],
    "source": [
-    "data_sets[\"risk\"].head()"
+    "\n",
+    "\n",
+    "data_sets[\"risk\"].head()\n",
+    "\n"
    ]
   },
   {
@@ -865,6 +873,8 @@
    "metadata": {},
    "outputs": [],
    "source": [
+    "\n",
+    "\n",
     "data_dyslexia_cols = data_sets[\"dyslexia\"].columns\n",
     "data_norm_cols = data_sets[\"norm\"].columns\n",
     "data_risk_cols = data_sets[\"risk\"].columns\n"
@@ -887,7 +897,8 @@
     }
    ],
    "source": [
-    "set(data_dyslexia_cols == data_norm_cols)"
+    "\n",
+    "set(data_dyslexia_cols == data_norm_cols)\n"
    ]
   },
   {
@@ -907,7 +918,10 @@
     }
    ],
    "source": [
-    "set(data_norm_cols ==  data_risk_cols)"
+    "\n",
+    "\n",
+    "set(data_norm_cols ==  data_risk_cols)\n",
+    "\n"
    ]
   },
   {
@@ -930,6 +944,7 @@
     "\n",
     "data = pd.concat([v for k, v in data_sets.items()], axis=0)\n",
     "data.shape\n",
+    "\n",
     "\n"
    ]
   },
@@ -1057,7 +1072,8 @@
     }
    ],
    "source": [
-    "data.head()"
+    "\n",
+    "data.head()\n"
    ]
   },
   {
@@ -1077,7 +1093,10 @@
     }
    ],
    "source": [
-    "data.columns == data_dyslexia_cols"
+    "\n",
+    "\n",
+    "data.columns == data_dyslexia_cols\n",
+    "\n"
    ]
   },
   {
diff --git a/DD_package/notebooks/a03_fix_report_data_playground.ipynb b/DD_package/notebooks/a03_fix_report_data_playground.ipynb
index 5dcaa1d..9e76dcf 100644
--- a/DD_package/notebooks/a03_fix_report_data_playground.ipynb
+++ b/DD_package/notebooks/a03_fix_report_data_playground.ipynb
@@ -1460,7 +1460,10 @@
    "execution_count": null,
    "metadata": {},
    "outputs": [],
-   "source": []
+   "source": [
+    "\n",
+    "\n"
+   ]
   },
   {
    "cell_type": "markdown",
diff --git a/DD_package/notebooks/a04_debugging_playground.ipynb b/DD_package/notebooks/a04_debugging_playground.ipynb
index c672594..0a9de9f 100644
--- a/DD_package/notebooks/a04_debugging_playground.ipynb
+++ b/DD_package/notebooks/a04_debugging_playground.ipynb
@@ -2,7 +2,7 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 8,
+   "execution_count": null,
    "id": "587852fe",
    "metadata": {},
    "outputs": [],
@@ -34,7 +34,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 9,
+   "execution_count": null,
    "id": "a38b959d",
    "metadata": {},
    "outputs": [],
@@ -55,7 +55,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 11,
+   "execution_count": null,
    "id": "2e2ad6d2",
    "metadata": {},
    "outputs": [],
@@ -67,20 +67,10 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 12,
+   "execution_count": null,
    "id": "fd29da4b",
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "   mae     rmse  \t mrae \t r2_score  \t meape  \t jsd \n",
-      " Ave   std  Ave   std   Ave   std   Ave   std   Ave   std   Ave   std \n",
-      "0.426 0.033 1.814 0.284 0.006 0.000 0.997 0.001 0.049 0.018 0.008 0.001\n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "print_the_evaluated_results(results=tmp, learning_method=\"regression\")\n",
     "\n"
@@ -88,7 +78,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 10,
+   "execution_count": 5,
    "id": "d43eb2d2",
    "metadata": {},
    "outputs": [],
@@ -124,7 +114,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 11,
+   "execution_count": 6,
    "id": "ea3abe01",
    "metadata": {},
    "outputs": [],
@@ -147,7 +137,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 12,
+   "execution_count": 7,
    "id": "ff7f6503",
    "metadata": {},
    "outputs": [],
@@ -163,7 +153,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 13,
+   "execution_count": 8,
    "id": "e9f7d645",
    "metadata": {},
    "outputs": [
@@ -175,16 +165,6 @@
       "  dyslexia (72, 9)\n",
       "  norm (213, 9)\n",
       "  risk (22, 9)\n",
-      " \n",
-      "Loading IA_report data: \n",
-      "  dyslexia (12641, 17)\n",
-      "  norm (38075, 17)\n",
-      "  risk (4148, 17)\n",
-      " \n",
-      "Loading Fixation report data:\n",
-      "  dyslexia (59770, 7)\n",
-      "  norm (139507, 7)\n",
-      "  risk (26073, 7)\n",
       " \n"
      ]
     }
@@ -196,8 +176,6 @@
     "\n",
     "\n",
     "demos = dd.get_demo_datasets()\n",
-    "ias = dd.get_ia_datasets()\n",
-    "fixs = dd.get_fix_datasets()\n",
     "\n",
     "\n"
    ]
@@ -212,10 +190,215 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 9,
    "id": "9171d483",
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>Group</th>\n",
+       "      <th>SubjectID</th>\n",
+       "      <th>Sex</th>\n",
+       "      <th>Grade</th>\n",
+       "      <th>Age</th>\n",
+       "      <th>IQ</th>\n",
+       "      <th>Reading_speed</th>\n",
+       "      <th>Sound_detection</th>\n",
+       "      <th>Sound_change</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>1</td>\n",
+       "      <td>10</td>\n",
+       "      <td>1</td>\n",
+       "      <td>4</td>\n",
+       "      <td>10</td>\n",
+       "      <td>23</td>\n",
+       "      <td>102.0</td>\n",
+       "      <td>0.620000</td>\n",
+       "      <td>0.910000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>1</td>\n",
+       "      <td>108</td>\n",
+       "      <td>1</td>\n",
+       "      <td>4</td>\n",
+       "      <td>10</td>\n",
+       "      <td>34</td>\n",
+       "      <td>139.0</td>\n",
+       "      <td>1.000000</td>\n",
+       "      <td>0.950000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>1</td>\n",
+       "      <td>11</td>\n",
+       "      <td>2</td>\n",
+       "      <td>4</td>\n",
+       "      <td>10</td>\n",
+       "      <td>34</td>\n",
+       "      <td>110.0</td>\n",
+       "      <td>1.000000</td>\n",
+       "      <td>0.790000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>1</td>\n",
+       "      <td>11_norm1</td>\n",
+       "      <td>1</td>\n",
+       "      <td>2</td>\n",
+       "      <td>9</td>\n",
+       "      <td>28</td>\n",
+       "      <td>71.0</td>\n",
+       "      <td>0.950000</td>\n",
+       "      <td>0.910000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>1</td>\n",
+       "      <td>12_norm1</td>\n",
+       "      <td>2</td>\n",
+       "      <td>2</td>\n",
+       "      <td>8</td>\n",
+       "      <td>32</td>\n",
+       "      <td>60.0</td>\n",
+       "      <td>0.950000</td>\n",
+       "      <td>0.620000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>212</th>\n",
+       "      <td>1</td>\n",
+       "      <td>varya_norm1</td>\n",
+       "      <td>1</td>\n",
+       "      <td>1</td>\n",
+       "      <td>7</td>\n",
+       "      <td>34</td>\n",
+       "      <td>56.0</td>\n",
+       "      <td>1.000000</td>\n",
+       "      <td>0.920000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>68</th>\n",
+       "      <td>3</td>\n",
+       "      <td>vpa21</td>\n",
+       "      <td>2</td>\n",
+       "      <td>1</td>\n",
+       "      <td>7</td>\n",
+       "      <td>32</td>\n",
+       "      <td>22.0</td>\n",
+       "      <td>0.916667</td>\n",
+       "      <td>0.916667</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>69</th>\n",
+       "      <td>3</td>\n",
+       "      <td>yea20</td>\n",
+       "      <td>1</td>\n",
+       "      <td>3</td>\n",
+       "      <td>9</td>\n",
+       "      <td>34</td>\n",
+       "      <td>20.0</td>\n",
+       "      <td>0.875000</td>\n",
+       "      <td>0.500000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>70</th>\n",
+       "      <td>3</td>\n",
+       "      <td>zaa15</td>\n",
+       "      <td>1</td>\n",
+       "      <td>3</td>\n",
+       "      <td>10</td>\n",
+       "      <td>31</td>\n",
+       "      <td>78.0</td>\n",
+       "      <td>0.958333</td>\n",
+       "      <td>0.916667</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>71</th>\n",
+       "      <td>3</td>\n",
+       "      <td>zrs09</td>\n",
+       "      <td>2</td>\n",
+       "      <td>3</td>\n",
+       "      <td>10</td>\n",
+       "      <td>32</td>\n",
+       "      <td>97.0</td>\n",
+       "      <td>0.956522</td>\n",
+       "      <td>0.875000</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>307 rows × 9 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "     Group    SubjectID  Sex  Grade  Age  IQ  Reading_speed  Sound_detection  \\\n",
+       "0        1           10    1      4   10  23          102.0         0.620000   \n",
+       "1        1          108    1      4   10  34          139.0         1.000000   \n",
+       "2        1           11    2      4   10  34          110.0         1.000000   \n",
+       "3        1     11_norm1    1      2    9  28           71.0         0.950000   \n",
+       "4        1     12_norm1    2      2    8  32           60.0         0.950000   \n",
+       "..     ...          ...  ...    ...  ...  ..            ...              ...   \n",
+       "212      1  varya_norm1    1      1    7  34           56.0         1.000000   \n",
+       "68       3        vpa21    2      1    7  32           22.0         0.916667   \n",
+       "69       3        yea20    1      3    9  34           20.0         0.875000   \n",
+       "70       3        zaa15    1      3   10  31           78.0         0.958333   \n",
+       "71       3        zrs09    2      3   10  32           97.0         0.956522   \n",
+       "\n",
+       "     Sound_change  \n",
+       "0        0.910000  \n",
+       "1        0.950000  \n",
+       "2        0.790000  \n",
+       "3        0.910000  \n",
+       "4        0.620000  \n",
+       "..            ...  \n",
+       "212      0.920000  \n",
+       "68       0.916667  \n",
+       "69       0.500000  \n",
+       "70       0.916667  \n",
+       "71       0.875000  \n",
+       "\n",
+       "[307 rows x 9 columns]"
+      ]
+     },
+     "execution_count": 9,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
    "source": [
     "\n",
     "demo = dd.concat_classes_demo()  # .reset_index(drop=True)\n",
@@ -226,7 +409,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 10,
    "id": "d19019f7",
    "metadata": {},
    "outputs": [],
@@ -251,7 +434,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 4,
+   "execution_count": null,
    "id": "3560a5a0",
    "metadata": {},
    "outputs": [],
@@ -259,7 +442,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 11,
    "id": "3be7341e",
    "metadata": {},
    "outputs": [],
@@ -273,7 +456,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 12,
    "id": "41e63ff2",
    "metadata": {},
    "outputs": [],
@@ -289,7 +472,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 13,
    "id": "459f3b72",
    "metadata": {
     "scrolled": false
@@ -316,7 +499,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 14,
    "id": "6ae92652",
    "metadata": {},
    "outputs": [],
@@ -338,7 +521,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 15,
    "id": "55379d2e",
    "metadata": {},
    "outputs": [],
@@ -354,10 +537,19 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 16,
    "id": "19360866",
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "pre-processing: mm\n",
+      "Preprocessed data shape: (307, 12)\n"
+     ]
+    }
+   ],
    "source": [
     "\n",
     "\n",
@@ -367,88 +559,303 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
-   "id": "f0eae56b",
+   "execution_count": 17,
+   "id": "cb641245",
    "metadata": {},
    "outputs": [],
+   "source": [
+    "import jax\n",
+    "import jax.numpy as jnp\n",
+    "from copy import deepcopy"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 18,
+   "id": "55078b78",
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "WARNING:absl:No GPU/TPU found, falling back to CPU. (Set TF_CPP_MIN_LOG_LEVEL=0 and rerun for more info.)\n"
+     ]
+    }
+   ],
    "source": [
     "\n",
-    "cv = dd.get_stratified_kfold_cv(\n",
-    "    to_shuffle=to_shuffle,\n",
-    "    n_splits=configs.n_splits,\n",
-    ")\n",
+    "c1 = x[1, :].reshape(1, -1)\n",
+    "c2 = x[52, :].reshape(1, -1)\n",
+    "c3 = x[111, :].reshape(1, -1)\n",
+    "centroids = jnp.concatenate((c1, c2, c3), axis=0)\n",
     "\n"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": null,
-   "id": "00c09e88",
+   "execution_count": 19,
+   "id": "79be2a3e",
    "metadata": {},
    "outputs": [],
    "source": [
+    "def compute_euclidean(datapoint, centroid,):\n",
+    "    return jax.tree_leaves(jnp.sum(jnp.power(datapoint - centroid, 2), axis=1))[0]\n",
     "\n",
+    "def is_pos_def(x):\n",
+    "    return jax.tree_leaves(jnp.all(jnp.linalg.eigvals(x) > 0))\n",
     "\n",
-    "y = y_org.Group.values\n",
-    "\n",
-    "\n",
-    "# y = preprocess_data(x=y, pp='mm')  # only x is standardized\n"
+    "\n"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": null,
-   "id": "29dd94af",
+   "execution_count": 24,
+   "id": "3ab376e0",
    "metadata": {},
    "outputs": [],
    "source": [
-    "\n",
-    "\n",
-    "data = dd.get_stratified_train_test_splits(\n",
-    "    x=x, y=y,\n",
-    "    labels=y_org.Group.values,\n",
-    "    to_shuffle=to_shuffle,\n",
-    "    n_splits=configs.n_repeats\n",
-    ")\n",
-    "\n"
+    "data = x"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": null,
-   "id": "e897d8e7",
+   "execution_count": 21,
+   "id": "92f98c62",
    "metadata": {},
    "outputs": [],
    "source": [
-    "\n",
-    "\n",
-    "reg_est = ClassificationEstimators(\n",
-    "    x=x, y=y, cv=cv, data=data,\n",
-    "    estimator_name=estimator_name,\n",
-    "    configs=configs,\n",
-    ")\n",
-    "\n",
-    "\n"
+    "n_nodes = data.shape[0]\n",
+    "n_clusters = centroids.shape[0]\n",
+    "distance_fn = compute_euclidean "
    ]
   },
   {
    "cell_type": "code",
    "execution_count": null,
-   "id": "5b51cb1b",
+   "id": "26bacc95",
    "metadata": {},
    "outputs": [],
    "source": []
   },
   {
    "cell_type": "code",
-   "execution_count": null,
-   "id": "fc374aee",
+   "execution_count": 22,
+   "id": "f0eae56b",
    "metadata": {},
    "outputs": [],
    "source": [
     "\n",
-    "\n",
-    "reg_est.instantiate_tuning_estimator_and_parameters()\n",
+    "cv = dd.get_stratified_kfold_cv(\n",
+    "    to_shuffle=to_shuffle,\n",
+    "    n_splits=configs.n_splits,\n",
+    ")\n",
+    "\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 23,
+   "id": "00c09e88",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "\n",
+    "\n",
+    "y = y_org.Group.values\n",
+    "\n",
+    "\n",
+    "\n",
+    "# y = preprocess_data(x=y, pp='mm')  # only x is standardized\n",
+    "\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 25,
+   "id": "ac0564a7",
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "n_iter = 0 ari=0.039 f_iter=True ave_l2_norms_grads = 1.844\n",
+      "n_iter = 1 ari=0.030 f_iter=True ave_l2_norms_grads = 1.112\n",
+      "n_iter = 2 ari=0.016 f_iter=True ave_l2_norms_grads = 0.727\n",
+      "n_iter = 3 ari=0.015 f_iter=True ave_l2_norms_grads = 0.455\n",
+      "n_iter = 4 ari=0.016 f_iter=True ave_l2_norms_grads = 0.335\n",
+      "n_iter = 5 ari=0.016 f_iter=True ave_l2_norms_grads = 0.221\n",
+      "n_iter = 6 ari=0.016 f_iter=True ave_l2_norms_grads = 0.188\n",
+      "n_iter = 7 ari=0.015 f_iter=True ave_l2_norms_grads = 0.129\n",
+      "n_iter = 8 ari=0.015 f_iter=True ave_l2_norms_grads = 0.077\n",
+      "n_iter = 9 ari=0.015 f_iter=True ave_l2_norms_grads = 0.046\n",
+      "n_iter = 10 ari=0.015 f_iter=True ave_l2_norms_grads = 0.028\n",
+      "n_iter = 11 ari=0.015 f_iter=True ave_l2_norms_grads = 0.017\n",
+      "n_iter = 12 ari=0.015 f_iter=True ave_l2_norms_grads = 0.010\n",
+      "n_iter = 13 ari=0.015 f_iter=True ave_l2_norms_grads = 0.006\n",
+      "n_iter = 14 ari=0.015 f_iter=True ave_l2_norms_grads = 0.004\n",
+      "n_iter = 15 ari=0.015 f_iter=True ave_l2_norms_grads = 0.002\n",
+      "n_iter = 16 ari=0.015 f_iter=True ave_l2_norms_grads = 0.001\n",
+      "n_iter = 17 ari=0.015 f_iter=True ave_l2_norms_grads = 0.001\n",
+      "ave_l2_norms_grads: 0.00077821896\n",
+      "An optimum has found! stoped by FONC and SONC\n",
+      "ARI: 0.015296613229052574\n",
+      "Converge by two consequitive cluster recovery results conincidence\n",
+      "node 306 ARI 0.015296613229052574\n"
+     ]
+    }
+   ],
+   "source": [
+    "\n",
+    "f_iter = True \n",
+    "n_iter = 0\n",
+    "n_iters = 400\n",
+    "tol_m = 1e-2\n",
+    "tol_g = 1e-3\n",
+    "clusters = jnp.zeros([n_nodes]) + jnp.inf\n",
+    "\n",
+    "grads_sums = []\n",
+    "aris_history = []\n",
+    "grads_history = []\n",
+    "hessians_history = []\n",
+    "\n",
+    "\n",
+    "from sklearn import metrics\n",
+    "\n",
+    "\n",
+    "step_size = 2e-1\n",
+    "c_iter = 0\n",
+    "\n",
+    "\n",
+    "while f_iter: \n",
+    "    \n",
+    "    # cluster assingment \n",
+    "    for i in range(n_nodes):   \n",
+    "        distances = distance_fn(datapoint=x[i, :], centroid=centroids)\n",
+    "        clusters = clusters.at[i].set(jnp.argmin(distances, axis=0))\n",
+    "        \n",
+    "    previous_clusters = deepcopy(clusters)\n",
+    "    \n",
+    "    # cluster update\n",
+    "    tmp_grads, tmp_hess = [], []\n",
+    "    for k in range(n_clusters):\n",
+    "        \n",
+    "        cluster_data = jnp.mean(x[jnp.where(clusters==k)[0], :], axis=0).reshape(1, -1)\n",
+    "        \n",
+    "        # Gradient of the distance function w.r.t the closest center \n",
+    "        grads = jax.jacfwd(distance_fn, argnums=(1,))(cluster_data, centroids[k, :])\n",
+    "        grads = jax.tree_leaves(grads)[0]\n",
+    "        \n",
+    "        # Upgate centrods\n",
+    "        updated_centeroid = centroids[k, :] - step_size * grads\n",
+    "        centroids = centroids.at[k].set(updated_centeroid[0])\n",
+    "        \n",
+    "        # Convergence check\n",
+    "        # FONC: First Order Necessary Condition\n",
+    "        l2_norm_grads= jnp.sqrt(jnp.sum(jnp.power(grads, 2)))\n",
+    "        tmp_grads.append(l2_norm_grads)\n",
+    "\n",
+    "        # SONC: Second Order Necessary Condition\n",
+    "        # Jaccobian of gradients (hessian matrix) of the distance function w.r.t the closest center \n",
+    "        hessian_mat = jax.hessian(distance_fn, argnums=(1,))(cluster_data, centroids[k, :])\n",
+    "        hessian_mat = jax.tree_leaves(hessian_mat)[0]\n",
+    "        if jnp.all(is_pos_def(hessian_mat[0])[0]):\n",
+    "            tmp_hess.append(1)\n",
+    "        else:\n",
+    "            tmp_hess.append(0)\n",
+    "\n",
+    "    \n",
+    "    ave_l2_norms_grads = jnp.asarray(tmp_grads).mean()\n",
+    "    grads_history.append(ave_l2_norms_grads)\n",
+    "    \n",
+    "    ave_semi_pos_def_check = jnp.asarray(tmp_hess).mean()\n",
+    "    hessians_history.append(ave_semi_pos_def_check)\n",
+    "    \n",
+    "    ari = metrics.adjusted_rand_score(y, clusters)\n",
+    "\n",
+    "    print(\n",
+    "        f\"n_iter = {n_iter} ari={ari:.3f} f_iter={f_iter} ave_l2_norms_grads = {ave_l2_norms_grads:.3f}\" \n",
+    "    )\n",
+    "    \n",
+    "    \n",
+    "    # FOCN and SOCN    \n",
+    "    if ave_semi_pos_def_check ==1. and ave_l2_norms_grads <= tol_g:\n",
+    "        print(\"ave_l2_norms_grads:\", ave_l2_norms_grads)\n",
+    "        print(\"An optimum has found! stoped by FONC and SONC\")\n",
+    "        print(\"ARI:\",ari)\n",
+    "\n",
+    "        if jnp.all(previous_clusters == clusters):\n",
+    "            f_iter = False\n",
+    "            print(\"Converge by two consequitive cluster recovery results conincidence\")            \n",
+    "            print(f\"node {i} ARI {ari}\")\n",
+    "            break\n",
+    "    \n",
+    "    n_iter += 1\n",
+    "    \n",
+    "    if n_iter >= n_iters:\n",
+    "        f_iter = False\n",
+    "       \n",
+    "\n",
+    "\n",
+    "\n",
+    "\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "id": "29dd94af",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "\n",
+    "\n",
+    "data = dd.get_stratified_train_test_splits(\n",
+    "    x=x, y=y,\n",
+    "    labels=y_org.Group.values,\n",
+    "    to_shuffle=to_shuffle,\n",
+    "    n_splits=configs.n_repeats\n",
+    ")\n",
+    "\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "id": "e897d8e7",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "\n",
+    "\n",
+    "reg_est = ClassificationEstimators(\n",
+    "    x=x, y=y, cv=cv, data=data,\n",
+    "    estimator_name=estimator_name,\n",
+    "    configs=configs,\n",
+    ")\n",
+    "\n",
+    "\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "id": "5b51cb1b",
+   "metadata": {},
+   "outputs": [],
+   "source": []
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "id": "fc374aee",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "\n",
+    "\n",
+    "reg_est.instantiate_tuning_estimator_and_parameters()\n",
     "\n"
    ]
   },
@@ -581,7 +988,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 15,
+   "execution_count": null,
    "id": "bc5b7f20",
    "metadata": {},
    "outputs": [],
@@ -589,22 +996,10 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 16,
+   "execution_count": null,
    "id": "a4404936",
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Loading Demo data: \n",
-      "  dyslexia (72, 9)\n",
-      "  norm (213, 9)\n",
-      "  risk (22, 9)\n",
-      " \n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "to_exclude_at_risk = False\n",
     "\n",
@@ -627,176 +1022,20 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 17,
+   "execution_count": null,
    "id": "99e68f60",
    "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>Group</th>\n",
-       "      <th>SubjectID</th>\n",
-       "      <th>Sound_detection</th>\n",
-       "      <th>Sound_change</th>\n",
-       "      <th>Reading_speed</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>1</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0.620000</td>\n",
-       "      <td>0.910000</td>\n",
-       "      <td>102.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>1</td>\n",
-       "      <td>108</td>\n",
-       "      <td>1.000000</td>\n",
-       "      <td>0.950000</td>\n",
-       "      <td>139.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>1</td>\n",
-       "      <td>11</td>\n",
-       "      <td>1.000000</td>\n",
-       "      <td>0.790000</td>\n",
-       "      <td>110.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>1</td>\n",
-       "      <td>11_norm1</td>\n",
-       "      <td>0.950000</td>\n",
-       "      <td>0.910000</td>\n",
-       "      <td>71.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>4</th>\n",
-       "      <td>1</td>\n",
-       "      <td>12_norm1</td>\n",
-       "      <td>0.950000</td>\n",
-       "      <td>0.620000</td>\n",
-       "      <td>60.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>...</th>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>212</th>\n",
-       "      <td>1</td>\n",
-       "      <td>varya_norm1</td>\n",
-       "      <td>1.000000</td>\n",
-       "      <td>0.920000</td>\n",
-       "      <td>56.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>68</th>\n",
-       "      <td>3</td>\n",
-       "      <td>vpa21</td>\n",
-       "      <td>0.916667</td>\n",
-       "      <td>0.916667</td>\n",
-       "      <td>22.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>69</th>\n",
-       "      <td>3</td>\n",
-       "      <td>yea20</td>\n",
-       "      <td>0.875000</td>\n",
-       "      <td>0.500000</td>\n",
-       "      <td>20.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>70</th>\n",
-       "      <td>3</td>\n",
-       "      <td>zaa15</td>\n",
-       "      <td>0.958333</td>\n",
-       "      <td>0.916667</td>\n",
-       "      <td>78.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>71</th>\n",
-       "      <td>3</td>\n",
-       "      <td>zrs09</td>\n",
-       "      <td>0.956522</td>\n",
-       "      <td>0.875000</td>\n",
-       "      <td>97.0</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "<p>307 rows × 5 columns</p>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "     Group    SubjectID  Sound_detection  Sound_change  Reading_speed\n",
-       "0        1           10         0.620000      0.910000          102.0\n",
-       "1        1          108         1.000000      0.950000          139.0\n",
-       "2        1           11         1.000000      0.790000          110.0\n",
-       "3        1     11_norm1         0.950000      0.910000           71.0\n",
-       "4        1     12_norm1         0.950000      0.620000           60.0\n",
-       "..     ...          ...              ...           ...            ...\n",
-       "212      1  varya_norm1         1.000000      0.920000           56.0\n",
-       "68       3        vpa21         0.916667      0.916667           22.0\n",
-       "69       3        yea20         0.875000      0.500000           20.0\n",
-       "70       3        zaa15         0.958333      0.916667           78.0\n",
-       "71       3        zrs09         0.956522      0.875000           97.0\n",
-       "\n",
-       "[307 rows x 5 columns]"
-      ]
-     },
-     "execution_count": 17,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
+   "outputs": [],
    "source": [
     "df_data_to_use"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 18,
+   "execution_count": null,
    "id": "bebccb7c",
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Loading Demo data: \n",
-      "  dyslexia (72, 9)\n",
-      "  norm (213, 9)\n",
-      "  risk (22, 9)\n",
-      " \n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "to_exclude_at_risk = True\n",
     "\n",
@@ -819,175 +1058,20 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 19,
+   "execution_count": null,
    "id": "9ef94ca8",
    "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>Group</th>\n",
-       "      <th>SubjectID</th>\n",
-       "      <th>Sound_detection</th>\n",
-       "      <th>Sound_change</th>\n",
-       "      <th>Reading_speed</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>1</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0.620000</td>\n",
-       "      <td>0.910000</td>\n",
-       "      <td>102.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>1</td>\n",
-       "      <td>108</td>\n",
-       "      <td>1.000000</td>\n",
-       "      <td>0.950000</td>\n",
-       "      <td>139.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>1</td>\n",
-       "      <td>11</td>\n",
-       "      <td>1.000000</td>\n",
-       "      <td>0.790000</td>\n",
-       "      <td>110.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>1</td>\n",
-       "      <td>11_norm1</td>\n",
-       "      <td>0.950000</td>\n",
-       "      <td>0.910000</td>\n",
-       "      <td>71.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>4</th>\n",
-       "      <td>1</td>\n",
-       "      <td>12_norm1</td>\n",
-       "      <td>0.950000</td>\n",
-       "      <td>0.620000</td>\n",
-       "      <td>60.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>...</th>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>212</th>\n",
-       "      <td>1</td>\n",
-       "      <td>varya_norm1</td>\n",
-       "      <td>1.000000</td>\n",
-       "      <td>0.920000</td>\n",
-       "      <td>56.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>68</th>\n",
-       "      <td>3</td>\n",
-       "      <td>vpa21</td>\n",
-       "      <td>0.916667</td>\n",
-       "      <td>0.916667</td>\n",
-       "      <td>22.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>69</th>\n",
-       "      <td>3</td>\n",
-       "      <td>yea20</td>\n",
-       "      <td>0.875000</td>\n",
-       "      <td>0.500000</td>\n",
-       "      <td>20.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>70</th>\n",
-       "      <td>3</td>\n",
-       "      <td>zaa15</td>\n",
-       "      <td>0.958333</td>\n",
-       "      <td>0.916667</td>\n",
-       "      <td>78.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>71</th>\n",
-       "      <td>3</td>\n",
-       "      <td>zrs09</td>\n",
-       "      <td>0.956522</td>\n",
-       "      <td>0.875000</td>\n",
-       "      <td>97.0</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "<p>285 rows × 5 columns</p>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "     Group    SubjectID  Sound_detection  Sound_change  Reading_speed\n",
-       "0        1           10         0.620000      0.910000          102.0\n",
-       "1        1          108         1.000000      0.950000          139.0\n",
-       "2        1           11         1.000000      0.790000          110.0\n",
-       "3        1     11_norm1         0.950000      0.910000           71.0\n",
-       "4        1     12_norm1         0.950000      0.620000           60.0\n",
-       "..     ...          ...              ...           ...            ...\n",
-       "212      1  varya_norm1         1.000000      0.920000           56.0\n",
-       "68       3        vpa21         0.916667      0.916667           22.0\n",
-       "69       3        yea20         0.875000      0.500000           20.0\n",
-       "70       3        zaa15         0.958333      0.916667           78.0\n",
-       "71       3        zrs09         0.956522      0.875000           97.0\n",
-       "\n",
-       "[285 rows x 5 columns]"
-      ]
-     },
-     "execution_count": 19,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
+   "outputs": [],
    "source": [
     "df_data_to_use"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 22,
+   "execution_count": null,
    "id": "adf2e1e7",
    "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "{1, 3}"
-      ]
-     },
-     "execution_count": 22,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
+   "outputs": [],
    "source": [
     "set(df_data_to_use.Group)"
    ]
diff --git a/DD_package/notebooks/b04_feature_importance_BINARY_classification_fix_demo.ipynb b/DD_package/notebooks/b04_feature_importance_BINARY_classification_fix_demo.ipynb
index 3e9f0b6..3638a4c 100644
--- a/DD_package/notebooks/b04_feature_importance_BINARY_classification_fix_demo.ipynb
+++ b/DD_package/notebooks/b04_feature_importance_BINARY_classification_fix_demo.ipynb
@@ -6727,7 +6727,7 @@
   {
    "cell_type": "code",
    "execution_count": 64,
-   "id": "058e4f45",
+   "id": "59d9201f",
    "metadata": {},
    "outputs": [
     {
@@ -7276,7 +7276,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 78,
    "id": "3c9cead3",
    "metadata": {},
    "outputs": [],
@@ -7285,7 +7285,7 @@
     "\n",
     "\n",
     "normals = np.where(y_test == 1)[0]\n",
-    "at_risks = np.where(y_test == 2)[0]\n",
+    "# at_risks = np.where(y_test == 2)[0]\n",
     "dyslexics = np.where(y_test == 3)[0]\n",
     "\n",
     "\n",
@@ -7293,7 +7293,7 @@
     "n_size = 5\n",
     "np.random.seed(43)\n",
     "normals_rnd = np.random.choice(normals, n_size)\n",
-    "at_risks_rnd = np.random.choice(at_risks, n_size)\n",
+    "# at_risks_rnd = np.random.choice(at_risks, n_size)\n",
     "dyslexics_rnd = np.random.choice(dyslexics, n_size)\n",
     "\n",
     "\n"
@@ -7301,10 +7301,21 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 79,
    "id": "2497ff02",
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "array([ 4849,  2303, 12109, 15395,  2064])"
+      ]
+     },
+     "execution_count": 79,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
    "source": [
     "normals_rnd\n",
     "\n"
@@ -7312,20 +7323,31 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 80,
    "id": "44b851a6",
    "metadata": {},
    "outputs": [],
    "source": [
-    "at_risks_rnd\n"
+    "# at_risks_rnd\n"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 81,
    "id": "67d17f59",
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "array([ 3184,  3534, 17058, 10254,  3755])"
+      ]
+     },
+     "execution_count": 81,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
    "source": [
     "\n",
     "dyslexics_rnd\n"
@@ -7333,10 +7355,71 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 82,
    "id": "f913fa37",
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 1440x216 with 1 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 1440x216 with 1 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "image/png": "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REQkh61bt3Lbbbdx4403snjxYlasWMH8+fO79dg77riD2traPm6hiIgUsptvvpmPPvqov5uxSxYsWMB9993X380QGbAU1IiIiOSwaNEixo0bx7XXXsuhhx7KU089xezZs7v12MMPP5xnnnmmj1soIiIiIgORghoREZEcGhoaGDJkCADr168nFAoxatSobj12ypQprFq1iqampr5sooiIiIgMQDo9t4iISAd/+tOfWLVqFWvWrOHRRx/liCOOYNy4ce33r127lr///e9cfvnllJWVsWnTJu666y4uueQSqqurcbvdDB8+nBUrVrDffvv12+sQEZH8tn79eh555BGampqYOnUqp59+Om63m7a2Nv7973+zbt06EokEY8aM4fTTTycYDALwxhtvsHDhQlpaWigqKuLYY49ln332AeD1119n0aJFNDc3M3LkSM444wzKy8s7Pffdd9/N5MmTOeSQQ9pvu/XWWznmmGOYNm0ajzzyCO+//z7hcJjKykpOPvlkxo4d22k+q1at4r777uOqq65qv+3mm2/mzDPPZMKECTiOw6JFi3j11VcJhUJMmDCB008/nUAg0MtLU2TgUEWNiIhIB5/73OcYO3Ysp556Ktdeey2bN2+mqqqq/f7Ro0dz4IEHcv/99xONRvn3v//NscceS3V1dfs0NTU1bN68uT+aLyIiBeLtt9/ms5/9LFdccQXbtm3j2WefBcBxHPbbbz++/vWv8/Wvfx23283DDz8MQCQS4ZFHHuEzn/kM1157LRdffDHDhg0DYOnSpTz33HN86lOf4uqrr2bs2LHce++9OZ9777335u23326/vmXLFhoaGpg0aRIAI0eO5Itf/CJz585l77335l//+hexWKzHr3Hx4sUsXbqUL3zhC3zjG9/A7/fz0EMP9Xg+IoOJghoREZGdCIVC+Hy+rNuOOeYYQqEQd9xxB6WlpRx88MFZ93u9XkKh0J5spoiIFJhDDjmEsrIyAoEARx11VHtwUlRUxPTp0/F4PPh8Po466ihWrVrV/jjLsqitrSUajVJaWtreVfeVV15h9uzZ1NTUYNs2Rx55JJs2baK+vr7Tc0+dOjXrvrfeeotp06bhdptOF/vssw9FRUXYts3hhx9OLBZj69atPX6Nr7zyCsceeyzBYBC3280xxxzDe++9RyKR6PG8RAYLdX0SERHZiUAgQDgczrrN5XKx33778cgjj3DSSSdhWVbW/ZFIBL/fvyebKSIiBSbVlQmgrKysfWyzaDTKo48+yvLly9tD/3A4TCKRwOv1ct555/HCCy/wwAMPMHr0aE466SSqq6tpaGjg0Ucf5fHHH2+fr+M4NDU1der+5PP5mDx5Mu+88w6zZ8/mnXfe4Ywzzmi//4UXXuC1116jqakJy7IIh8O0trb2+DU2NDTwj3/8I+tz0rZtmpubs16/iKQpqBEREdmJoUOHsm3btqzbGhsbWbhwIfvvvz+PP/44l156afuvkGBKyFPjBYiIiOTS2NjYfrmhoYHS0lLAhCTbtm3j0ksvpaSkhE2bNnHbbbe1T7vXXnux1157EY1Gefrpp3nggQe46KKLCAaDHHnkkd3+/Jk5cyYLFy5k7NixxGIxxo8fD8Dq1atZtGgRF154IUOGDMGyLH7yk5/knIfH4yEajbZfTyQStLS0tF8PBoOcddZZjBkzpvsLRmSQU9cnERGRnZg0aRKrV69uv+44Dvfffz/7778/Z555JiUlJVmn447FYmzcuJGJEyf2R3NFRKRAvPzyyzQ2NtLW1sZzzz3HzJkzAVOV6Xa78fv9tLW1sWDBgvbHNDc3s2zZsvZpvF4vtm0O6w466CCef/55amtrAdN199133+3y+SdNmkR9fT3PPPMMM2bMaK96iUQi2LZNcXExiUSChQsXdqosTamqqiIWi/HBBx8Qj8d59tlnicfj7fcfdNBBPP300+1drFpaWli6dOkuLzORwUAVNSIiIjsxfPhwfD4f69atY9SoUSxevJiWlhaOPfZYLMvi7LPP5tZbb2Xy5MmMHTuWZcuWMW7cuPZfRkVERHLZe++9+ctf/kJTUxNTpkzhqKOOAmDWrFnce++9/PSnP6W0tJTDDjusPdxwHIcXXniB++67D8uyGDZsGKeddhoA06ZNIxKJcM8999DQ0IDP52PixInMmDEj5/O73W6mTZvG66+/znHHHdd++8SJE9lrr7349a9/jcfj4bDDDqOsrCznPPx+P6eddhoPPPAAjuNwxBFHZHVpmjVrFkD76ywuLmbmzJlMnTp19xegyABlOY7T320QERHpbzv9MFyxYgVLlixhzpw5O53ZHXfcwVlnndU+uGMXrB3dKSIiA4oOurpPn48y6CmoERER6Z8v0PoiKiIyeOigq/v0+SiDnsaoERERERERERHJEwpqRERERERERETyhIIaEREREREREZE8oaBGREQGi02YMQJy/esPXbVlUz+1R0RERETygAYTFhGRwaKQPvA0kKKIyMBSSJ9B/U2fgTLoqaJGRERERESkb23u7wYUCC0nEVRRIyIig0chfeDp10QRERGRQUoVNSIiIiIiIiIieUJBjYiIDFrPPvssp59+OkOHDsWyLCzL4rrrruvWY+fPn88BBxxAIBCgsrKS8847j+XLl2dNE41G+cEPfsCECRPwer2MGjWKK6+8kqampj54NSIiIiIyECioERGRQeu1117j0UcfpbKyskeP+/3vf8+nP/1pXn/9dYYPH048Hufee+/liCOOYNOm9EmbLrroIq677jpWr17NhAkTqK2t5Ze//CVnnHEGiUSit1+OiIiIiAwACmpERGTQuuCCC2hsbGTJkiXdfkwkEuGaa64B4Nxzz+Wjjz7i/fffp7S0lNraWm688UbAhEB33303AL/85S9ZunQp9957LwALFy7k/vvv790XIyIiIiIDgoIaEREZtKqqqigqKurRY5YsWcLWrVsBE9QAjBgxglmzZgHw2GOPAfDII4+0PyY13WmnnYbf78+aTkREREQkk4IaERGRHli7dm375SFDhrRfHjp0KABr1qzpcjrbtqmurs6aTkREREQkk4IaERGRHnCc3Gf57nh7d6cTEREREcmkoEZERKQHxowZ0365tra20+XRo0d3OV0ikWDbtm1Z04mIiIiIZFJQIyIisgPHHXccU6dO5Vvf+hYABx98MFVVVQDtgwNv2LCBl156CYCTTz4562/mdA899BChUKjT/SIiIiIiKZZKsEVEZJDo9IF33333cfXVV+M4Dh999BEAFRUVVFZWcuihh/LXv/6VcePGsXr1aj73uc9x1113AfC73/2Oyy+/HIDx48ezbds2Ghsbqa6u5s0332TEiBEAnH/++fz973/Htm0mT57MihUriEajzJ49m4ULF2LbXf5eYvX6qxcRERGRgqCKGhERGbQaGxtZsWJFe0gDUFdXx4oVK1i/fn2Xj7vsssu4++672W+//diwYQOWZXHOOeewaNGi9pAG4E9/+hPf+973GDNmDCtWrKC6upqvfvWrPPTQQzsKaURERPpUU1OT09TUpF/sRfKUKmpERGSwKKQPPFXUiIhIn0mFNKWlpfq8EclD+jlPRERERERE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\n",
+      "text/plain": [
+       "<Figure size 1440x216 with 1 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 1440x216 with 1 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 1440x216 with 1 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    }
+   ],
    "source": [
     "for n in normals_rnd:\n",
     "    shap.plots.force(shap_values[n], show=False, matplotlib=True)\n",
@@ -7346,23 +7429,84 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 84,
    "id": "44e99272",
    "metadata": {},
    "outputs": [],
    "source": [
-    "for r in at_risks_rnd:\n",
-    "    shap.plots.force(shap_values[r], show=False, matplotlib=True)\n",
+    "# for r in at_risks_rnd:\n",
+    "#     shap.plots.force(shap_values[r], show=False, matplotlib=True)\n",
     "    \n",
     "    "
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 85,
    "id": "f7ddb7e8",
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 1440x216 with 1 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 1440x216 with 1 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 1440x216 with 1 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 1440x216 with 1 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 1440x216 with 1 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    }
+   ],
    "source": [
     "for d in dyslexics_rnd:\n",
     "    shap.plots.force(shap_values[d], show=False, matplotlib=True)\n",
diff --git a/DD_package/notebooks/c02_classification_on_replicated_demodata.ipynb b/DD_package/notebooks/c02_classification_on_replicated_demodata.ipynb
index 240eb50..7a47586 100644
--- a/DD_package/notebooks/c02_classification_on_replicated_demodata.ipynb
+++ b/DD_package/notebooks/c02_classification_on_replicated_demodata.ipynb
@@ -12218,7 +12218,7 @@
   {
    "cell_type": "code",
    "execution_count": 120,
-   "id": "536ced8f",
+   "id": "5ce9c852",
    "metadata": {},
    "outputs": [],
    "source": [
@@ -12229,7 +12229,7 @@
   {
    "cell_type": "code",
    "execution_count": 121,
-   "id": "151f6ba4",
+   "id": "e77eeb98",
    "metadata": {},
    "outputs": [
     {
@@ -12252,7 +12252,7 @@
   {
    "cell_type": "code",
    "execution_count": 122,
-   "id": "9235ea0b",
+   "id": "e89fa218",
    "metadata": {},
    "outputs": [
     {
@@ -12274,7 +12274,7 @@
   {
    "cell_type": "code",
    "execution_count": 130,
-   "id": "9b93e451",
+   "id": "cd9b3cea",
    "metadata": {},
    "outputs": [
     {
@@ -12300,7 +12300,7 @@
   {
    "cell_type": "code",
    "execution_count": 132,
-   "id": "ba3001d7",
+   "id": "ee1bdeb1",
    "metadata": {},
    "outputs": [
     {
@@ -12324,7 +12324,7 @@
   {
    "cell_type": "code",
    "execution_count": 133,
-   "id": "ba1aeb45",
+   "id": "15020e7c",
    "metadata": {},
    "outputs": [
     {
@@ -12347,7 +12347,7 @@
   {
    "cell_type": "code",
    "execution_count": 136,
-   "id": "2b575a80",
+   "id": "9895376b",
    "metadata": {},
    "outputs": [
     {
@@ -12369,7 +12369,7 @@
   {
    "cell_type": "code",
    "execution_count": 137,
-   "id": "21cb5a88",
+   "id": "681ae686",
    "metadata": {},
    "outputs": [
     {
@@ -12448,7 +12448,7 @@
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "Exact explainer:   3%|████▏                                                                                                                   | 774/22428 [04:18<2:05:46,  2.87it/s]"
+      "Exact explainer:   4%|████▏                                                                                                                   | 786/22428 [04:22<2:05:06,  2.88it/s]"
      ]
     }
    ],
diff --git a/DD_package/notebooks/c03_classification_on_NOT_replicated_demo_data_WITH_FIX-DEMO_MLP.ipynb b/DD_package/notebooks/c03_classification_on_NOT_replicated_demo_data_WITH_FIX-DEMO_MLP.ipynb
index d8fb680..a5cd353 100644
--- a/DD_package/notebooks/c03_classification_on_NOT_replicated_demo_data_WITH_FIX-DEMO_MLP.ipynb
+++ b/DD_package/notebooks/c03_classification_on_NOT_replicated_demo_data_WITH_FIX-DEMO_MLP.ipynb
@@ -1563,7 +1563,7 @@
   {
    "cell_type": "code",
    "execution_count": 27,
-   "id": "2d96da9f",
+   "id": "31895731",
    "metadata": {},
    "outputs": [],
    "source": [
@@ -1582,7 +1582,7 @@
   {
    "cell_type": "code",
    "execution_count": 28,
-   "id": "6dfe74c2",
+   "id": "617a39d0",
    "metadata": {},
    "outputs": [
     {
diff --git a/DD_package/notebooks/c04_classification_RF_on_replicated_demodata.ipynb b/DD_package/notebooks/c04_classification_RF_on_replicated_demodata.ipynb
index a7d4198..eb60590 100644
--- a/DD_package/notebooks/c04_classification_RF_on_replicated_demodata.ipynb
+++ b/DD_package/notebooks/c04_classification_RF_on_replicated_demodata.ipynb
@@ -2250,7 +2250,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 103,
    "id": "0ee30593",
    "metadata": {},
    "outputs": [
@@ -2308,7 +2308,41 @@
       "[Parallel(n_jobs=1)]: Done 9923 out of 9923 | elapsed:   22.0s finished\n",
       "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
       "[Parallel(n_jobs=1)]: Done 9923 out of 9923 | elapsed:    1.4s finished\n",
-      "Exact explainer:   0%|                                                                                                        | 14/22428 [04:31<132:07:11, 21.22s/it][Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n"
+      "Exact explainer:   0%|                                                                                                        | 14/22428 [04:31<132:07:11, 21.22s/it][Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
+      "[Parallel(n_jobs=1)]: Done 9923 out of 9923 | elapsed:   21.0s finished\n",
+      "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
+      "[Parallel(n_jobs=1)]: Done 9923 out of 9923 | elapsed:    1.4s finished\n",
+      "Exact explainer:   0%|                                                                                                        | 15/22428 [04:54<134:15:24, 21.56s/it][Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
+      "Exact explainer:   0%|                                                                                                        | 15/22428 [05:08<137:22:26, 22.07s/it]\n"
+     ]
+    },
+    {
+     "ename": "KeyboardInterrupt",
+     "evalue": "",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
+      "\u001b[0;32m/tmp/ipykernel_25243/1836371976.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mshap_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mexplainer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/venv_Jan2022/lib/python3.9/site-packages/shap/explainers/_exact.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, max_evals, main_effects, error_bounds, batch_size, interactions, silent, *args)\u001b[0m\n\u001b[1;32m     67\u001b[0m         \u001b[0;31m# we entirely rely on the general call implementation, we override just to remove **kwargs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     68\u001b[0m         \u001b[0;31m# from the function signature\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 69\u001b[0;31m         return super(Exact, self).__call__(\n\u001b[0m\u001b[1;32m     70\u001b[0m             \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_evals\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmax_evals\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmain_effects\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmain_effects\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merror_bounds\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merror_bounds\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     71\u001b[0m             \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbatch_size\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minteractions\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minteractions\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msilent\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msilent\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/venv_Jan2022/lib/python3.9/site-packages/shap/explainers/_explainer.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, max_evals, main_effects, error_bounds, batch_size, outputs, silent, *args, **kwargs)\u001b[0m\n\u001b[1;32m    256\u001b[0m             \u001b[0mfeature_names\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0m_\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    257\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mrow_args\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mshow_progress\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnum_rows\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__class__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__name__\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;34m\" explainer\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msilent\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 258\u001b[0;31m             row_result = self.explain_row(\n\u001b[0m\u001b[1;32m    259\u001b[0m                 \u001b[0;34m*\u001b[0m\u001b[0mrow_args\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_evals\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmax_evals\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmain_effects\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmain_effects\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merror_bounds\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merror_bounds\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    260\u001b[0m                 \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbatch_size\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moutputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0moutputs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msilent\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msilent\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/venv_Jan2022/lib/python3.9/site-packages/shap/explainers/_exact.py\u001b[0m in \u001b[0;36mexplain_row\u001b[0;34m(self, max_evals, main_effects, error_bounds, batch_size, outputs, interactions, silent, *row_args)\u001b[0m\n\u001b[1;32m    111\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    112\u001b[0m             \u001b[0;31m# run the model\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 113\u001b[0;31m             \u001b[0moutputs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfm\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mextended_delta_indexes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mzero_index\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbatch_size\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    114\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    115\u001b[0m             \u001b[0;31m# Shapley values\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/venv_Jan2022/lib/python3.9/site-packages/shap/utils/_masked_model.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, masks, zero_index, batch_size)\u001b[0m\n\u001b[1;32m     55\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmasks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     56\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmasker\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"supports_delta_masking\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 57\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_delta_masking_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmasks\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mzero_index\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mzero_index\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbatch_size\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     58\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     59\u001b[0m             \u001b[0;31m# we need to convert from delta masking to a full masking call because we were given a delta masking\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/venv_Jan2022/lib/python3.9/site-packages/shap/utils/_masked_model.py\u001b[0m in \u001b[0;36m_delta_masking_call\u001b[0;34m(self, masks, zero_index, batch_size)\u001b[0m\n\u001b[1;32m    197\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    198\u001b[0m         \u001b[0;31m# joined_masked_inputs = self._stack_inputs(all_masked_inputs)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 199\u001b[0;31m         \u001b[0moutputs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0msubset_masked_inputs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    200\u001b[0m         \u001b[0m_assert_output_input_match\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msubset_masked_inputs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moutputs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    201\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/venv_Jan2022/lib/python3.9/site-packages/shap/models/_model.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args)\u001b[0m\n\u001b[1;32m     19\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     20\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__call__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 21\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minner_model\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     22\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     23\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0msave\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mout_file\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/anaconda3/lib/python3.9/site-packages/sklearn/ensemble/_forest.py\u001b[0m in \u001b[0;36mpredict\u001b[0;34m(self, X)\u001b[0m\n\u001b[1;32m    628\u001b[0m             \u001b[0mThe\u001b[0m \u001b[0mpredicted\u001b[0m \u001b[0mclasses\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    629\u001b[0m         \"\"\"\n\u001b[0;32m--> 630\u001b[0;31m         \u001b[0mproba\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict_proba\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    631\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    632\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mn_outputs_\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/anaconda3/lib/python3.9/site-packages/sklearn/ensemble/_forest.py\u001b[0m in \u001b[0;36mpredict_proba\u001b[0;34m(self, X)\u001b[0m\n\u001b[1;32m    681\u001b[0m                      for j in np.atleast_1d(self.n_classes_)]\n\u001b[1;32m    682\u001b[0m         \u001b[0mlock\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mthreading\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mLock\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 683\u001b[0;31m         Parallel(n_jobs=n_jobs, verbose=self.verbose,\n\u001b[0m\u001b[1;32m    684\u001b[0m                  \u001b[0;34m**\u001b[0m\u001b[0m_joblib_parallel_args\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrequire\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"sharedmem\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    685\u001b[0m             delayed(_accumulate_prediction)(e.predict_proba, X, all_proba,\n",
+      "\u001b[0;32m~/anaconda3/lib/python3.9/site-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, iterable)\u001b[0m\n\u001b[1;32m   1044\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_iterating\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_original_iterator\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1045\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1046\u001b[0;31m             \u001b[0;32mwhile\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdispatch_one_batch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1047\u001b[0m                 \u001b[0;32mpass\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1048\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/anaconda3/lib/python3.9/site-packages/joblib/parallel.py\u001b[0m in \u001b[0;36mdispatch_one_batch\u001b[0;34m(self, iterator)\u001b[0m\n\u001b[1;32m    859\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    860\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 861\u001b[0;31m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_dispatch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtasks\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    862\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    863\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/anaconda3/lib/python3.9/site-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m_dispatch\u001b[0;34m(self, batch)\u001b[0m\n\u001b[1;32m    777\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_lock\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    778\u001b[0m             \u001b[0mjob_idx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jobs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 779\u001b[0;31m             \u001b[0mjob\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_backend\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply_async\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcallback\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcb\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    780\u001b[0m             \u001b[0;31m# A job can complete so quickly than its callback is\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    781\u001b[0m             \u001b[0;31m# called before we get here, causing self._jobs to\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/anaconda3/lib/python3.9/site-packages/joblib/_parallel_backends.py\u001b[0m in \u001b[0;36mapply_async\u001b[0;34m(self, func, callback)\u001b[0m\n\u001b[1;32m    206\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mapply_async\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcallback\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    207\u001b[0m         \u001b[0;34m\"\"\"Schedule a func to be run\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 208\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mImmediateResult\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    209\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcallback\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    210\u001b[0m             \u001b[0mcallback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/anaconda3/lib/python3.9/site-packages/joblib/_parallel_backends.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, batch)\u001b[0m\n\u001b[1;32m    570\u001b[0m         \u001b[0;31m# Don't delay the application, to avoid keeping the input\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    571\u001b[0m         \u001b[0;31m# arguments in memory\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 572\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mresults\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbatch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    573\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    574\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/anaconda3/lib/python3.9/site-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    260\u001b[0m         \u001b[0;31m# change the default number of processes to -1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    261\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mparallel_backend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_backend\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_jobs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_n_jobs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 262\u001b[0;31m             return [func(*args, **kwargs)\n\u001b[0m\u001b[1;32m    263\u001b[0m                     for func, args, kwargs in self.items]\n\u001b[1;32m    264\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/anaconda3/lib/python3.9/site-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m    260\u001b[0m         \u001b[0;31m# change the default number of processes to -1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    261\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mparallel_backend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_backend\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_jobs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_n_jobs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 262\u001b[0;31m             return [func(*args, **kwargs)\n\u001b[0m\u001b[1;32m    263\u001b[0m                     for func, args, kwargs in self.items]\n\u001b[1;32m    264\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/anaconda3/lib/python3.9/site-packages/sklearn/utils/fixes.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    220\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__call__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    221\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mconfig_context\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconfig\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 222\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunction\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
+      "\u001b[0;32m~/anaconda3/lib/python3.9/site-packages/sklearn/ensemble/_forest.py\u001b[0m in \u001b[0;36m_accumulate_prediction\u001b[0;34m(predict, X, out, lock)\u001b[0m\n\u001b[1;32m    465\u001b[0m     \u001b[0mcomplains\u001b[0m \u001b[0mthat\u001b[0m \u001b[0mit\u001b[0m \u001b[0mcannot\u001b[0m \u001b[0mpickle\u001b[0m \u001b[0mit\u001b[0m \u001b[0mwhen\u001b[0m \u001b[0mplaced\u001b[0m \u001b[0mthere\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    466\u001b[0m     \"\"\"\n\u001b[0;32m--> 467\u001b[0;31m     \u001b[0mprediction\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcheck_input\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    468\u001b[0m     \u001b[0;32mwith\u001b[0m \u001b[0mlock\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    469\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mout\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/anaconda3/lib/python3.9/site-packages/sklearn/tree/_classes.py\u001b[0m in \u001b[0;36mpredict_proba\u001b[0;34m(self, X, check_input)\u001b[0m\n\u001b[1;32m    934\u001b[0m         \u001b[0mcheck_is_fitted\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    935\u001b[0m         \u001b[0mX\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate_X_predict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcheck_input\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 936\u001b[0;31m         \u001b[0mproba\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtree_\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    937\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    938\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mn_outputs_\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
      ]
     }
    ],
diff --git a/DD_package/notebooks/d03_test_on_new_dataset_classification_fix_demo.ipynb b/DD_package/notebooks/d03_test_on_new_dataset_classification_fix_demo.ipynb
index 4e58fbb..599cc93 100644
--- a/DD_package/notebooks/d03_test_on_new_dataset_classification_fix_demo.ipynb
+++ b/DD_package/notebooks/d03_test_on_new_dataset_classification_fix_demo.ipynb
@@ -2,7 +2,7 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 951,
+   "execution_count": 966,
    "id": "1b9d2cfc",
    "metadata": {},
    "outputs": [],
@@ -22,7 +22,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 952,
+   "execution_count": 967,
    "id": "13a8aa90",
    "metadata": {},
    "outputs": [],
@@ -31379,6 +31379,45 @@
     "\n"
    ]
   },
+  {
+   "cell_type": "code",
+   "execution_count": 1035,
+   "id": "48a5e907",
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Sex_2 mean =  0.557 std=  0.497\n",
+      "Grade_4 mean =  0.194 std=  0.396\n",
+      "FIX_DURATION mean =  0.027 std=  0.021\n",
+      "FIX_X mean =  0.371 std=  0.223\n",
+      "IQ mean =  0.754 std=  0.183\n",
+      "FIX_Y mean =  0.515 std=  0.065\n",
+      "Sex_1 mean =  0.443 std=  0.497\n",
+      "Age mean =  0.364 std=  0.195\n",
+      "Grade_2 mean =  0.201 std=  0.401\n",
+      "Grade_3 mean =  0.180 std=  0.384\n",
+      "Grade_5 mean =  0.084 std=  0.278\n",
+      "Grade_6 mean =  0.038 std=  0.190\n",
+      "Grade_1 mean =  0.303 std=  0.460\n"
+     ]
+    }
+   ],
+   "source": [
+    "for f in range(len(features)):\n",
+    "    print(f\"{features[f]} mean = {x[:, f].mean(): .3f} std= {x[:, f].std(): .3f}\")"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "id": "07df0eda",
+   "metadata": {},
+   "outputs": [],
+   "source": []
+  },
   {
    "cell_type": "code",
    "execution_count": 615,
@@ -31465,7 +31504,340 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 860,
+   "execution_count": 972,
+   "id": "3d6c8c77",
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>Sex_2</th>\n",
+       "      <th>Grade_4</th>\n",
+       "      <th>FIX_DURATION</th>\n",
+       "      <th>FIX_X</th>\n",
+       "      <th>IQ</th>\n",
+       "      <th>FIX_Y</th>\n",
+       "      <th>Sex_1</th>\n",
+       "      <th>Age</th>\n",
+       "      <th>Grade_2</th>\n",
+       "      <th>Grade_3</th>\n",
+       "      <th>Grade_5</th>\n",
+       "      <th>Grade_6</th>\n",
+       "      <th>Grade_1</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>351</td>\n",
+       "      <td>392.1</td>\n",
+       "      <td>28</td>\n",
+       "      <td>543.5</td>\n",
+       "      <td>0</td>\n",
+       "      <td>9</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>362</td>\n",
+       "      <td>373.4</td>\n",
+       "      <td>28</td>\n",
+       "      <td>554.5</td>\n",
+       "      <td>0</td>\n",
+       "      <td>9</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>214</td>\n",
+       "      <td>397.3</td>\n",
+       "      <td>28</td>\n",
+       "      <td>554.1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>9</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>5</th>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>217</td>\n",
+       "      <td>258.8</td>\n",
+       "      <td>28</td>\n",
+       "      <td>556.2</td>\n",
+       "      <td>0</td>\n",
+       "      <td>9</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>6</th>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>168</td>\n",
+       "      <td>243.4</td>\n",
+       "      <td>28</td>\n",
+       "      <td>550.2</td>\n",
+       "      <td>0</td>\n",
+       "      <td>9</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>439</th>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>373</td>\n",
+       "      <td>916.8</td>\n",
+       "      <td>35</td>\n",
+       "      <td>524.0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>9</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>440</th>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>144</td>\n",
+       "      <td>432.6</td>\n",
+       "      <td>35</td>\n",
+       "      <td>474.4</td>\n",
+       "      <td>1</td>\n",
+       "      <td>9</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>441</th>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>43</td>\n",
+       "      <td>281.1</td>\n",
+       "      <td>35</td>\n",
+       "      <td>544.4</td>\n",
+       "      <td>1</td>\n",
+       "      <td>9</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>123</td>\n",
+       "      <td>123.0</td>\n",
+       "      <td>123</td>\n",
+       "      <td>123.0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>123</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>-1</th>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>123</td>\n",
+       "      <td>123.0</td>\n",
+       "      <td>123</td>\n",
+       "      <td>123.0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>123</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>15918 rows × 13 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "      Sex_2  Grade_4  FIX_DURATION  FIX_X   IQ  FIX_Y  Sex_1  Age  Grade_2  \\\n",
+       " 2        1        0           351  392.1   28  543.5      0    9        0   \n",
+       " 3        1        0           362  373.4   28  554.5      0    9        0   \n",
+       " 4        1        0           214  397.3   28  554.1      0    9        0   \n",
+       " 5        1        0           217  258.8   28  556.2      0    9        0   \n",
+       " 6        1        0           168  243.4   28  550.2      0    9        0   \n",
+       "...     ...      ...           ...    ...  ...    ...    ...  ...      ...   \n",
+       " 439      0        0           373  916.8   35  524.0      1    9        0   \n",
+       " 440      0        0           144  432.6   35  474.4      1    9        0   \n",
+       " 441      0        0            43  281.1   35  544.4      1    9        0   \n",
+       " 1        0        0           123  123.0  123  123.0      1  123        0   \n",
+       "-1        0        0           123  123.0  123  123.0      1  123        0   \n",
+       "\n",
+       "      Grade_3  Grade_5  Grade_6  Grade_1  \n",
+       " 2          1        0        0        0  \n",
+       " 3          1        0        0        0  \n",
+       " 4          1        0        0        0  \n",
+       " 5          1        0        0        0  \n",
+       " 6          1        0        0        0  \n",
+       "...       ...      ...      ...      ...  \n",
+       " 439        1        0        0        0  \n",
+       " 440        1        0        0        0  \n",
+       " 441        1        0        0        0  \n",
+       " 1          0        1        0        0  \n",
+       "-1          0        0        1        0  \n",
+       "\n",
+       "[15918 rows x 13 columns]"
+      ]
+     },
+     "execution_count": 972,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x_test"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 1025,
+   "id": "cabf9aa1",
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "(0.4434479698247171, 0.5565520301752829)"
+      ]
+     },
+     "execution_count": 1025,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "\n",
+    "\n",
+    "x_org.Sex_1.mean(), x_org.Sex_2.mean()\n",
+    "\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 1028,
+   "id": "9f8df4c3",
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "0.0"
+      ]
+     },
+     "execution_count": 1028,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x_test_subj.Sex_2.mean()\n",
+    "\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 1027,
+   "id": "590e2452",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "\n",
+    "\n",
+    "from sklearn.impute import SimpleImputer \n",
+    "\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "id": "113896be",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "\n",
+    "\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 1040,
    "id": "8aa00267",
    "metadata": {},
    "outputs": [
@@ -31544,8 +31916,10 @@
     "        \n",
     "    x_test_subj = fix_demo_new_dum.loc[fix_demo_new_dum.SubjectID == subject_id]\n",
     "    x_test_subj_shuffle = x_test_subj.iloc[np.random.permutation(len(x_test_subj))]\n",
+    "    \n",
     "    x_test_subj_pp = minmax_standardizer_(x_test=x_test_subj_shuffle.loc[:, features].values,\n",
-    "                                          x_train=x_org.values)\n",
+    "                                         x_train=x_org.values)  \n",
+    "    \n",
     "    print(\n",
     "        f\" Subject_id = {subject_id}: \\n\"\n",
     "        f\"  X_test {x_test_subj.shape}\" \n",
@@ -31564,7 +31938,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 861,
+   "execution_count": 1041,
    "id": "9f8f45f8",
    "metadata": {
     "scrolled": false
@@ -31728,17 +32102,17 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 862,
+   "execution_count": 1006,
    "id": "fac509e3",
    "metadata": {},
    "outputs": [
     {
      "data": {
       "text/plain": [
-       "[0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0]"
+       "[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"
       ]
      },
-     "execution_count": 862,
+     "execution_count": 1006,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -31749,36 +32123,36 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 863,
+   "execution_count": 1007,
    "id": "10066541",
    "metadata": {},
    "outputs": [
     {
      "data": {
       "text/plain": [
-       "array([[0.81 , 0.   , 0.19 ],\n",
-       "       [1.   , 0.   , 0.   ],\n",
-       "       [1.   , 0.   , 0.   ],\n",
-       "       [0.999, 0.001, 0.   ],\n",
-       "       [0.   , 0.   , 1.   ],\n",
-       "       [0.   , 0.016, 0.984],\n",
-       "       [1.   , 0.   , 0.   ],\n",
-       "       [1.   , 0.   , 0.   ],\n",
-       "       [1.   , 0.   , 0.   ],\n",
-       "       [1.   , 0.   , 0.   ],\n",
-       "       [0.986, 0.   , 0.014],\n",
-       "       [0.   , 0.   , 1.   ],\n",
-       "       [1.   , 0.   , 0.   ],\n",
-       "       [1.   , 0.   , 0.   ],\n",
-       "       [0.998, 0.   , 0.002],\n",
-       "       [0.41 , 0.   , 0.59 ],\n",
-       "       [1.   , 0.   , 0.   ],\n",
-       "       [0.587, 0.   , 0.413],\n",
-       "       [1.   , 0.   , 0.   ],\n",
-       "       [0.616, 0.   , 0.384]])"
+       "array([[0., 0., 1.],\n",
+       "       [0., 0., 1.],\n",
+       "       [0., 0., 1.],\n",
+       "       [0., 0., 1.],\n",
+       "       [0., 0., 1.],\n",
+       "       [0., 0., 1.],\n",
+       "       [0., 0., 1.],\n",
+       "       [0., 0., 1.],\n",
+       "       [0., 0., 1.],\n",
+       "       [0., 0., 1.],\n",
+       "       [0., 0., 1.],\n",
+       "       [0., 0., 1.],\n",
+       "       [0., 0., 1.],\n",
+       "       [0., 0., 1.],\n",
+       "       [0., 0., 1.],\n",
+       "       [0., 0., 1.],\n",
+       "       [0., 0., 1.],\n",
+       "       [0., 0., 1.],\n",
+       "       [0., 0., 1.],\n",
+       "       [0., 0., 1.]])"
       ]
      },
-     "execution_count": 863,
+     "execution_count": 1007,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -31797,45 +32171,45 @@
    "source": [
     "- SubID  True       Pred\n",
     "\n",
-    "- nnr8\tdyslexia    Normal\n",
-    "\n",
-    "- nnr26\tdyslexia    Normal\n",
+    "- nnr8\tdyslexia    Normal   Dyslexic\n",
+    " \n",
+    "- nnr26\tdyslexia    Normal   Dyslexic\n",
     "\n",
-    "- nnr27\tdyslexia    Normal \n",
+    "- nnr27\tdyslexia    Normal   Dyslexic\n",
     "\n",
-    "- nnr33\tdyslexia    Normal \n",
+    "- nnr33\tdyslexia    Normal   Normal\n",
     "\n",
-    "- nnr36\tdyslexia    Dyslexic \n",
+    "- nnr36\tdyslexia    Dyslexic Normal\n",
     "\n",
-    "- nnr41\tdyslexia    Dyslexic\n",
+    "- nnr41\tdyslexia    Dyslexic Dyslexic\n",
     "\n",
-    "- nnr45\tnorm        Normal \n",
+    "- nnr45\tnorm        Normal   Normal\n",
     "\n",
-    "- nnr48\tnorm        Normal \n",
+    "- nnr48\tnorm        Normal   Normal\n",
     "\n",
-    "- nnr51\tnorm        Normal \n",
+    "- nnr51\tnorm        Normal   Normal\n",
     "\n",
-    "- nnr52\tnorm        Normal \n",
+    "- nnr52\tnorm        Normal   Normal\n",
     "\n",
-    "- nnr58\tdyslexia    Normal \n",
+    "- nnr58\tdyslexia    Normal   Dyslexic\n",
     "\n",
-    "- nnr61\tdyslexia    Dyslexic \n",
+    "- nnr61\tdyslexia    Dyslexic Dyslexic\n",
     "\n",
-    "- nnr66\tdyslexia    Normal \n",
+    "- nnr66\tdyslexia    Normal   Normal\n",
     "\n",
-    "- nnr67\tnorm        Normal\n",
+    "- nnr67\tnorm        Normal   Normal\n",
     " \n",
-    "- nnr70\tnorm        Normal \n",
+    "- nnr70\tnorm        Normal   Dyslexic\n",
     "\n",
-    "- nnr73\tdyslexia    Dyslexic \n",
+    "- nnr73\tdyslexia    Dyslexic Dyslexic\n",
     "\n",
-    "- nnr74\tnorm        Normal \n",
+    "- nnr74\tnorm        Normal  Dyslexic\n",
     " \n",
-    "- nnr82\tnorm        Normal \n",
+    "- nnr82\tnorm        Normal  Normal\n",
     "\n",
-    "- nnr84\tdyslexia    Normal \n",
+    "- nnr84\tdyslexia    Normal  Dyslexic\n",
     "\n",
-    "- nnr85\tnorm        Normal \n",
+    "- nnr85\tnorm        Normal  Dyslexic\n",
     "\n"
    ]
   },
@@ -31851,10 +32225,18 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 864,
+   "execution_count": 1008,
    "id": "0a800b38",
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+     ]
+    }
+   ],
    "source": [
     "cm = sklearn.metrics.confusion_matrix(\n",
     "    y_true=labels_true, \n",
@@ -31895,13 +32277,13 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 865,
+   "execution_count": 1009,
    "id": "2c71cf0d",
    "metadata": {},
    "outputs": [
     {
      "data": {
-      "image/png": "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\n",
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 2 Axes>"
       ]
@@ -31915,7 +32297,7 @@
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      " ari: 0.055  presicion: 0.803  recall:0.650  f1-score: 0.617  auc roc:  0.682  tnr:  0.714 \n"
+      " ari: 0.000  presicion: 0.303  recall:0.550  f1-score: 0.390  auc roc:  0.500  tnr:  0.450 \n"
      ]
     }
    ],
@@ -32180,11 +32562,13 @@
    "id": "239d822d",
    "metadata": {},
    "outputs": [],
-   "source": []
+   "source": [
+    "\n"
+   ]
   },
   {
    "cell_type": "code",
-   "execution_count": 868,
+   "execution_count": 979,
    "id": "3c193b1f",
    "metadata": {},
    "outputs": [
@@ -32194,7 +32578,7 @@
        "Text(0.5, 1.0, 'New Dyslexis')"
       ]
      },
-     "execution_count": 868,
+     "execution_count": 979,
      "metadata": {},
      "output_type": "execute_result"
     },
@@ -32278,7 +32662,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 869,
+   "execution_count": 980,
    "id": "38dfdb36",
    "metadata": {},
    "outputs": [
@@ -32349,7 +32733,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 871,
+   "execution_count": 981,
    "id": "d0612de5",
    "metadata": {},
    "outputs": [
@@ -32359,7 +32743,7 @@
        "array([ 0,  1,  2,  3,  4,  5, 10, 11, 12, 15, 18])"
       ]
      },
-     "execution_count": 871,
+     "execution_count": 981,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -32375,7 +32759,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 872,
+   "execution_count": 982,
    "id": "015eec13",
    "metadata": {},
    "outputs": [
@@ -32385,7 +32769,7 @@
        "array([ 6,  7,  8,  9, 13, 14, 16, 17, 19])"
       ]
      },
-     "execution_count": 872,
+     "execution_count": 982,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -32400,7 +32784,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 909,
+   "execution_count": 983,
    "id": "6708a995",
    "metadata": {},
    "outputs": [],
@@ -32413,13 +32797,13 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 984,
    "id": "5687a70b",
    "metadata": {},
    "outputs": [
     {
      "data": {
-      "image/png": "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\n",
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 2 Axes>"
       ]
@@ -32433,143 +32817,50 @@
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      " ari: 0.310  presicion: 0.864  recall:0.833  f1-score: 0.800  auc roc:  0.667  tnr:  0.500 \n"
+      " ari: 0.041  presicion: 0.743  recall:0.667  f1-score: 0.688  auc roc:  0.667  tnr:  0.667 \n"
      ]
     },
     {
-     "name": "stderr",
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.041  presicion: 0.857  recall:0.667  f1-score: 0.686  auc roc:  0.778  tnr:  0.889 \n"
      ]
     },
     {
-     "name": "stderr",
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: -0.043  presicion: 0.708  recall:0.583  f1-score: 0.611  auc roc:  0.611  tnr:  0.639 \n"
      ]
     },
     {
      "data": {
-      "image/png": "\n",
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 2 Axes>"
       ]
@@ -32580,157 +32871,60 @@
      "output_type": "display_data"
     },
     {
-     "name": "stderr",
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: -0.079  presicion: 0.586  recall:0.500  f1-score: 0.531  auc roc:  0.444  tnr:  0.389 \n"
      ]
     },
+    {
+     "data": {
+      "image/png": "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\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      " ari: 0.310  presicion: 0.864  recall:0.833  f1-score: 0.800  auc roc:  0.667  tnr:  0.500 \n"
+      " ari: 0.195  presicion: 0.875  recall:0.750  f1-score: 0.767  auc roc:  0.833  tnr:  0.917 \n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
       "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
      ]
     },
     {
-     "name": "stderr",
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.195  presicion: 0.875  recall:0.750  f1-score: 0.767  auc roc:  0.833  tnr:  0.917 \n"
      ]
     },
     {
      "data": {
-      "image/png": "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\n",
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 2 Axes>"
       ]
@@ -32744,145 +32938,95 @@
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      " ari: 0.310  presicion: 0.864  recall:0.833  f1-score: 0.800  auc roc:  0.667  tnr:  0.500 \n"
+      " ari: -0.128  presicion: 0.833  recall:0.500  f1-score: 0.500  auc roc:  0.667  tnr:  0.833 \n"
      ]
     },
     {
-     "name": "stderr",
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.195  presicion: 0.875  recall:0.750  f1-score: 0.767  auc roc:  0.833  tnr:  0.917 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: -0.003  presicion: 0.667  recall:0.667  f1-score: 0.667  auc roc:  0.556  tnr:  0.444 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.177  presicion: 0.781  recall:0.750  f1-score: 0.761  auc roc:  0.722  tnr:  0.694 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "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\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.195  presicion: 0.875  recall:0.750  f1-score: 0.767  auc roc:  0.833  tnr:  0.917 \n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
       "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
      ]
     },
     {
      "data": {
-      "image/png": "\n",
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 2 Axes>"
       ]
@@ -32896,170 +33040,65 @@
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      " ari: 0.641  presicion: 0.925  recall:0.917  f1-score: 0.911  auc roc:  0.833  tnr:  0.750 \n"
+      " ari: 0.041  presicion: 0.857  recall:0.667  f1-score: 0.686  auc roc:  0.778  tnr:  0.889 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.401  presicion: 0.900  recall:0.833  f1-score: 0.844  auc roc:  0.889  tnr:  0.944 \n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
       "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
      ]
     },
     {
-     "name": "stderr",
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.041  presicion: 0.857  recall:0.667  f1-score: 0.686  auc roc:  0.778  tnr:  0.889 \n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
       "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
       "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
      ]
     },
     {
      "data": {
-      "image/png": "\n",
+      "image/png": "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\n",
       "text/plain": [
        "<Figure size 432x288 with 2 Axes>"
       ]
@@ -33070,149 +33109,60 @@
      "output_type": "display_data"
     },
     {
-     "name": "stderr",
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.041  presicion: 0.743  recall:0.667  f1-score: 0.688  auc roc:  0.667  tnr:  0.667 \n"
      ]
     },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      " ari: 0.310  presicion: 0.864  recall:0.833  f1-score: 0.800  auc roc:  0.667  tnr:  0.500 \n"
+      " ari: 0.195  presicion: 0.875  recall:0.750  f1-score: 0.767  auc roc:  0.833  tnr:  0.917 \n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
       "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
      ]
     },
     {
-     "name": "stderr",
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.041  presicion: 0.743  recall:0.667  f1-score: 0.688  auc roc:  0.667  tnr:  0.667 \n"
      ]
     },
     {
      "data": {
-      "image/png": "\n",
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 2 Axes>"
       ]
@@ -33223,145 +33173,60 @@
      "output_type": "display_data"
     },
     {
-     "name": "stderr",
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.373  presicion: 0.833  recall:0.833  f1-score: 0.833  auc roc:  0.778  tnr:  0.722 \n"
      ]
     },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      " ari: 0.310  presicion: 0.864  recall:0.833  f1-score: 0.800  auc roc:  0.667  tnr:  0.500 \n"
+      " ari: 0.195  presicion: 0.875  recall:0.750  f1-score: 0.767  auc roc:  0.833  tnr:  0.917 \n"
      ]
     },
     {
-     "name": "stderr",
+     "data": {
+      "image/png": "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\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: -0.079  presicion: 0.671  recall:0.500  f1-score: 0.529  auc roc:  0.556  tnr:  0.611 \n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
       "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
      ]
     },
     {
      "data": {
-      "image/png": "\n",
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 2 Axes>"
       ]
@@ -33375,152 +33240,76 @@
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      " ari: 0.310  presicion: 0.864  recall:0.833  f1-score: 0.800  auc roc:  0.667  tnr:  0.500 \n"
+      " ari: 0.041  presicion: 0.743  recall:0.667  f1-score: 0.688  auc roc:  0.667  tnr:  0.667 \n"
      ]
     },
     {
-     "name": "stderr",
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.195  presicion: 0.875  recall:0.750  f1-score: 0.767  auc roc:  0.833  tnr:  0.917 \n"
      ]
     },
     {
-     "name": "stderr",
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.177  presicion: 0.781  recall:0.750  f1-score: 0.761  auc roc:  0.722  tnr:  0.694 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.195  presicion: 0.875  recall:0.750  f1-score: 0.767  auc roc:  0.833  tnr:  0.917 \n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
       "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
      ]
     },
     {
      "data": {
-      "image/png": "\n",
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 2 Axes>"
       ]
@@ -33531,176 +33320,60 @@
      "output_type": "display_data"
     },
     {
-     "name": "stderr",
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.041  presicion: 0.743  recall:0.667  f1-score: 0.688  auc roc:  0.667  tnr:  0.667 \n"
      ]
     },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      " ari: 1.000  presicion: 1.000  recall:1.000  f1-score: 1.000  auc roc:  1.000  tnr:  1.000 \n"
+      " ari: 0.041  presicion: 0.857  recall:0.667  f1-score: 0.686  auc roc:  0.778  tnr:  0.889 \n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
       "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
      ]
     },
     {
-     "name": "stderr",
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.195  presicion: 0.875  recall:0.750  f1-score: 0.767  auc roc:  0.833  tnr:  0.917 \n"
      ]
     },
     {
      "data": {
-      "image/png": "\n",
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 2 Axes>"
       ]
@@ -33711,180 +33384,110 @@
      "output_type": "display_data"
     },
     {
-     "name": "stderr",
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.177  presicion: 0.781  recall:0.750  f1-score: 0.761  auc roc:  0.722  tnr:  0.694 \n"
      ]
     },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      " ari: 0.000  presicion: 0.562  recall:0.750  f1-score: 0.643  auc roc:  0.500  tnr:  0.250 \n"
+      " ari: -0.079  presicion: 0.671  recall:0.500  f1-score: 0.529  auc roc:  0.556  tnr:  0.611 \n"
      ]
     },
     {
-     "name": "stderr",
+     "data": {
+      "image/png": "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\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.401  presicion: 0.900  recall:0.833  f1-score: 0.844  auc roc:  0.889  tnr:  0.944 \n"
      ]
     },
     {
-     "name": "stderr",
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: -0.079  presicion: 0.586  recall:0.500  f1-score: 0.531  auc roc:  0.444  tnr:  0.389 \n"
      ]
     },
     {
-     "name": "stderr",
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.041  presicion: 0.743  recall:0.667  f1-score: 0.688  auc roc:  0.667  tnr:  0.667 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.177  presicion: 0.781  recall:0.750  f1-score: 0.761  auc roc:  0.722  tnr:  0.694 \n"
      ]
     },
     {
      "data": {
-      "image/png": "\n",
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 2 Axes>"
       ]
@@ -33894,153 +33497,99 @@
      },
      "output_type": "display_data"
     },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: -0.079  presicion: 0.671  recall:0.500  f1-score: 0.529  auc roc:  0.556  tnr:  0.611 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: -0.079  presicion: 0.671  recall:0.500  f1-score: 0.529  auc roc:  0.556  tnr:  0.611 \n"
+     ]
+    },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
       "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
      ]
     },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      " ari: 0.310  presicion: 0.864  recall:0.833  f1-score: 0.800  auc roc:  0.667  tnr:  0.500 \n"
+      " ari: 0.177  presicion: 0.781  recall:0.750  f1-score: 0.761  auc roc:  0.722  tnr:  0.694 \n"
      ]
     },
     {
-     "name": "stderr",
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.177  presicion: 0.781  recall:0.750  f1-score: 0.761  auc roc:  0.722  tnr:  0.694 \n"
      ]
     },
     {
-     "name": "stderr",
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.641  presicion: 0.925  recall:0.917  f1-score: 0.911  auc roc:  0.833  tnr:  0.750 \n"
      ]
     },
     {
      "data": {
-      "image/png": "\n",
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 2 Axes>"
       ]
@@ -34050,159 +33599,80 @@
      },
      "output_type": "display_data"
     },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.195  presicion: 0.875  recall:0.750  f1-score: 0.767  auc roc:  0.833  tnr:  0.917 \n"
+     ]
+    },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
       "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
      ]
     },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      " ari: 0.310  presicion: 0.864  recall:0.833  f1-score: 0.800  auc roc:  0.667  tnr:  0.500 \n"
+      " ari: 0.041  presicion: 0.857  recall:0.667  f1-score: 0.686  auc roc:  0.778  tnr:  0.889 \n"
      ]
     },
     {
-     "name": "stderr",
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.041  presicion: 0.743  recall:0.667  f1-score: 0.688  auc roc:  0.667  tnr:  0.667 \n"
      ]
     },
     {
-     "name": "stderr",
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.041  presicion: 0.857  recall:0.667  f1-score: 0.686  auc roc:  0.778  tnr:  0.889 \n"
      ]
     },
     {
      "data": {
-      "image/png": "\n",
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 2 Axes>"
       ]
@@ -34213,174 +33683,219 @@
      "output_type": "display_data"
     },
     {
-     "name": "stderr",
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.665  presicion: 0.938  recall:0.917  f1-score: 0.920  auc roc:  0.944  tnr:  0.972 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.195  presicion: 0.875  recall:0.750  f1-score: 0.767  auc roc:  0.833  tnr:  0.917 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.373  presicion: 0.833  recall:0.833  f1-score: 0.833  auc roc:  0.778  tnr:  0.722 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.401  presicion: 0.900  recall:0.833  f1-score: 0.844  auc roc:  0.889  tnr:  0.944 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: -0.003  presicion: 0.667  recall:0.667  f1-score: 0.667  auc roc:  0.556  tnr:  0.444 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: -0.079  presicion: 0.586  recall:0.500  f1-score: 0.531  auc roc:  0.444  tnr:  0.389 \n"
      ]
     },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      " ari: 0.310  presicion: 0.864  recall:0.833  f1-score: 0.800  auc roc:  0.667  tnr:  0.500 \n"
+      " ari: -0.043  presicion: 0.708  recall:0.583  f1-score: 0.611  auc roc:  0.611  tnr:  0.639 \n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
       "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
      ]
     },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.195  presicion: 0.875  recall:0.750  f1-score: 0.767  auc roc:  0.833  tnr:  0.917 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: -0.043  presicion: 0.708  recall:0.583  f1-score: 0.611  auc roc:  0.611  tnr:  0.639 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.401  presicion: 0.900  recall:0.833  f1-score: 0.844  auc roc:  0.889  tnr:  0.944 \n"
+     ]
+    },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
       "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
      ]
     },
     {
      "data": {
-      "image/png": "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\n",
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: -0.003  presicion: 0.667  recall:0.667  f1-score: 0.667  auc roc:  0.556  tnr:  0.444 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 2 Axes>"
       ]
@@ -34390,162 +33905,391 @@
      },
      "output_type": "display_data"
     },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.177  presicion: 0.781  recall:0.750  f1-score: 0.761  auc roc:  0.722  tnr:  0.694 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.177  presicion: 0.781  recall:0.750  f1-score: 0.761  auc roc:  0.722  tnr:  0.694 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.177  presicion: 0.781  recall:0.750  f1-score: 0.761  auc roc:  0.722  tnr:  0.694 \n"
+     ]
+    },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
       "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
      ]
     },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.401  presicion: 0.900  recall:0.833  f1-score: 0.844  auc roc:  0.889  tnr:  0.944 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.041  presicion: 0.743  recall:0.667  f1-score: 0.688  auc roc:  0.667  tnr:  0.667 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.041  presicion: 0.743  recall:0.667  f1-score: 0.688  auc roc:  0.667  tnr:  0.667 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.373  presicion: 0.833  recall:0.833  f1-score: 0.833  auc roc:  0.778  tnr:  0.722 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      " ari: 0.310  presicion: 0.864  recall:0.833  f1-score: 0.800  auc roc:  0.667  tnr:  0.500 \n"
+      " ari: -0.003  presicion: 0.667  recall:0.667  f1-score: 0.667  auc roc:  0.556  tnr:  0.444 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.195  presicion: 0.875  recall:0.750  f1-score: 0.767  auc roc:  0.833  tnr:  0.917 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.401  presicion: 0.900  recall:0.833  f1-score: 0.844  auc roc:  0.889  tnr:  0.944 \n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
       "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
      ]
     },
     {
-     "name": "stderr",
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: -0.043  presicion: 0.708  recall:0.583  f1-score: 0.611  auc roc:  0.611  tnr:  0.639 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: -0.043  presicion: 0.708  recall:0.583  f1-score: 0.611  auc roc:  0.611  tnr:  0.639 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.195  presicion: 0.875  recall:0.750  f1-score: 0.767  auc roc:  0.833  tnr:  0.917 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.665  presicion: 0.938  recall:0.917  f1-score: 0.920  auc roc:  0.944  tnr:  0.972 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: -0.079  presicion: 0.586  recall:0.500  f1-score: 0.531  auc roc:  0.444  tnr:  0.389 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: -0.043  presicion: 0.708  recall:0.583  f1-score: 0.611  auc roc:  0.611  tnr:  0.639 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: -0.066  presicion: 0.844  recall:0.583  f1-score: 0.598  auc roc:  0.722  tnr:  0.861 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: -0.066  presicion: 0.625  recall:0.583  f1-score: 0.601  auc roc:  0.500  tnr:  0.417 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: -0.066  presicion: 0.625  recall:0.583  f1-score: 0.601  auc roc:  0.500  tnr:  0.417 \n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: -0.079  presicion: 0.586  recall:0.500  f1-score: 0.531  auc roc:  0.444  tnr:  0.389 \n"
      ]
     },
     {
      "data": {
-      "image/png": "\n",
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 2 Axes>"
       ]
@@ -34556,176 +34300,79 @@
      "output_type": "display_data"
     },
     {
-     "name": "stderr",
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.041  presicion: 0.743  recall:0.667  f1-score: 0.688  auc roc:  0.667  tnr:  0.667 \n"
      ]
     },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      " ari: 0.310  presicion: 0.864  recall:0.833  f1-score: 0.800  auc roc:  0.667  tnr:  0.500 \n"
+      " ari: -0.079  presicion: 0.671  recall:0.500  f1-score: 0.529  auc roc:  0.556  tnr:  0.611 \n"
      ]
     },
     {
-     "name": "stderr",
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.041  presicion: 0.857  recall:0.667  f1-score: 0.686  auc roc:  0.778  tnr:  0.889 \n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
       "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
      ]
     },
     {
-     "name": "stderr",
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: 0.665  presicion: 0.938  recall:0.917  f1-score: 0.920  auc roc:  0.944  tnr:  0.972 \n"
      ]
     },
     {
      "data": {
-      "image/png": "\n",
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 2 Axes>"
       ]
@@ -34736,66 +34383,56 @@
      "output_type": "display_data"
     },
     {
-     "name": "stderr",
+     "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
+      " ari: -0.079  presicion: 0.671  recall:0.500  f1-score: 0.529  auc roc:  0.556  tnr:  0.611 \n"
      ]
     },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      " ari: 0.000  presicion: 0.562  recall:0.750  f1-score: 0.643  auc roc:  0.500  tnr:  0.250 \n"
+      " ari: -0.066  presicion: 0.844  recall:0.583  f1-score: 0.598  auc roc:  0.722  tnr:  0.861 \n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
-      "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
       "Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n"
      ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      " ari: 0.119  presicion: 0.725  recall:0.750  f1-score: 0.732  auc roc:  0.611  tnr:  0.472 \n"
+     ]
     }
    ],
    "source": [
@@ -34900,7 +34537,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 960,
+   "execution_count": 985,
    "id": "00747d7e",
    "metadata": {},
    "outputs": [
@@ -34908,12 +34545,12 @@
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      " ari: 0.349 ± 0.335 \n",
-      " presicion: 0.775 ± 0.177 \n",
-      " recall: 0.842 ± 0.085 \n",
-      " f1-score: 0.791 ± 0.130 \n",
-      " auc roc:  0.683 ±  0.171 \n",
-      " tnr:  0.525 ±  0.256 \n",
+      " ari: 0.135 ± 0.222 \n",
+      " presicion: 0.777 ± 0.113 \n",
+      " recall: 0.684 ± 0.134 \n",
+      " f1-score: 0.698 ± 0.128 \n",
+      " auc roc:  0.699 ±  0.150 \n",
+      " tnr:  0.715 ±  0.196 \n",
       "\n"
      ]
     }
@@ -34935,28 +34572,28 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 941,
+   "execution_count": 986,
    "id": "d09a26d2",
    "metadata": {},
    "outputs": [
     {
      "data": {
       "text/plain": [
-       "[array([0.41, 0.59]),\n",
-       " array([0.81, 0.19]),\n",
-       " array([0.   , 0.984]),\n",
-       " array([1., 0.]),\n",
-       " array([0.587, 0.413]),\n",
-       " array([1., 0.]),\n",
-       " array([1., 0.]),\n",
-       " array([0.587, 0.413]),\n",
-       " array([1., 0.]),\n",
+       "[array([1., 0.]),\n",
+       " array([0.   , 0.799]),\n",
+       " array([0.281, 0.719]),\n",
+       " array([0.001, 0.999]),\n",
+       " array([0.981, 0.019]),\n",
+       " array([0., 1.]),\n",
        " array([1., 0.]),\n",
+       " array([0.42, 0.58]),\n",
+       " array([0.878, 0.122]),\n",
+       " array([0.42, 0.58]),\n",
        " array([1., 0.]),\n",
        " array([1., 0.])]"
       ]
      },
-     "execution_count": 941,
+     "execution_count": 986,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -34964,315 +34601,60 @@
    "source": [
     "labels_pred_prob_sampled = [labels_prob[i, [0, -1]] for i in idx]\n",
     "\n",
-    "labels_pred_prob_sampled"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 946,
-   "id": "e3af3d50",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "array([[2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]])"
-      ]
-     },
-     "execution_count": 946,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": []
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 947,
-   "id": "40104020",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "array([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])"
-      ]
-     },
-     "execution_count": 947,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "labels_true_sampled_ = enc.fit_transform(np.asarray(labels_true_sampled).reshape(1, -1), )\n",
-    "\n",
-    "labels_true_sampled_"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 938,
-   "id": "5821283d",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "[2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
-      ]
-     },
-     "execution_count": 938,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "labels_true_sampled"
+    "labels_pred_prob_sampled\n"
    ]
   },
   {
    "cell_type": "code",
    "execution_count": null,
-   "id": "648bc1f7",
+   "id": "e3af3d50",
    "metadata": {},
    "outputs": [],
    "source": [
     "\n",
-    "auc_roc = sklearn.metrics.roc_auc_score(\n",
-    "    y_true=labels_true_sampled_, \n",
-    "    y_score=labels_pred_prob_sampled,\n",
-    "    multi_class=\"ovr\",\n",
-    "    average=\"weighted\"\n",
-    ")\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 929,
-   "id": "cb7d800f",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "[2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
-      ]
-     },
-     "execution_count": 929,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "\n",
-    "\n",
-    "labels_true_sampled"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 840,
-   "id": "63a2ba49",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "[2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
-      ]
-     },
-     "execution_count": 840,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "\n",
-    "\n",
-    "labels_pred_sampled\n",
     "\n"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 839,
-   "id": "7cc6a024",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "[2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
-      ]
-     },
-     "execution_count": 839,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "\n",
-    "labels_true_sampled\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 828,
-   "id": "927fa467",
+   "execution_count": null,
+   "id": "40104020",
    "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "(array([10, 10, 11]), array([19,  6, 19, 16, 14, 14,  7, 19,  9]))"
-      ]
-     },
-     "execution_count": 828,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
+   "outputs": [],
    "source": [
-    "d_idx = np.random.choice(dyslexics_idx, replace=True, size=3)\n",
-    "n_idx = np.random.choice(normal_idx, replace=True, size=9)\n",
+    "labels_true_sampled_ = enc.fit_transform(np.asarray(labels_true_sampled).reshape(1, -1), )\n",
     "\n",
-    "d_idx, n_idx\n",
+    "labels_true_sampled_\n",
     "\n"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 830,
-   "id": "305c962b",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "array([10, 10, 11, 19,  6, 19, 16, 14, 14,  7, 19,  9])"
-      ]
-     },
-     "execution_count": 830,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "\n",
-    "idx"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 710,
-   "id": "0018b4d1",
+   "execution_count": null,
+   "id": "5821283d",
    "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "[2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 2, 2, 2, 0, 0, 2, 0, 0, 2, 0]"
-      ]
-     },
-     "execution_count": 710,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
+   "outputs": [],
    "source": [
     "\n",
+    "labels_true_sampled\n",
     "\n",
-    "labels_true\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 796,
-   "id": "4175b4bf",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "['dyslexia',\n",
-       " 'dyslexia',\n",
-       " 'dyslexia',\n",
-       " 'dyslexia',\n",
-       " 'dyslexia',\n",
-       " 'dyslexia',\n",
-       " 'norm',\n",
-       " 'norm',\n",
-       " 'norm',\n",
-       " 'norm',\n",
-       " 'dyslexia',\n",
-       " 'dyslexia',\n",
-       " 'dyslexia',\n",
-       " 'norm',\n",
-       " 'norm',\n",
-       " 'dyslexia',\n",
-       " 'norm',\n",
-       " 'norm',\n",
-       " 'dyslexia',\n",
-       " 'norm']"
-      ]
-     },
-     "execution_count": 796,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "\n",
-    "ground_truth\n",
     "\n"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 720,
-   "id": "eb62dff2",
+   "execution_count": null,
+   "id": "3d08bc17",
    "metadata": {},
    "outputs": [],
    "source": [
-    "\n",
     "\n"
    ]
   },
-  {
-   "cell_type": "code",
-   "execution_count": 721,
-   "id": "748c31f5",
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "d: 0 dyslexia 2 0\n",
-      "d: 1 dyslexia 2 0\n",
-      "d: 2 dyslexia 2 0\n",
-      "d: 3 dyslexia 2 0\n",
-      "d: 4 dyslexia 2 2\n",
-      "d: 5 dyslexia 2 2\n",
-      "d: 10 dyslexia 2 0\n",
-      "d: 11 dyslexia 2 2\n",
-      "d: 12 dyslexia 2 0\n",
-      "d: 15 dyslexia 2 2\n",
-      "d: 18 dyslexia 2 0\n"
-     ]
-    }
-   ],
-   "source": [
-    "for d in d_idx:\n",
-    "    print(\"d:\", d, ground_truth[d], labels_true[d], labels_pred[d])"
-   ]
-  },
   {
    "cell_type": "code",
    "execution_count": null,
-   "id": "4a4b69e0",
+   "id": "78e53bdf",
    "metadata": {},
    "outputs": [],
    "source": []
diff --git a/DD_package/notebooks/d04_rnd_pred.ipynb b/DD_package/notebooks/d04_rnd_pred.ipynb
deleted file mode 100644
index 3495312..0000000
--- a/DD_package/notebooks/d04_rnd_pred.ipynb
+++ /dev/null
@@ -1,1339 +0,0 @@
-{
- "cells": [
-  {
-   "cell_type": "code",
-   "execution_count": 62,
-   "id": "1b9d2cfc",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "\n",
-    "import sys\n",
-    "import shap \n",
-    "import pickle\n",
-    "import sklearn \n",
-    "import numpy as np\n",
-    "import pandas as pd\n",
-    "from pathlib import Path\n",
-    "import matplotlib.pyplot as plt\n",
-    "from types import SimpleNamespace\n",
-    "\n",
-    "from sklearn.preprocessing import OneHotEncoder\n",
-    "\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 2,
-   "id": "13a8aa90",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "\n",
-    "\n",
-    "\n",
-    "sys.path.append(\"../\")\n",
-    "\n",
-    "from dd_package.data.dyslexia_data import DyslexiaData\n",
-    "from dd_package.data.preprocess import preprocess_data\n",
-    "\n",
-    "from dd_package.models.regression_estimators import RegressionEstimators\n",
-    "\n",
-    "from dd_package.common.utils import save_a_dict, load_a_dict, print_the_evaluated_results\n",
-    "\n",
-    "from dd_package.data.preprocess import minmax_standardizer_\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 3,
-   "id": "0e0c1801",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "\n",
-    "configs = {\n",
-    "    \"models_path\": Path(\"/home/soroosh/Programmes/DD/Models\"),\n",
-    "    \"results_path\": Path(\"/home/soroosh/Programmes/DD/Results\"),\n",
-    "    \"figures_path\": Path(\"/home/soroosh/Programmes/DD/Figures\"),\n",
-    "    \"params_path\": Path(\"/home/soroosh/Programmes/DD//Params\"),\n",
-    "    \"n_repeats\": 10,\n",
-    "    \"n_splits\": 5,\n",
-    "}\n",
-    "\n",
-    "configs = SimpleNamespace(**configs)\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 4,
-   "id": "84bf7b99",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "\n",
-    "data_name=\"dd_fix_demo\"\n",
-    "\n",
-    "estimator_name = \"mlp_cls\"\n",
-    "to_shuffle = True\n",
-    "to_exclude_at_risk = 0\n",
-    "\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 5,
-   "id": "a27a1afd",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "\n",
-    "specifier = data_name + \"-\" + estimator_name + \\\n",
-    "\"--shuffled:\" + str(to_shuffle) + \\\n",
-    "\"--exclude at risk:\" + str(to_exclude_at_risk)\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 6,
-   "id": "b6a10bd6",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "configs.specifier = specifier\n",
-    "configs.data_name = data_name\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 7,
-   "id": "a569c1c7",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "'dd_fix_demo-mlp_cls--shuffled:True--exclude at risk:0'"
-      ]
-     },
-     "execution_count": 7,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "\n",
-    "configs.specifier\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "a334f200",
-   "metadata": {},
-   "source": [
-    "# demo-Fcls-mm:\n",
-    "\n",
-    "- Chosen model: **MLP**\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "94f70fb3",
-   "metadata": {},
-   "source": [
-    "## Load Data"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 8,
-   "id": "50b8b009",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "\n",
-    "\n",
-    "dd = DyslexiaData(path=\"../../datasets/\", n_repeats=5)\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 9,
-   "id": "ae3f4789",
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Loading Demo data: \n",
-      "  dyslexia (72, 9)\n",
-      "  norm (213, 9)\n",
-      "  risk (22, 9)\n",
-      " \n",
-      "Loading Fixation report data:\n",
-      "  dyslexia (59770, 7)\n",
-      "  norm (139507, 7)\n",
-      "  risk (26073, 7)\n",
-      " \n"
-     ]
-    }
-   ],
-   "source": [
-    "\n",
-    "\n",
-    "if data_name == \"dd_demo\":\n",
-    "    # dict of dicts, s.t each dict contains pd.df of a class, e.g normal\n",
-    "    _ = dd.get_demo_datasets()  # demos and phonological (which is initially part of demo)\n",
-    "    demo_phono = dd.concat_classes_demo()\n",
-    "\n",
-    "    # The optimize way to exclude at-risk class\n",
-    "    if to_exclude_at_risk == 1:\n",
-    "        to_exclude_at_risk = True\n",
-    "        demo_phono = demo_phono.loc[demo_phono.Group != 2]\n",
-    "\n",
-    "    df_data_to_use = demo_phono.loc[:, [\n",
-    "                                           'Group', 'SubjectID', 'Sex', 'Grade', 'Age', 'IQ', 'Reading_speed',\n",
-    "                                       ]]\n",
-    "    c_features = ['Sex', 'Grade', ]\n",
-    "    indicators = ['SubjectID', ]\n",
-    "    targets = [\"Group\", \"Reading_speed\", ]\n",
-    "\n",
-    "elif data_name == \"dd_fix_demo\":\n",
-    "    # dict of dicts, s.t each dict contains pd.df of a class, e.g normal\n",
-    "    _ = dd.get_demo_datasets()  # demos\n",
-    "    _ = dd.get_fix_datasets()  # fixes\n",
-    "\n",
-    "    # concatenate pd.dfs to a pd.df\n",
-    "    fix = dd.concat_classes_fix()\n",
-    "    demo_phono = dd.concat_classes_demo()\n",
-    "\n",
-    "    # The optimize way to exclude at-risk class\n",
-    "    if to_exclude_at_risk == 1:\n",
-    "        to_exclude_at_risk = True\n",
-    "        fix = fix.loc[fix.Group != 2]\n",
-    "        demo_phono = demo_phono.loc[demo_phono.Group != 2]\n",
-    "\n",
-    "    fix_demo = dd.concat_dfs(\n",
-    "        df1=fix,\n",
-    "        df2=demo_phono,\n",
-    "        features1=fix.columns,\n",
-    "        features2=[\n",
-    "            \"Sex\", \"Grade\", \"Age\", \"IQ\", \"Reading_speed\",\n",
-    "        ],\n",
-    "    )\n",
-    "\n",
-    "    df_data_to_use = fix_demo\n",
-    "    c_features = ['Sex', 'Grade', ]\n",
-    "    indicators = [\n",
-    "        'SubjectID', 'Sentence_ID', 'Word_Number',\n",
-    "    ]\n",
-    "\n",
-    "    targets = [\"Group\", \"Reading_speed\", ]\n",
-    "    \n",
-    "elif data_name == \"dd_fix\":\n",
-    "\n",
-    "    # dict of dicts, s.t each dict contains pd.df of a class, e.g normal\n",
-    "    _ = dd.get_fix_datasets()  # fixes\n",
-    "    # concatenate pd.dfs to a pd.df\n",
-    "    fix = dd.concat_classes_fix()\n",
-    "\n",
-    "    # The optimize way to exclude at-risk class\n",
-    "    if to_exclude_at_risk == 1:\n",
-    "        to_exclude_at_risk = True\n",
-    "        fix = fix.loc[fix.Group != 2]\n",
-    "\n",
-    "    df_data_to_use = fix\n",
-    "    c_features = None\n",
-    "    indicators = [\n",
-    "        'SubjectID', 'Sentence_ID', 'Word_Number',\n",
-    "    ]\n",
-    "\n",
-    "    targets = [\"Group\", ]\n",
-    "    \n",
-    "    "
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 10,
-   "id": "d5c67800",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>Group</th>\n",
-       "      <th>SubjectID</th>\n",
-       "      <th>Sentence_ID</th>\n",
-       "      <th>Word_Number</th>\n",
-       "      <th>FIX_X</th>\n",
-       "      <th>FIX_Y</th>\n",
-       "      <th>FIX_DURATION</th>\n",
-       "      <th>Sex</th>\n",
-       "      <th>Grade</th>\n",
-       "      <th>Age</th>\n",
-       "      <th>IQ</th>\n",
-       "      <th>Reading_speed</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>1</td>\n",
-       "      <td>10</td>\n",
-       "      <td>4</td>\n",
-       "      <td>1</td>\n",
-       "      <td>177.3</td>\n",
-       "      <td>531.8</td>\n",
-       "      <td>219.0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>4</td>\n",
-       "      <td>10</td>\n",
-       "      <td>23</td>\n",
-       "      <td>102.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>1</td>\n",
-       "      <td>10</td>\n",
-       "      <td>4</td>\n",
-       "      <td>2</td>\n",
-       "      <td>200.5</td>\n",
-       "      <td>545.2</td>\n",
-       "      <td>247.0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>4</td>\n",
-       "      <td>10</td>\n",
-       "      <td>23</td>\n",
-       "      <td>102.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>1</td>\n",
-       "      <td>10</td>\n",
-       "      <td>4</td>\n",
-       "      <td>3</td>\n",
-       "      <td>282.7</td>\n",
-       "      <td>542.4</td>\n",
-       "      <td>261.0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>4</td>\n",
-       "      <td>10</td>\n",
-       "      <td>23</td>\n",
-       "      <td>102.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>1</td>\n",
-       "      <td>10</td>\n",
-       "      <td>4</td>\n",
-       "      <td>4</td>\n",
-       "      <td>358.1</td>\n",
-       "      <td>545.5</td>\n",
-       "      <td>268.0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>4</td>\n",
-       "      <td>10</td>\n",
-       "      <td>23</td>\n",
-       "      <td>102.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>4</th>\n",
-       "      <td>1</td>\n",
-       "      <td>10</td>\n",
-       "      <td>4</td>\n",
-       "      <td>4</td>\n",
-       "      <td>392.8</td>\n",
-       "      <td>536.3</td>\n",
-       "      <td>129.0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>4</td>\n",
-       "      <td>10</td>\n",
-       "      <td>23</td>\n",
-       "      <td>102.0</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "   Group SubjectID  Sentence_ID  Word_Number  FIX_X  FIX_Y  FIX_DURATION  Sex  \\\n",
-       "0      1        10            4            1  177.3  531.8         219.0    1   \n",
-       "1      1        10            4            2  200.5  545.2         247.0    1   \n",
-       "2      1        10            4            3  282.7  542.4         261.0    1   \n",
-       "3      1        10            4            4  358.1  545.5         268.0    1   \n",
-       "4      1        10            4            4  392.8  536.3         129.0    1   \n",
-       "\n",
-       "   Grade  Age  IQ  Reading_speed  \n",
-       "0      4   10  23          102.0  \n",
-       "1      4   10  23          102.0  \n",
-       "2      4   10  23          102.0  \n",
-       "3      4   10  23          102.0  \n",
-       "4      4   10  23          102.0  "
-      ]
-     },
-     "execution_count": 10,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "\n",
-    "df_data_to_use.head()\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 11,
-   "id": "efa773a8",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "\n",
-    "\n",
-    "x_org, y_org = dd.get_onehot_features_targets(\n",
-    "    data=df_data_to_use,\n",
-    "    c_features=c_features,\n",
-    "    indicators=indicators,\n",
-    "    targets=targets,\n",
-    ")\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 12,
-   "id": "5ee1201d",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>FIX_DURATION</th>\n",
-       "      <th>Grade_4</th>\n",
-       "      <th>Sex_2</th>\n",
-       "      <th>FIX_X</th>\n",
-       "      <th>IQ</th>\n",
-       "      <th>Grade_6</th>\n",
-       "      <th>Grade_5</th>\n",
-       "      <th>FIX_Y</th>\n",
-       "      <th>Age</th>\n",
-       "      <th>Grade_2</th>\n",
-       "      <th>Grade_3</th>\n",
-       "      <th>Sex_1</th>\n",
-       "      <th>Grade_1</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>219.0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>177.3</td>\n",
-       "      <td>23</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>531.8</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>247.0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>200.5</td>\n",
-       "      <td>23</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>545.2</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>261.0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>282.7</td>\n",
-       "      <td>23</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>542.4</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>268.0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>358.1</td>\n",
-       "      <td>23</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>545.5</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>4</th>\n",
-       "      <td>129.0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>392.8</td>\n",
-       "      <td>23</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>536.3</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>0</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "   FIX_DURATION  Grade_4  Sex_2  FIX_X  IQ  Grade_6  Grade_5  FIX_Y  Age  \\\n",
-       "0         219.0        1      0  177.3  23        0        0  531.8   10   \n",
-       "1         247.0        1      0  200.5  23        0        0  545.2   10   \n",
-       "2         261.0        1      0  282.7  23        0        0  542.4   10   \n",
-       "3         268.0        1      0  358.1  23        0        0  545.5   10   \n",
-       "4         129.0        1      0  392.8  23        0        0  536.3   10   \n",
-       "\n",
-       "   Grade_2  Grade_3  Sex_1  Grade_1  \n",
-       "0        0        0      1        0  \n",
-       "1        0        0      1        0  \n",
-       "2        0        0      1        0  \n",
-       "3        0        0      1        0  \n",
-       "4        0        0      1        0  "
-      ]
-     },
-     "execution_count": 12,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "\n",
-    "x_org.head()\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 13,
-   "id": "d4beffc0",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>Group</th>\n",
-       "      <th>Reading_speed</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>1</td>\n",
-       "      <td>102.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>1</td>\n",
-       "      <td>102.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>1</td>\n",
-       "      <td>102.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>1</td>\n",
-       "      <td>102.0</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>4</th>\n",
-       "      <td>1</td>\n",
-       "      <td>102.0</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "   Group  Reading_speed\n",
-       "0      1          102.0\n",
-       "1      1          102.0\n",
-       "2      1          102.0\n",
-       "3      1          102.0\n",
-       "4      1          102.0"
-      ]
-     },
-     "execution_count": 13,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "\n",
-    "y_org.head()\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 14,
-   "id": "8ab4345f",
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "learning_method: classification\n"
-     ]
-    }
-   ],
-   "source": [
-    "\n",
-    "\n",
-    "estimator_name = \"MLP_cls\"\n",
-    "\n",
-    "if estimator_name.split(\"_\")[-1] == \"reg\":\n",
-    "    learning_method = \"regression\"\n",
-    "    y = y_org.Reading_speed.values\n",
-    "\n",
-    "elif estimator_name.split(\"_\")[-1] == \"cls\":\n",
-    "    learning_method = \"classification\"\n",
-    "    y = y_org.Group.values\n",
-    "\n",
-    "elif estimator_name.split(\"_\")[-1] == \"clu\":\n",
-    "    from dd_package.models.clustering_estimators import ClusteringEstimators\n",
-    "    y = y_org.Group.values\n",
-    "else:\n",
-    "    assert False, \"Undefined algorithm and thus undefined target values\"\n",
-    "    \n",
-    "print(\"learning_method:\", learning_method)\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 15,
-   "id": "25adc324",
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "pre-processing: mm\n",
-      "Preprocessed data shape: (225350, 13)\n"
-     ]
-    }
-   ],
-   "source": [
-    "\n",
-    "x = preprocess_data(x=x_org, pp=\"mm\")  # only x is standardized\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 16,
-   "id": "3fc3d58c",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "\n",
-    "data = dd.get_stratified_train_test_splits(\n",
-    "        x=x, y=y,\n",
-    "        labels=y_org.Group.values,\n",
-    "        to_shuffle=to_shuffle,\n",
-    "        n_splits=10\n",
-    "    )\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "eb0a9117",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "\n",
-    "data\n"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "f918b5f5",
-   "metadata": {},
-   "source": [
-    "## Load the tuned parameters"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 18,
-   "id": "0116ecaf",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "\n",
-    "\n",
-    "class_names = ['Norm', 'At-risk', 'Dyslexic']\n"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "35debec8",
-   "metadata": {},
-   "source": [
-    "## Previously obtained results"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 19,
-   "id": "74d19bfd",
-   "metadata": {
-    "scrolled": true
-   },
-   "outputs": [
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 432x288 with 2 Axes>"
-      ]
-     },
-     "metadata": {
-      "needs_background": "light"
-     },
-     "output_type": "display_data"
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Kappa: 0.8347400437872468 AUC ROC: 0.9825072610728137\n"
-     ]
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 432x288 with 2 Axes>"
-      ]
-     },
-     "metadata": {
-      "needs_background": "light"
-     },
-     "output_type": "display_data"
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Kappa: 0.8388978522946917 AUC ROC: 0.9829182453627607\n"
-     ]
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 432x288 with 2 Axes>"
-      ]
-     },
-     "metadata": {
-      "needs_background": "light"
-     },
-     "output_type": "display_data"
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Kappa: 0.832869081391151 AUC ROC: 0.9823166765651608\n"
-     ]
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 432x288 with 2 Axes>"
-      ]
-     },
-     "metadata": {
-      "needs_background": "light"
-     },
-     "output_type": "display_data"
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Kappa: 0.8369422822490217 AUC ROC: 0.9828148640073884\n"
-     ]
-    },
-    {
-     "data": {
-      "image/png": "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\n",
-      "text/plain": [
-       "<Figure size 432x288 with 2 Axes>"
-      ]
-     },
-     "metadata": {
-      "needs_background": "light"
-     },
-     "output_type": "display_data"
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Kappa: 0.8389059114142479 AUC ROC: 0.9829848306845811\n"
-     ]
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 432x288 with 2 Axes>"
-      ]
-     },
-     "metadata": {
-      "needs_background": "light"
-     },
-     "output_type": "display_data"
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Kappa: 0.829841840423335 AUC ROC: 0.9823257928381303\n"
-     ]
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 432x288 with 2 Axes>"
-      ]
-     },
-     "metadata": {
-      "needs_background": "light"
-     },
-     "output_type": "display_data"
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Kappa: 0.8382473045222396 AUC ROC: 0.9827749230027788\n"
-     ]
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 432x288 with 2 Axes>"
-      ]
-     },
-     "metadata": {
-      "needs_background": "light"
-     },
-     "output_type": "display_data"
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Kappa: 0.8310664313696852 AUC ROC: 0.9821932698756151\n"
-     ]
-    },
-    {
-     "data": {
-      "image/png": "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\n",
-      "text/plain": [
-       "<Figure size 432x288 with 2 Axes>"
-      ]
-     },
-     "metadata": {
-      "needs_background": "light"
-     },
-     "output_type": "display_data"
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Kappa: 0.8368983636632326 AUC ROC: 0.9830666923198533\n"
-     ]
-    },
-    {
-     "data": {
-      "image/png": "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\n",
-      "text/plain": [
-       "<Figure size 432x288 with 2 Axes>"
-      ]
-     },
-     "metadata": {
-      "needs_background": "light"
-     },
-     "output_type": "display_data"
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Kappa: 0.8352159256796329 AUC ROC: 0.9824885993933525\n"
-     ]
-    }
-   ],
-   "source": [
-    "\n",
-    "results = load_a_dict(\n",
-    "    name=configs.specifier,\n",
-    "    save_path=configs.results_path,\n",
-    "        )\n",
-    "\n",
-    "\n",
-    "\n",
-    "for i in range(1, 11):\n",
-    "    i = str(i)\n",
-    "    y_test_ = results[i][\"y_test\"]\n",
-    "    y_pred_ = results[i][\"y_pred\"]\n",
-    "    y_prob_ = results[i][\"y_pred_prob\"]\n",
-    "    \n",
-    "    cm = sklearn.metrics.confusion_matrix(\n",
-    "    y_true=y_test_, \n",
-    "    y_pred=y_pred_\n",
-    "    )\n",
-    "    \n",
-    "    disp = sklearn.metrics.ConfusionMatrixDisplay(confusion_matrix=cm,\n",
-    "                              display_labels=class_names\n",
-    "                             )\n",
-    "    disp.plot()\n",
-    "    plt.show()\n",
-    "    \n",
-    "    \n",
-    "    print(\n",
-    "        \"Kappa:\", sklearn.metrics.cohen_kappa_score(y1=y_test_, y2=y_pred_),\n",
-    "        \n",
-    "        \"AUC ROC:\", sklearn.metrics.roc_auc_score(y_test_, y_prob_,\n",
-    "                                                  multi_class=\"ovr\",\n",
-    "                                                  average=\"weighted\")\n",
-    "    )\n",
-    "\n",
-    "\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "f6716aef",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "\n",
-    "\n",
-    "\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 76,
-   "id": "7963537a",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "array([1, 1, 1, ..., 3, 3, 3])"
-      ]
-     },
-     "execution_count": 76,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "\n",
-    "y_test_\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 78,
-   "id": "6931ea1e",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "\n",
-    "ROC, PRE, REC, FSC, TNR, ARI = [], [], [], [], [], []\n",
-    "\n",
-    "\n",
-    "for r in range(1000):\n",
-    "    \n",
-    "    labels_true_sampled = np.asarray([i for i in labels_true if i!= 2])\n",
-    "    labels_pred_sampled = np.random.choice([1, 3], replace=True, size=len(labels_true_sampled))\n",
-    "    \n",
-    "    \n",
-    "    \n",
-    "    cm = sklearn.metrics.confusion_matrix(\n",
-    "    y_true=labels_true_sampled, \n",
-    "    y_pred=labels_pred_sampled\n",
-    "    )\n",
-    "\n",
-    "\n",
-    "    fp = cm.sum(axis=0) - np.diag(cm)\n",
-    "    fn = cm.sum(axis=1) - np.diag(cm)\n",
-    "    tp = np.diag(cm)\n",
-    "    tn = cm.sum() - (fp + fn + tp)\n",
-    "    tnr = tn.astype(float) / (tn.astype(float) + fp.astype(float))\n",
-    "    _, support = np.unique(labels_true_sampled, return_counts=True)\n",
-    "    tnr = np.dot(tnr, support)/sum(support)\n",
-    "\n",
-    "\n",
-    "    pre = sklearn.metrics.precision_score(\n",
-    "        labels_true_sampled, labels_pred_sampled, average='weighted'\n",
-    "    )\n",
-    "    rec = sklearn.metrics.recall_score(\n",
-    "        labels_true_sampled, labels_pred_sampled, average='weighted'\n",
-    "    )\n",
-    "\n",
-    "    fsc = sklearn.metrics.f1_score(\n",
-    "        labels_true_sampled, labels_pred_sampled, average='weighted'\n",
-    "    )\n",
-    "\n",
-    "    ari = sklearn.metrics.adjusted_rand_score(\n",
-    "        labels_true_sampled, labels_pred_sampled\n",
-    "    )\n",
-    "    \n",
-    "    # to compute ROC_AUC\n",
-    "    try:\n",
-    "        labels_true_sampled.shape[1]\n",
-    "        labels_true_sampled_ = labels_true_sampled\n",
-    "    except:\n",
-    "        enc = OneHotEncoder(sparse=False)\n",
-    "        labels_true_sampled_ = labels_true_sampled.reshape(-1, 1)\n",
-    "        labels_true_sampled_ = enc.fit_transform(labels_true_sampled_)\n",
-    "        \n",
-    "        labels_pred_sampled_ = labels_pred_sampled.reshape(-1, 1)\n",
-    "        labels_pred_sampled_ = enc.fit_transform(labels_pred_sampled_)\n",
-    "        \n",
-    "\n",
-    "    \n",
-    "    auc_roc = sklearn.metrics.roc_auc_score(\n",
-    "        labels_true_sampled_, labels_pred_sampled_,\n",
-    "        multi_class=\"ovr\",\n",
-    "        average=\"weighted\"\n",
-    "    )\n",
-    "\n",
-    "\n",
-    "\n",
-    "    ROC.append(auc_roc)\n",
-    "    PRE.append(pre)\n",
-    "    REC.append(rec)\n",
-    "    FSC.append(fsc)\n",
-    "    TNR.append(tnr)\n",
-    "    ARI.append(ari)\n",
-    "    \n",
-    "#     if r % 50 == 0:\n",
-    "        \n",
-    "#         disp = sklearn.metrics.ConfusionMatrixDisplay(confusion_matrix=cm,\n",
-    "#                               display_labels=[\"normal\", \"dyslexic\"]\n",
-    "#                              )\n",
-    "\n",
-    "\n",
-    "\n",
-    "#         disp.plot()\n",
-    "#         plt.show()\n",
-    "\n",
-    "#         print(\n",
-    "#             f\" ari: {ari:.3f} \"\n",
-    "#             f\" presicion: {pre:.3f} \"\n",
-    "#             f\" recall:{rec:.3f} \"\n",
-    "#             f\" f1-score: {fsc:.3f} \"\n",
-    "#             f\" auc roc: {auc_roc: .3f} \"\n",
-    "#             f\" tnr: {tnr: .3f} \"\n",
-    "#         )\n",
-    "    \n",
-    "\n",
-    "    \n",
-    "    \n",
-    "ROC = np.asarray(ROC)\n",
-    "PRE = np.asarray(PRE)\n",
-    "REC = np.asarray(REC)\n",
-    "\n",
-    "FSC = np.asarray(FSC)\n",
-    "\n",
-    "TNR = np.asarray(TNR)\n",
-    "ARI = np.asarray(ARI)\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 79,
-   "id": "0374776d",
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      " ari: -0.000 ± 0.000 \n",
-      " presicion: 0.580 ± 0.003 \n",
-      " recall: 0.500 ± 0.003 \n",
-      " f1-score: 0.521 0.003 \n",
-      " auc roc:  0.500 ±  0.004 \n",
-      " tnr:  0.500 ±  0.005 \n",
-      "\n"
-     ]
-    }
-   ],
-   "source": [
-    "\n",
-    "\n",
-    "\n",
-    "print(\n",
-    "    f\" ari: {ARI.mean():.3f} ± {ARI.std():.3f} \\n\"\n",
-    "    f\" presicion: {PRE.mean():.3f} ± {PRE.std():.3f} \\n\"\n",
-    "    f\" recall: {REC.mean():.3f} ± {REC.std():.3f} \\n\"\n",
-    "    f\" f1-score: {FSC.mean():.3f} {FSC.std():.3f} \\n\"\n",
-    "    f\" auc roc: {ROC.mean(): .3f} ± {ROC.std(): .3f} \\n\"\n",
-    "    f\" tnr: {TNR.mean(): .3f} ± {TNR.std(): .3f} \\n\"\n",
-    ")\n",
-    "\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "c65f8162",
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "58c84d0f",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "\n",
-    "\n",
-    "\n",
-    "labels_pred_sampled\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "5dca37f1",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "\n",
-    "labels_true_sampled\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "551fc528",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "d_idx = np.random.choice(dyslexics_idx, replace=True, size=3)\n",
-    "n_idx = np.random.choice(normal_idx, replace=True, size=9)\n",
-    "\n",
-    "d_idx, n_idx\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "5bc514b3",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "\n",
-    "idx"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "0018b4d1",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "\n",
-    "\n",
-    "labels_true\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "4175b4bf",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "\n",
-    "ground_truth\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "9da62044",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "1a807482",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "for d in d_idx:\n",
-    "    print(\"d:\", d, ground_truth[d], labels_true[d], labels_pred[d])"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "f7979c11",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "\n",
-    "\n",
-    "\n"
-   ]
-  }
- ],
- "metadata": {
-  "kernelspec": {
-   "display_name": "venv_Jan2022",
-   "language": "python",
-   "name": "venv_jan2022"
-  },
-  "language_info": {
-   "codemirror_mode": {
-    "name": "ipython",
-    "version": 3
-   },
-   "file_extension": ".py",
-   "mimetype": "text/x-python",
-   "name": "python",
-   "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython3",
-   "version": "3.9.7"
-  }
- },
- "nbformat": 4,
- "nbformat_minor": 5
-}
diff --git a/DD_package/notebooks/e02_debugging_playground.ipynb b/DD_package/notebooks/e02_debugging_playground.ipynb
index fe1e20f..d4bbea8 100644
--- a/DD_package/notebooks/e02_debugging_playground.ipynb
+++ b/DD_package/notebooks/e02_debugging_playground.ipynb
@@ -2,7 +2,7 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 1,
    "id": "587852fe",
    "metadata": {},
    "outputs": [],
@@ -26,15 +26,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
-   "id": "fc0b3ba2",
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 2,
    "id": "a38b959d",
    "metadata": {},
    "outputs": [],
@@ -55,7 +47,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 3,
    "id": "d43eb2d2",
    "metadata": {},
    "outputs": [],
@@ -73,7 +65,7 @@
     "\n",
     "configs = SimpleNamespace(**configs)\n",
     "\n",
-    "estimator_name = \"SV_cls\"\n",
+    "estimator_name = \"sv_cls\"\n",
     "data_name = \"DD_demo\"\n",
     "to_shuffle = True\n",
     "learning_method = \"classification\"\n",
@@ -86,15 +78,49 @@
     "# configs.project = \"DD_test\"\n",
     "# configs.group = \"debug\"\n",
     "\n",
-    "\n"
+    "\n",
+    "configs.run = 1"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 4,
+   "id": "f5b25258",
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "'DD_demo-sv_cls-True'"
+      ]
+     },
+     "execution_count": 4,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "specifier"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 5,
    "id": "e9f7d645",
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Loading Demo data: \n",
+      "  dyslexia (72, 9)\n",
+      "  norm (213, 9)\n",
+      "  risk (22, 9)\n",
+      " \n"
+     ]
+    }
+   ],
    "source": [
     "\n",
     "dd = DyslexiaData(path=\"../../datasets/\", n_repeats=5)\n",
@@ -108,18 +134,239 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
-   "id": "713e32f0",
+   "execution_count": 6,
+   "id": "4261052c",
    "metadata": {},
-   "outputs": [],
-   "source": []
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Loading Fixation report data:\n",
+      "  dyslexia (59770, 7)\n",
+      "  norm (139507, 7)\n",
+      "  risk (26073, 7)\n",
+      " \n"
+     ]
+    }
+   ],
+   "source": [
+    "\n",
+    "fixes = dd.get_fix_datasets()\n",
+    "\n"
+   ]
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 7,
    "id": "9171d483",
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>Group</th>\n",
+       "      <th>SubjectID</th>\n",
+       "      <th>Sex</th>\n",
+       "      <th>Grade</th>\n",
+       "      <th>Age</th>\n",
+       "      <th>IQ</th>\n",
+       "      <th>Reading_speed</th>\n",
+       "      <th>Sound_detection</th>\n",
+       "      <th>Sound_change</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>1</td>\n",
+       "      <td>10</td>\n",
+       "      <td>1</td>\n",
+       "      <td>4</td>\n",
+       "      <td>10.0</td>\n",
+       "      <td>23.0</td>\n",
+       "      <td>102.0</td>\n",
+       "      <td>0.620000</td>\n",
+       "      <td>0.910000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>1</td>\n",
+       "      <td>108</td>\n",
+       "      <td>1</td>\n",
+       "      <td>4</td>\n",
+       "      <td>10.0</td>\n",
+       "      <td>34.0</td>\n",
+       "      <td>139.0</td>\n",
+       "      <td>1.000000</td>\n",
+       "      <td>0.950000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>1</td>\n",
+       "      <td>11</td>\n",
+       "      <td>2</td>\n",
+       "      <td>4</td>\n",
+       "      <td>10.0</td>\n",
+       "      <td>34.0</td>\n",
+       "      <td>110.0</td>\n",
+       "      <td>1.000000</td>\n",
+       "      <td>0.790000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>1</td>\n",
+       "      <td>11_norm1</td>\n",
+       "      <td>1</td>\n",
+       "      <td>2</td>\n",
+       "      <td>9.0</td>\n",
+       "      <td>28.0</td>\n",
+       "      <td>71.0</td>\n",
+       "      <td>0.950000</td>\n",
+       "      <td>0.910000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>1</td>\n",
+       "      <td>12_norm1</td>\n",
+       "      <td>2</td>\n",
+       "      <td>2</td>\n",
+       "      <td>8.0</td>\n",
+       "      <td>32.0</td>\n",
+       "      <td>60.0</td>\n",
+       "      <td>0.950000</td>\n",
+       "      <td>0.620000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>212</th>\n",
+       "      <td>1</td>\n",
+       "      <td>varya_norm1</td>\n",
+       "      <td>1</td>\n",
+       "      <td>1</td>\n",
+       "      <td>7.0</td>\n",
+       "      <td>34.0</td>\n",
+       "      <td>56.0</td>\n",
+       "      <td>1.000000</td>\n",
+       "      <td>0.920000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>68</th>\n",
+       "      <td>3</td>\n",
+       "      <td>vpa21</td>\n",
+       "      <td>2</td>\n",
+       "      <td>1</td>\n",
+       "      <td>7.0</td>\n",
+       "      <td>32.0</td>\n",
+       "      <td>22.0</td>\n",
+       "      <td>0.916667</td>\n",
+       "      <td>0.916667</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>69</th>\n",
+       "      <td>3</td>\n",
+       "      <td>yea20</td>\n",
+       "      <td>1</td>\n",
+       "      <td>3</td>\n",
+       "      <td>9.0</td>\n",
+       "      <td>34.0</td>\n",
+       "      <td>20.0</td>\n",
+       "      <td>0.875000</td>\n",
+       "      <td>0.500000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>70</th>\n",
+       "      <td>3</td>\n",
+       "      <td>zaa15</td>\n",
+       "      <td>1</td>\n",
+       "      <td>3</td>\n",
+       "      <td>10.0</td>\n",
+       "      <td>31.0</td>\n",
+       "      <td>78.0</td>\n",
+       "      <td>0.958333</td>\n",
+       "      <td>0.916667</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>71</th>\n",
+       "      <td>3</td>\n",
+       "      <td>zrs09</td>\n",
+       "      <td>2</td>\n",
+       "      <td>3</td>\n",
+       "      <td>10.0</td>\n",
+       "      <td>32.0</td>\n",
+       "      <td>97.0</td>\n",
+       "      <td>0.956522</td>\n",
+       "      <td>0.875000</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>307 rows × 9 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "     Group    SubjectID  Sex  Grade   Age    IQ  Reading_speed  \\\n",
+       "0        1           10    1      4  10.0  23.0          102.0   \n",
+       "1        1          108    1      4  10.0  34.0          139.0   \n",
+       "2        1           11    2      4  10.0  34.0          110.0   \n",
+       "3        1     11_norm1    1      2   9.0  28.0           71.0   \n",
+       "4        1     12_norm1    2      2   8.0  32.0           60.0   \n",
+       "..     ...          ...  ...    ...   ...   ...            ...   \n",
+       "212      1  varya_norm1    1      1   7.0  34.0           56.0   \n",
+       "68       3        vpa21    2      1   7.0  32.0           22.0   \n",
+       "69       3        yea20    1      3   9.0  34.0           20.0   \n",
+       "70       3        zaa15    1      3  10.0  31.0           78.0   \n",
+       "71       3        zrs09    2      3  10.0  32.0           97.0   \n",
+       "\n",
+       "     Sound_detection  Sound_change  \n",
+       "0           0.620000      0.910000  \n",
+       "1           1.000000      0.950000  \n",
+       "2           1.000000      0.790000  \n",
+       "3           0.950000      0.910000  \n",
+       "4           0.950000      0.620000  \n",
+       "..               ...           ...  \n",
+       "212         1.000000      0.920000  \n",
+       "68          0.916667      0.916667  \n",
+       "69          0.875000      0.500000  \n",
+       "70          0.958333      0.916667  \n",
+       "71          0.956522      0.875000  \n",
+       "\n",
+       "[307 rows x 9 columns]"
+      ]
+     },
+     "execution_count": 7,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
    "source": [
     "\n",
     "demo = dd.concat_classes_demo()  # .reset_index(drop=True)\n",
@@ -130,71 +377,598 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
-   "id": "55379d2e",
+   "execution_count": 8,
+   "id": "994176e8",
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>Group</th>\n",
+       "      <th>SubjectID</th>\n",
+       "      <th>Sentence_ID</th>\n",
+       "      <th>Word_Number</th>\n",
+       "      <th>FIX_X</th>\n",
+       "      <th>FIX_Y</th>\n",
+       "      <th>FIX_DURATION</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>1</td>\n",
+       "      <td>10</td>\n",
+       "      <td>4</td>\n",
+       "      <td>1</td>\n",
+       "      <td>177.3</td>\n",
+       "      <td>531.8</td>\n",
+       "      <td>219.0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>1</td>\n",
+       "      <td>10</td>\n",
+       "      <td>4</td>\n",
+       "      <td>2</td>\n",
+       "      <td>200.5</td>\n",
+       "      <td>545.2</td>\n",
+       "      <td>247.0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>1</td>\n",
+       "      <td>10</td>\n",
+       "      <td>4</td>\n",
+       "      <td>3</td>\n",
+       "      <td>282.7</td>\n",
+       "      <td>542.4</td>\n",
+       "      <td>261.0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>1</td>\n",
+       "      <td>10</td>\n",
+       "      <td>4</td>\n",
+       "      <td>4</td>\n",
+       "      <td>358.1</td>\n",
+       "      <td>545.5</td>\n",
+       "      <td>268.0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>1</td>\n",
+       "      <td>10</td>\n",
+       "      <td>4</td>\n",
+       "      <td>4</td>\n",
+       "      <td>392.8</td>\n",
+       "      <td>536.3</td>\n",
+       "      <td>129.0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>59765</th>\n",
+       "      <td>3</td>\n",
+       "      <td>zrs09</td>\n",
+       "      <td>33</td>\n",
+       "      <td>5</td>\n",
+       "      <td>743.3</td>\n",
+       "      <td>562.7</td>\n",
+       "      <td>160.0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>59766</th>\n",
+       "      <td>3</td>\n",
+       "      <td>zrs09</td>\n",
+       "      <td>33</td>\n",
+       "      <td>5</td>\n",
+       "      <td>772.5</td>\n",
+       "      <td>555.8</td>\n",
+       "      <td>193.0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>59767</th>\n",
+       "      <td>3</td>\n",
+       "      <td>zrs09</td>\n",
+       "      <td>33</td>\n",
+       "      <td>5</td>\n",
+       "      <td>941.7</td>\n",
+       "      <td>561.9</td>\n",
+       "      <td>219.0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>59768</th>\n",
+       "      <td>3</td>\n",
+       "      <td>zrs09</td>\n",
+       "      <td>33</td>\n",
+       "      <td>5</td>\n",
+       "      <td>831.8</td>\n",
+       "      <td>548.8</td>\n",
+       "      <td>144.0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>59769</th>\n",
+       "      <td>3</td>\n",
+       "      <td>zrs09</td>\n",
+       "      <td>33</td>\n",
+       "      <td>6</td>\n",
+       "      <td>988.0</td>\n",
+       "      <td>545.6</td>\n",
+       "      <td>182.0</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>225350 rows × 7 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "       Group SubjectID  Sentence_ID  Word_Number  FIX_X  FIX_Y  FIX_DURATION\n",
+       "0          1        10            4            1  177.3  531.8         219.0\n",
+       "1          1        10            4            2  200.5  545.2         247.0\n",
+       "2          1        10            4            3  282.7  542.4         261.0\n",
+       "3          1        10            4            4  358.1  545.5         268.0\n",
+       "4          1        10            4            4  392.8  536.3         129.0\n",
+       "...      ...       ...          ...          ...    ...    ...           ...\n",
+       "59765      3     zrs09           33            5  743.3  562.7         160.0\n",
+       "59766      3     zrs09           33            5  772.5  555.8         193.0\n",
+       "59767      3     zrs09           33            5  941.7  561.9         219.0\n",
+       "59768      3     zrs09           33            5  831.8  548.8         144.0\n",
+       "59769      3     zrs09           33            6  988.0  545.6         182.0\n",
+       "\n",
+       "[225350 rows x 7 columns]"
+      ]
+     },
+     "execution_count": 8,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
    "source": [
     "\n",
     "\n",
-    "x_org, y_org = dd.get_onehot_features_targets(\n",
-    "        data=demo,\n",
-    "        c_features= [\"Sex\", \"Grade\", ],  # \n",
-    "        indicators=[\"SubjectID\"],\n",
-    "    )\n"
+    "fix = dd.concat_classes_fix()  # .reset_index(drop=True)\n",
+    "\n",
+    "fix\n",
+    "\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 9,
+   "id": "bc4daa64",
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Loading Fixation report statistic data:\n"
+     ]
+    }
+   ],
+   "source": [
+    "\n",
+    "\n",
+    "fix_stats = dd.get_fix_stats_dataset()\n",
+    "\n"
    ]
   },
   {
    "cell_type": "code",
    "execution_count": null,
-   "id": "19360866",
+   "id": "0aa2b5b8",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "\n",
+    "fix_stats_demo \n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 11,
+   "id": "612e6753",
    "metadata": {},
    "outputs": [],
    "source": [
+    "fix_stats_demo = dd.concat_dfs(\n",
+    "    df1=fix_stats,\n",
+    "    df2=demo,\n",
+    "    features1=fix_stats.columns,\n",
+    "    features2=[\n",
+    "        \"Sex\", \"Grade\", \"Age\", \"IQ\", \"Reading_speed\",\n",
+    "    ],\n",
+    ")\n",
     "\n",
     "\n",
-    "x , x_df = dd.get_\n"
+    "df_data_to_use = fix_stats_demo\n",
+    "c_features = ['Sex', 'Grade', ]\n",
+    "indicators = [\n",
+    "    'SubjectID', 'Sentence_ID',\n",
+    "]\n",
+    "\n",
+    "targets = [\"Group\", \"Reading_speed\", ]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 12,
+   "id": "3f852bcc",
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>Group</th>\n",
+       "      <th>SubjectID</th>\n",
+       "      <th>Sentence_ID</th>\n",
+       "      <th>Word_Number</th>\n",
+       "      <th>FIX_X_mean</th>\n",
+       "      <th>FIX_X_std</th>\n",
+       "      <th>FIX_Y_mean</th>\n",
+       "      <th>FIX_Y_std</th>\n",
+       "      <th>FIX_DURATION_mean</th>\n",
+       "      <th>FIX_DURATION_std</th>\n",
+       "      <th>Sex</th>\n",
+       "      <th>Grade</th>\n",
+       "      <th>Age</th>\n",
+       "      <th>IQ</th>\n",
+       "      <th>Reading_speed</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>1</td>\n",
+       "      <td>10</td>\n",
+       "      <td>4</td>\n",
+       "      <td>8</td>\n",
+       "      <td>645.693750</td>\n",
+       "      <td>283.247212</td>\n",
+       "      <td>537.731250</td>\n",
+       "      <td>5.683393</td>\n",
+       "      <td>147.500000</td>\n",
+       "      <td>78.438086</td>\n",
+       "      <td>1</td>\n",
+       "      <td>4</td>\n",
+       "      <td>10.0</td>\n",
+       "      <td>23.0</td>\n",
+       "      <td>102.0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>1</td>\n",
+       "      <td>10</td>\n",
+       "      <td>5</td>\n",
+       "      <td>8</td>\n",
+       "      <td>644.781081</td>\n",
+       "      <td>202.020928</td>\n",
+       "      <td>524.345946</td>\n",
+       "      <td>8.486152</td>\n",
+       "      <td>180.810811</td>\n",
+       "      <td>88.588574</td>\n",
+       "      <td>1</td>\n",
+       "      <td>4</td>\n",
+       "      <td>10.0</td>\n",
+       "      <td>23.0</td>\n",
+       "      <td>102.0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>1</td>\n",
+       "      <td>10</td>\n",
+       "      <td>6</td>\n",
+       "      <td>9</td>\n",
+       "      <td>708.334615</td>\n",
+       "      <td>292.435973</td>\n",
+       "      <td>536.546154</td>\n",
+       "      <td>7.099140</td>\n",
+       "      <td>187.961538</td>\n",
+       "      <td>130.054290</td>\n",
+       "      <td>1</td>\n",
+       "      <td>4</td>\n",
+       "      <td>10.0</td>\n",
+       "      <td>23.0</td>\n",
+       "      <td>102.0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>1</td>\n",
+       "      <td>10</td>\n",
+       "      <td>7</td>\n",
+       "      <td>8</td>\n",
+       "      <td>676.047619</td>\n",
+       "      <td>317.074279</td>\n",
+       "      <td>535.933333</td>\n",
+       "      <td>6.465627</td>\n",
+       "      <td>179.761905</td>\n",
+       "      <td>73.502996</td>\n",
+       "      <td>1</td>\n",
+       "      <td>4</td>\n",
+       "      <td>10.0</td>\n",
+       "      <td>23.0</td>\n",
+       "      <td>102.0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>1</td>\n",
+       "      <td>10</td>\n",
+       "      <td>8</td>\n",
+       "      <td>8</td>\n",
+       "      <td>440.215000</td>\n",
+       "      <td>235.935556</td>\n",
+       "      <td>541.580000</td>\n",
+       "      <td>5.290667</td>\n",
+       "      <td>201.800000</td>\n",
+       "      <td>91.100638</td>\n",
+       "      <td>1</td>\n",
+       "      <td>4</td>\n",
+       "      <td>10.0</td>\n",
+       "      <td>23.0</td>\n",
+       "      <td>102.0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>25</th>\n",
+       "      <td>3</td>\n",
+       "      <td>zrs09</td>\n",
+       "      <td>29</td>\n",
+       "      <td>9</td>\n",
+       "      <td>770.810000</td>\n",
+       "      <td>388.747269</td>\n",
+       "      <td>538.720000</td>\n",
+       "      <td>7.365053</td>\n",
+       "      <td>203.300000</td>\n",
+       "      <td>68.011519</td>\n",
+       "      <td>2</td>\n",
+       "      <td>3</td>\n",
+       "      <td>10.0</td>\n",
+       "      <td>32.0</td>\n",
+       "      <td>97.0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26</th>\n",
+       "      <td>3</td>\n",
+       "      <td>zrs09</td>\n",
+       "      <td>30</td>\n",
+       "      <td>7</td>\n",
+       "      <td>630.469231</td>\n",
+       "      <td>253.210456</td>\n",
+       "      <td>523.092308</td>\n",
+       "      <td>19.332706</td>\n",
+       "      <td>243.346154</td>\n",
+       "      <td>115.315547</td>\n",
+       "      <td>2</td>\n",
+       "      <td>3</td>\n",
+       "      <td>10.0</td>\n",
+       "      <td>32.0</td>\n",
+       "      <td>97.0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>27</th>\n",
+       "      <td>3</td>\n",
+       "      <td>zrs09</td>\n",
+       "      <td>31</td>\n",
+       "      <td>7</td>\n",
+       "      <td>705.147368</td>\n",
+       "      <td>366.464545</td>\n",
+       "      <td>541.784211</td>\n",
+       "      <td>6.988821</td>\n",
+       "      <td>203.842105</td>\n",
+       "      <td>62.050395</td>\n",
+       "      <td>2</td>\n",
+       "      <td>3</td>\n",
+       "      <td>10.0</td>\n",
+       "      <td>32.0</td>\n",
+       "      <td>97.0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>28</th>\n",
+       "      <td>3</td>\n",
+       "      <td>zrs09</td>\n",
+       "      <td>32</td>\n",
+       "      <td>6</td>\n",
+       "      <td>563.078261</td>\n",
+       "      <td>228.836514</td>\n",
+       "      <td>542.795652</td>\n",
+       "      <td>12.622436</td>\n",
+       "      <td>289.260870</td>\n",
+       "      <td>129.311188</td>\n",
+       "      <td>2</td>\n",
+       "      <td>3</td>\n",
+       "      <td>10.0</td>\n",
+       "      <td>32.0</td>\n",
+       "      <td>97.0</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>29</th>\n",
+       "      <td>3</td>\n",
+       "      <td>zrs09</td>\n",
+       "      <td>33</td>\n",
+       "      <td>6</td>\n",
+       "      <td>644.933333</td>\n",
+       "      <td>259.921053</td>\n",
+       "      <td>546.226667</td>\n",
+       "      <td>16.935570</td>\n",
+       "      <td>196.933333</td>\n",
+       "      <td>81.142262</td>\n",
+       "      <td>2</td>\n",
+       "      <td>3</td>\n",
+       "      <td>10.0</td>\n",
+       "      <td>32.0</td>\n",
+       "      <td>97.0</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>9071 rows × 15 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "    Group SubjectID  Sentence_ID  Word_Number  FIX_X_mean   FIX_X_std  \\\n",
+       "0       1        10            4            8  645.693750  283.247212   \n",
+       "1       1        10            5            8  644.781081  202.020928   \n",
+       "2       1        10            6            9  708.334615  292.435973   \n",
+       "3       1        10            7            8  676.047619  317.074279   \n",
+       "4       1        10            8            8  440.215000  235.935556   \n",
+       "..    ...       ...          ...          ...         ...         ...   \n",
+       "25      3     zrs09           29            9  770.810000  388.747269   \n",
+       "26      3     zrs09           30            7  630.469231  253.210456   \n",
+       "27      3     zrs09           31            7  705.147368  366.464545   \n",
+       "28      3     zrs09           32            6  563.078261  228.836514   \n",
+       "29      3     zrs09           33            6  644.933333  259.921053   \n",
+       "\n",
+       "    FIX_Y_mean  FIX_Y_std  FIX_DURATION_mean  FIX_DURATION_std  Sex  Grade  \\\n",
+       "0   537.731250   5.683393         147.500000         78.438086    1      4   \n",
+       "1   524.345946   8.486152         180.810811         88.588574    1      4   \n",
+       "2   536.546154   7.099140         187.961538        130.054290    1      4   \n",
+       "3   535.933333   6.465627         179.761905         73.502996    1      4   \n",
+       "4   541.580000   5.290667         201.800000         91.100638    1      4   \n",
+       "..         ...        ...                ...               ...  ...    ...   \n",
+       "25  538.720000   7.365053         203.300000         68.011519    2      3   \n",
+       "26  523.092308  19.332706         243.346154        115.315547    2      3   \n",
+       "27  541.784211   6.988821         203.842105         62.050395    2      3   \n",
+       "28  542.795652  12.622436         289.260870        129.311188    2      3   \n",
+       "29  546.226667  16.935570         196.933333         81.142262    2      3   \n",
+       "\n",
+       "     Age    IQ  Reading_speed  \n",
+       "0   10.0  23.0          102.0  \n",
+       "1   10.0  23.0          102.0  \n",
+       "2   10.0  23.0          102.0  \n",
+       "3   10.0  23.0          102.0  \n",
+       "4   10.0  23.0          102.0  \n",
+       "..   ...   ...            ...  \n",
+       "25  10.0  32.0           97.0  \n",
+       "26  10.0  32.0           97.0  \n",
+       "27  10.0  32.0           97.0  \n",
+       "28  10.0  32.0           97.0  \n",
+       "29  10.0  32.0           97.0  \n",
+       "\n",
+       "[9071 rows x 15 columns]"
+      ]
+     },
+     "execution_count": 12,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "\n",
+    "\n",
+    "fix_stats_demo\n",
+    "\n",
+    "\n"
    ]
   },
   {
    "cell_type": "code",
    "execution_count": null,
-   "id": "cb641245",
+   "id": "6260e642",
    "metadata": {},
    "outputs": [],
    "source": [
-    "import jax\n",
-    "import jax.numpy as jnp\n",
-    "from copy import deepcopy"
+    "m_d = fix_stats_demo.loc[fix_stats_demo.Group==1]"
    ]
   },
   {
    "cell_type": "code",
    "execution_count": null,
-   "id": "55078b78",
+   "id": "55379d2e",
    "metadata": {},
    "outputs": [],
    "source": [
     "\n",
-    "c1 = x[1, :].reshape(1, -1)\n",
-    "c2 = x[52, :].reshape(1, -1)\n",
-    "c3 = x[111, :].reshape(1, -1)\n",
-    "centroids = jnp.concatenate((c1, c2, c3), axis=0)\n",
+    "\n",
+    "x_org, y_org = dd.get_onehot_features_targets(\n",
+    "        data=fix_stats_demo,\n",
+    "        c_features= [\"Sex\", \"Grade\", ],  # \n",
+    "        indicators=[\"SubjectID\"],\n",
+    "    )\n",
+    "\n",
     "\n"
    ]
   },
   {
    "cell_type": "code",
    "execution_count": null,
-   "id": "79be2a3e",
+   "id": "3099e55c",
    "metadata": {},
    "outputs": [],
    "source": [
-    "def compute_euclidean(datapoint, centroid,):\n",
-    "    return jax.tree_leaves(jnp.sum(jnp.power(datapoint - centroid, 2), axis=1))[0]\n",
     "\n",
-    "def is_pos_def(x):\n",
-    "    return jax.tree_leaves(jnp.all(jnp.linalg.eigvals(x) > 0))\n",
+    "x_org\n",
+    "\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "id": "f5622a21",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "\n",
+    "y_org\n",
     "\n",
     "\n"
    ]
@@ -202,32 +976,35 @@
   {
    "cell_type": "code",
    "execution_count": null,
-   "id": "3ab376e0",
+   "id": "19360866",
    "metadata": {},
    "outputs": [],
    "source": [
-    "data = x"
+    "\n",
+    "\n",
+    "x, x_df = dd.get_preprocessed_features(x_dum=x_org)\n",
+    "\n"
    ]
   },
   {
    "cell_type": "code",
    "execution_count": null,
-   "id": "92f98c62",
+   "id": "123464f6",
    "metadata": {},
    "outputs": [],
    "source": [
-    "n_nodes = data.shape[0]\n",
-    "n_clusters = centroids.shape[0]\n",
-    "distance_fn = compute_euclidean "
+    "x_df"
    ]
   },
   {
    "cell_type": "code",
    "execution_count": null,
-   "id": "26bacc95",
+   "id": "4ce6e613",
    "metadata": {},
    "outputs": [],
-   "source": []
+   "source": [
+    "x = x_df.values"
+   ]
   },
   {
    "cell_type": "code",
@@ -256,110 +1033,6 @@
     "y = y_org.Group.values\n",
     "\n",
     "\n",
-    "\n",
-    "# y = preprocess_data(x=y, pp='mm')  # only x is standardized\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "ac0564a7",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "\n",
-    "f_iter = True \n",
-    "n_iter = 0\n",
-    "n_iters = 400\n",
-    "tol_m = 1e-2\n",
-    "tol_g = 1e-3\n",
-    "clusters = jnp.zeros([n_nodes]) + jnp.inf\n",
-    "\n",
-    "grads_sums = []\n",
-    "aris_history = []\n",
-    "grads_history = []\n",
-    "hessians_history = []\n",
-    "\n",
-    "\n",
-    "from sklearn import metrics\n",
-    "\n",
-    "\n",
-    "step_size = 2e-1\n",
-    "c_iter = 0\n",
-    "\n",
-    "\n",
-    "while f_iter: \n",
-    "    \n",
-    "    # cluster assingment \n",
-    "    for i in range(n_nodes):   \n",
-    "        distances = distance_fn(datapoint=x[i, :], centroid=centroids)\n",
-    "        clusters = clusters.at[i].set(jnp.argmin(distances, axis=0))\n",
-    "        \n",
-    "    previous_clusters = deepcopy(clusters)\n",
-    "    \n",
-    "    # cluster update\n",
-    "    tmp_grads, tmp_hess = [], []\n",
-    "    for k in range(n_clusters):\n",
-    "        \n",
-    "        cluster_data = jnp.mean(x[jnp.where(clusters==k)[0], :], axis=0).reshape(1, -1)\n",
-    "        \n",
-    "        # Gradient of the distance function w.r.t the closest center \n",
-    "        grads = jax.jacfwd(distance_fn, argnums=(1,))(cluster_data, centroids[k, :])\n",
-    "        grads = jax.tree_leaves(grads)[0]\n",
-    "        \n",
-    "        # Upgate centrods\n",
-    "        updated_centeroid = centroids[k, :] - step_size * grads\n",
-    "        centroids = centroids.at[k].set(updated_centeroid[0])\n",
-    "        \n",
-    "        # Convergence check\n",
-    "        # FONC: First Order Necessary Condition\n",
-    "        l2_norm_grads= jnp.sqrt(jnp.sum(jnp.power(grads, 2)))\n",
-    "        tmp_grads.append(l2_norm_grads)\n",
-    "\n",
-    "        # SONC: Second Order Necessary Condition\n",
-    "        # Jaccobian of gradients (hessian matrix) of the distance function w.r.t the closest center \n",
-    "        hessian_mat = jax.hessian(distance_fn, argnums=(1,))(cluster_data, centroids[k, :])\n",
-    "        hessian_mat = jax.tree_leaves(hessian_mat)[0]\n",
-    "        if jnp.all(is_pos_def(hessian_mat[0])[0]):\n",
-    "            tmp_hess.append(1)\n",
-    "        else:\n",
-    "            tmp_hess.append(0)\n",
-    "\n",
-    "    \n",
-    "    ave_l2_norms_grads = jnp.asarray(tmp_grads).mean()\n",
-    "    grads_history.append(ave_l2_norms_grads)\n",
-    "    \n",
-    "    ave_semi_pos_def_check = jnp.asarray(tmp_hess).mean()\n",
-    "    hessians_history.append(ave_semi_pos_def_check)\n",
-    "    \n",
-    "    ari = metrics.adjusted_rand_score(y, clusters)\n",
-    "\n",
-    "    print(\n",
-    "        f\"n_iter = {n_iter} ari={ari:.3f} f_iter={f_iter} ave_l2_norms_grads = {ave_l2_norms_grads:.3f}\" \n",
-    "    )\n",
-    "    \n",
-    "    \n",
-    "    # FOCN and SOCN    \n",
-    "    if ave_semi_pos_def_check ==1. and ave_l2_norms_grads <= tol_g:\n",
-    "        print(\"ave_l2_norms_grads:\", ave_l2_norms_grads)\n",
-    "        print(\"An optimum has found! stoped by FONC and SONC\")\n",
-    "        print(\"ARI:\",ari)\n",
-    "\n",
-    "        if jnp.all(previous_clusters == clusters):\n",
-    "            f_iter = False\n",
-    "            print(\"Converge by two consequitive cluster recovery results conincidence\")            \n",
-    "            print(f\"node {i} ARI {ari}\")\n",
-    "            break\n",
-    "    \n",
-    "    n_iter += 1\n",
-    "    \n",
-    "    if n_iter >= n_iters:\n",
-    "        f_iter = False\n",
-    "       \n",
-    "\n",
-    "\n",
-    "\n",
     "\n"
    ]
   },
@@ -399,14 +1072,6 @@
     "\n"
    ]
   },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "5b51cb1b",
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  },
   {
    "cell_type": "code",
    "execution_count": null,
@@ -459,7 +1124,6 @@
     "\n",
     "reg_est.train_test_tuned_estimator()\n",
     "\n",
-    "\n",
     "\n"
    ]
   },
diff --git a/Figures/Histograms/dd_demo-a_clu--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_demo-a_clu--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index ee89dda..0000000
Binary files a/Figures/Histograms/dd_demo-a_clu--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-a_clu--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_demo-a_clu--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index fc466a7..0000000
Binary files a/Figures/Histograms/dd_demo-a_clu--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-ab_cls--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_demo-ab_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 5bcea75..0000000
Binary files a/Figures/Histograms/dd_demo-ab_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-ab_cls--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_demo-ab_cls--shuffled:True--exclude at risk:0.png
index 6c1b560..94dda69 100644
Binary files a/Figures/Histograms/dd_demo-ab_cls--shuffled:True--exclude at risk:0.png and b/Figures/Histograms/dd_demo-ab_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Histograms/dd_demo-ab_reg-False.png b/Figures/Histograms/dd_demo-ab_reg-False.png
deleted file mode 100644
index 0131e7a..0000000
Binary files a/Figures/Histograms/dd_demo-ab_reg-False.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-ab_reg-True-1.png b/Figures/Histograms/dd_demo-ab_reg-True-1.png
deleted file mode 100644
index 4ebf13c..0000000
Binary files a/Figures/Histograms/dd_demo-ab_reg-True-1.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-ab_reg-True-2.png b/Figures/Histograms/dd_demo-ab_reg-True-2.png
deleted file mode 100644
index ff59b5a..0000000
Binary files a/Figures/Histograms/dd_demo-ab_reg-True-2.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-ab_reg-True-4.png b/Figures/Histograms/dd_demo-ab_reg-True-4.png
deleted file mode 100644
index 44a704c..0000000
Binary files a/Figures/Histograms/dd_demo-ab_reg-True-4.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-ap_clu--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_demo-ap_clu--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 885c285..0000000
Binary files a/Figures/Histograms/dd_demo-ap_clu--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-ap_clu--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_demo-ap_clu--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index 3ec5bd8..0000000
Binary files a/Figures/Histograms/dd_demo-ap_clu--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-bg_cls--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_demo-bg_cls--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index cb1d0e4..0000000
Binary files a/Figures/Histograms/dd_demo-bg_cls--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-br_reg--shuffled:True--exclude at risk:True.png b/Figures/Histograms/dd_demo-br_reg--shuffled:True--exclude at risk:True.png
deleted file mode 100644
index 515eb69..0000000
Binary files a/Figures/Histograms/dd_demo-br_reg--shuffled:True--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-br_reg-False.png b/Figures/Histograms/dd_demo-br_reg-False.png
deleted file mode 100644
index fe6a2dd..0000000
Binary files a/Figures/Histograms/dd_demo-br_reg-False.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-br_reg-True-1.png b/Figures/Histograms/dd_demo-br_reg-True-1.png
deleted file mode 100644
index 18cce9e..0000000
Binary files a/Figures/Histograms/dd_demo-br_reg-True-1.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-cnb_cls--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_demo-cnb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 272cf5a..0000000
Binary files a/Figures/Histograms/dd_demo-cnb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-cnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_demo-cnb_cls--shuffled:True--exclude at risk:0.png
index d5bbb88..1b6e1ae 100644
Binary files a/Figures/Histograms/dd_demo-cnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Histograms/dd_demo-cnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Histograms/dd_demo-dbs_clu--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_demo-dbs_clu--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 4aabfc9..0000000
Binary files a/Figures/Histograms/dd_demo-dbs_clu--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-dbs_clu--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_demo-dbs_clu--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index c0253e5..0000000
Binary files a/Figures/Histograms/dd_demo-dbs_clu--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-gb_cls--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_demo-gb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index a5a9840..0000000
Binary files a/Figures/Histograms/dd_demo-gb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-gb_cls--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_demo-gb_cls--shuffled:True--exclude at risk:0.png
index 14d4609..3e14a2b 100644
Binary files a/Figures/Histograms/dd_demo-gb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Histograms/dd_demo-gb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Histograms/dd_demo-gb_reg--shuffled:False--exclude at risk:True.png b/Figures/Histograms/dd_demo-gb_reg--shuffled:False--exclude at risk:True.png
deleted file mode 100644
index 6c8422f..0000000
Binary files a/Figures/Histograms/dd_demo-gb_reg--shuffled:False--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-gb_reg-False.png b/Figures/Histograms/dd_demo-gb_reg-False.png
deleted file mode 100644
index f0fc80b..0000000
Binary files a/Figures/Histograms/dd_demo-gb_reg-False.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-gb_reg-True-1.png b/Figures/Histograms/dd_demo-gb_reg-True-1.png
deleted file mode 100644
index 13a0296..0000000
Binary files a/Figures/Histograms/dd_demo-gb_reg-True-1.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-gb_reg-True-2.png b/Figures/Histograms/dd_demo-gb_reg-True-2.png
deleted file mode 100644
index a45bc72..0000000
Binary files a/Figures/Histograms/dd_demo-gb_reg-True-2.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-gm_clu--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_demo-gm_clu--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 9ad5aba..0000000
Binary files a/Figures/Histograms/dd_demo-gm_clu--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-gm_clu--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_demo-gm_clu--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index 1aa95fb..0000000
Binary files a/Figures/Histograms/dd_demo-gm_clu--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-gnb_cls--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_demo-gnb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index abc1fe8..0000000
Binary files a/Figures/Histograms/dd_demo-gnb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-km_clu--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_demo-km_clu--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 1caa859..0000000
Binary files a/Figures/Histograms/dd_demo-km_clu--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-km_clu--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_demo-km_clu--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index 7adfc79..0000000
Binary files a/Figures/Histograms/dd_demo-km_clu--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-knn_cls--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_demo-knn_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index bb9a7a3..0000000
Binary files a/Figures/Histograms/dd_demo-knn_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-knn_reg--shuffled:True--exclude at risk:True.png b/Figures/Histograms/dd_demo-knn_reg--shuffled:True--exclude at risk:True.png
deleted file mode 100644
index b18259c..0000000
Binary files a/Figures/Histograms/dd_demo-knn_reg--shuffled:True--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-knn_reg-False.png b/Figures/Histograms/dd_demo-knn_reg-False.png
deleted file mode 100644
index bb14800..0000000
Binary files a/Figures/Histograms/dd_demo-knn_reg-False.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-knn_reg-True-1.png b/Figures/Histograms/dd_demo-knn_reg-True-1.png
deleted file mode 100644
index 31a8aab..0000000
Binary files a/Figures/Histograms/dd_demo-knn_reg-True-1.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-l_cls--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_demo-l_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 29546eb..0000000
Binary files a/Figures/Histograms/dd_demo-l_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-l_cls--shuffled:False--exclude at risk:True.png b/Figures/Histograms/dd_demo-l_cls--shuffled:False--exclude at risk:True.png
deleted file mode 100644
index f1f2cb9..0000000
Binary files a/Figures/Histograms/dd_demo-l_cls--shuffled:False--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-l_cls--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_demo-l_cls--shuffled:True--exclude at risk:0.png
index 7101a8d..3b76cf9 100644
Binary files a/Figures/Histograms/dd_demo-l_cls--shuffled:True--exclude at risk:0.png and b/Figures/Histograms/dd_demo-l_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Histograms/dd_demo-l_cls--shuffled:True--exclude at risk:True.png b/Figures/Histograms/dd_demo-l_cls--shuffled:True--exclude at risk:True.png
index 0d66a71..31228a4 100644
Binary files a/Figures/Histograms/dd_demo-l_cls--shuffled:True--exclude at risk:True.png and b/Figures/Histograms/dd_demo-l_cls--shuffled:True--exclude at risk:True.png differ
diff --git a/Figures/Histograms/dd_demo-l_reg--shuffled:False--exclude at risk:True.png b/Figures/Histograms/dd_demo-l_reg--shuffled:False--exclude at risk:True.png
index 9429764..46e9196 100644
Binary files a/Figures/Histograms/dd_demo-l_reg--shuffled:False--exclude at risk:True.png and b/Figures/Histograms/dd_demo-l_reg--shuffled:False--exclude at risk:True.png differ
diff --git a/Figures/Histograms/dd_demo-l_reg--shuffled:True--exclude at risk:True.png b/Figures/Histograms/dd_demo-l_reg--shuffled:True--exclude at risk:True.png
index 8f19035..8d7f22e 100644
Binary files a/Figures/Histograms/dd_demo-l_reg--shuffled:True--exclude at risk:True.png and b/Figures/Histograms/dd_demo-l_reg--shuffled:True--exclude at risk:True.png differ
diff --git a/Figures/Histograms/dd_demo-l_reg-False.png b/Figures/Histograms/dd_demo-l_reg-False.png
deleted file mode 100644
index df98a79..0000000
Binary files a/Figures/Histograms/dd_demo-l_reg-False.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-l_reg-True-1.png b/Figures/Histograms/dd_demo-l_reg-True-1.png
deleted file mode 100644
index 9660839..0000000
Binary files a/Figures/Histograms/dd_demo-l_reg-True-1.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-mlp_cls--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_demo-mlp_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index d8bd3ce..0000000
Binary files a/Figures/Histograms/dd_demo-mlp_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-mlp_cls--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_demo-mlp_cls--shuffled:True--exclude at risk:0.png
index c7a6f79..d4cee27 100644
Binary files a/Figures/Histograms/dd_demo-mlp_cls--shuffled:True--exclude at risk:0.png and b/Figures/Histograms/dd_demo-mlp_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Histograms/dd_demo-mlp_reg-False.png b/Figures/Histograms/dd_demo-mlp_reg-False.png
deleted file mode 100644
index cc5446d..0000000
Binary files a/Figures/Histograms/dd_demo-mlp_reg-False.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-mlp_reg-True.png b/Figures/Histograms/dd_demo-mlp_reg-True.png
deleted file mode 100644
index ef4f15a..0000000
Binary files a/Figures/Histograms/dd_demo-mlp_reg-True.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-mnb_cls--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_demo-mnb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index ae76751..0000000
Binary files a/Figures/Histograms/dd_demo-mnb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-ms_clu--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_demo-ms_clu--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 012844b..0000000
Binary files a/Figures/Histograms/dd_demo-ms_clu--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-ms_clu--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_demo-ms_clu--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index 6feb9e0..0000000
Binary files a/Figures/Histograms/dd_demo-ms_clu--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-rf_cls--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_demo-rf_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 3dd6dec..0000000
Binary files a/Figures/Histograms/dd_demo-rf_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-rf_cls--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_demo-rf_cls--shuffled:True--exclude at risk:0.png
index 12282bd..b77466d 100644
Binary files a/Figures/Histograms/dd_demo-rf_cls--shuffled:True--exclude at risk:0.png and b/Figures/Histograms/dd_demo-rf_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Histograms/dd_demo-rf_cls--shuffled:True--exclude at risk:True.png b/Figures/Histograms/dd_demo-rf_cls--shuffled:True--exclude at risk:True.png
deleted file mode 100644
index 567ac5f..0000000
Binary files a/Figures/Histograms/dd_demo-rf_cls--shuffled:True--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-rf_reg--shuffled:True--exclude at risk:True.png b/Figures/Histograms/dd_demo-rf_reg--shuffled:True--exclude at risk:True.png
deleted file mode 100644
index 30ac6fa..0000000
Binary files a/Figures/Histograms/dd_demo-rf_reg--shuffled:True--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-rf_reg-False.png b/Figures/Histograms/dd_demo-rf_reg-False.png
deleted file mode 100644
index 0da5e1f..0000000
Binary files a/Figures/Histograms/dd_demo-rf_reg-False.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-rf_reg-True-1.png b/Figures/Histograms/dd_demo-rf_reg-True-1.png
deleted file mode 100644
index 67a72ec..0000000
Binary files a/Figures/Histograms/dd_demo-rf_reg-True-1.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-rf_reg-True-2.png b/Figures/Histograms/dd_demo-rf_reg-True-2.png
deleted file mode 100644
index 8f4065c..0000000
Binary files a/Figures/Histograms/dd_demo-rf_reg-True-2.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-s_clu--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_demo-s_clu--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 8438d14..0000000
Binary files a/Figures/Histograms/dd_demo-s_clu--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-s_clu--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_demo-s_clu--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index 5ae1115..0000000
Binary files a/Figures/Histograms/dd_demo-s_clu--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-sv_cls--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_demo-sv_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 0f676f7..0000000
Binary files a/Figures/Histograms/dd_demo-sv_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-sv_reg--shuffled:True--exclude at risk:True.png b/Figures/Histograms/dd_demo-sv_reg--shuffled:True--exclude at risk:True.png
deleted file mode 100644
index 3209ac9..0000000
Binary files a/Figures/Histograms/dd_demo-sv_reg--shuffled:True--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-sv_reg-False.png b/Figures/Histograms/dd_demo-sv_reg-False.png
deleted file mode 100644
index 26d5c1b..0000000
Binary files a/Figures/Histograms/dd_demo-sv_reg-False.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-sv_reg-True-1.png b/Figures/Histograms/dd_demo-sv_reg-True-1.png
deleted file mode 100644
index 403a69c..0000000
Binary files a/Figures/Histograms/dd_demo-sv_reg-True-1.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-sv_reg-True-2.png b/Figures/Histograms/dd_demo-sv_reg-True-2.png
deleted file mode 100644
index 2919f14..0000000
Binary files a/Figures/Histograms/dd_demo-sv_reg-True-2.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-sv_reg-True-5.png b/Figures/Histograms/dd_demo-sv_reg-True-5.png
deleted file mode 100644
index 5a0b43b..0000000
Binary files a/Figures/Histograms/dd_demo-sv_reg-True-5.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-xgb_cls--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_demo-xgb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 52526a4..0000000
Binary files a/Figures/Histograms/dd_demo-xgb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-xgb_cls--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_demo-xgb_cls--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index 953ed49..0000000
Binary files a/Figures/Histograms/dd_demo-xgb_cls--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-xgb_reg-False.png b/Figures/Histograms/dd_demo-xgb_reg-False.png
deleted file mode 100644
index dd1eeca..0000000
Binary files a/Figures/Histograms/dd_demo-xgb_reg-False.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-xgb_reg-True-1.png b/Figures/Histograms/dd_demo-xgb_reg-True-1.png
deleted file mode 100644
index 97b51d0..0000000
Binary files a/Figures/Histograms/dd_demo-xgb_reg-True-1.png and /dev/null differ
diff --git a/Figures/Histograms/dd_demo-xgb_reg-True-2.png b/Figures/Histograms/dd_demo-xgb_reg-True-2.png
deleted file mode 100644
index 1f650a1..0000000
Binary files a/Figures/Histograms/dd_demo-xgb_reg-True-2.png and /dev/null differ
diff --git a/Figures/Histograms/dd_fix_demo-ab_cls--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_fix_demo-ab_cls--shuffled:False--exclude at risk:0.png
index 9f6f41e..17cd2ab 100644
Binary files a/Figures/Histograms/dd_fix_demo-ab_cls--shuffled:False--exclude at risk:0.png and b/Figures/Histograms/dd_fix_demo-ab_cls--shuffled:False--exclude at risk:0.png differ
diff --git a/Figures/Histograms/dd_fix_demo-ab_cls--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_fix_demo-ab_cls--shuffled:True--exclude at risk:0.png
index cc185f5..a4c6409 100644
Binary files a/Figures/Histograms/dd_fix_demo-ab_cls--shuffled:True--exclude at risk:0.png and b/Figures/Histograms/dd_fix_demo-ab_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Histograms/dd_fix_demo-cnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_fix_demo-cnb_cls--shuffled:True--exclude at risk:0.png
index bb8003f..fade4c3 100644
Binary files a/Figures/Histograms/dd_fix_demo-cnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Histograms/dd_fix_demo-cnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Histograms/dd_fix_demo-gnb_cls--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_fix_demo-gnb_cls--shuffled:False--exclude at risk:0.png
index 8f513d3..ef158bb 100644
Binary files a/Figures/Histograms/dd_fix_demo-gnb_cls--shuffled:False--exclude at risk:0.png and b/Figures/Histograms/dd_fix_demo-gnb_cls--shuffled:False--exclude at risk:0.png differ
diff --git a/Figures/Histograms/dd_fix_demo-gnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_fix_demo-gnb_cls--shuffled:True--exclude at risk:0.png
index 98b7ad5..d298101 100644
Binary files a/Figures/Histograms/dd_fix_demo-gnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Histograms/dd_fix_demo-gnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Histograms/dd_fix_demo-l_cls--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_fix_demo-l_cls--shuffled:False--exclude at risk:0.png
index de10271..887b49b 100644
Binary files a/Figures/Histograms/dd_fix_demo-l_cls--shuffled:False--exclude at risk:0.png and b/Figures/Histograms/dd_fix_demo-l_cls--shuffled:False--exclude at risk:0.png differ
diff --git a/Figures/Histograms/dd_fix_demo-l_cls--shuffled:False--exclude at risk:True.png b/Figures/Histograms/dd_fix_demo-l_cls--shuffled:False--exclude at risk:True.png
index 1ad2462..254ef2f 100644
Binary files a/Figures/Histograms/dd_fix_demo-l_cls--shuffled:False--exclude at risk:True.png and b/Figures/Histograms/dd_fix_demo-l_cls--shuffled:False--exclude at risk:True.png differ
diff --git a/Figures/Histograms/dd_fix_demo-l_cls--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_fix_demo-l_cls--shuffled:True--exclude at risk:0.png
index 6fb2cd1..203e627 100644
Binary files a/Figures/Histograms/dd_fix_demo-l_cls--shuffled:True--exclude at risk:0.png and b/Figures/Histograms/dd_fix_demo-l_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Histograms/dd_fix_demo-l_cls--shuffled:True--exclude at risk:True.png b/Figures/Histograms/dd_fix_demo-l_cls--shuffled:True--exclude at risk:True.png
index 1fe88a5..ed647bc 100644
Binary files a/Figures/Histograms/dd_fix_demo-l_cls--shuffled:True--exclude at risk:True.png and b/Figures/Histograms/dd_fix_demo-l_cls--shuffled:True--exclude at risk:True.png differ
diff --git a/Figures/Histograms/dd_fix_demo-mnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_fix_demo-mnb_cls--shuffled:True--exclude at risk:0.png
index 5cdbf1a..193c29a 100644
Binary files a/Figures/Histograms/dd_fix_demo-mnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Histograms/dd_fix_demo-mnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Histograms/dd_ia_demo-ab_cls--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_ia_demo-ab_cls--shuffled:True--exclude at risk:0.png
index 1402bca..5e5450d 100644
Binary files a/Figures/Histograms/dd_ia_demo-ab_cls--shuffled:True--exclude at risk:0.png and b/Figures/Histograms/dd_ia_demo-ab_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Histograms/dd_ia_demo-cnb_cls--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_ia_demo-cnb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 6fcacf7..0000000
Binary files a/Figures/Histograms/dd_ia_demo-cnb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_ia_demo-cnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_ia_demo-cnb_cls--shuffled:True--exclude at risk:0.png
index 6dde4e4..3e07800 100644
Binary files a/Figures/Histograms/dd_ia_demo-cnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Histograms/dd_ia_demo-cnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Histograms/dd_ia_demo-gnb_cls--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_ia_demo-gnb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 667c112..0000000
Binary files a/Figures/Histograms/dd_ia_demo-gnb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_ia_demo-gnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_ia_demo-gnb_cls--shuffled:True--exclude at risk:0.png
index b24c8c5..f55ac39 100644
Binary files a/Figures/Histograms/dd_ia_demo-gnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Histograms/dd_ia_demo-gnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Histograms/dd_ia_demo-knn_cls--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_ia_demo-knn_cls--shuffled:True--exclude at risk:0.png
index d119671..fd87418 100644
Binary files a/Figures/Histograms/dd_ia_demo-knn_cls--shuffled:True--exclude at risk:0.png and b/Figures/Histograms/dd_ia_demo-knn_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Histograms/dd_ia_demo-l_cls--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_ia_demo-l_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index e5cf62f..0000000
Binary files a/Figures/Histograms/dd_ia_demo-l_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_ia_demo-l_cls--shuffled:False--exclude at risk:True.png b/Figures/Histograms/dd_ia_demo-l_cls--shuffled:False--exclude at risk:True.png
deleted file mode 100644
index 319e3bf..0000000
Binary files a/Figures/Histograms/dd_ia_demo-l_cls--shuffled:False--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Histograms/dd_ia_demo-l_cls--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_ia_demo-l_cls--shuffled:True--exclude at risk:0.png
index be3da55..bec2d53 100644
Binary files a/Figures/Histograms/dd_ia_demo-l_cls--shuffled:True--exclude at risk:0.png and b/Figures/Histograms/dd_ia_demo-l_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Histograms/dd_ia_demo-l_cls--shuffled:True--exclude at risk:True.png b/Figures/Histograms/dd_ia_demo-l_cls--shuffled:True--exclude at risk:True.png
index b98f4d3..6e0b77b 100644
Binary files a/Figures/Histograms/dd_ia_demo-l_cls--shuffled:True--exclude at risk:True.png and b/Figures/Histograms/dd_ia_demo-l_cls--shuffled:True--exclude at risk:True.png differ
diff --git a/Figures/Histograms/dd_ia_demo-mnb_cls--shuffled:False--exclude at risk:0.png b/Figures/Histograms/dd_ia_demo-mnb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 2ec5e7b..0000000
Binary files a/Figures/Histograms/dd_ia_demo-mnb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Histograms/dd_ia_demo-mnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Histograms/dd_ia_demo-mnb_cls--shuffled:True--exclude at risk:0.png
index b3179ec..32947f5 100644
Binary files a/Figures/Histograms/dd_ia_demo-mnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Histograms/dd_ia_demo-mnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_demo-a_clu--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_demo-a_clu--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index ae70d9f..0000000
Binary files a/Figures/Plots/dd_demo-a_clu--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-a_clu--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_demo-a_clu--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index c84ccb9..0000000
Binary files a/Figures/Plots/dd_demo-a_clu--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-ab_cls--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_demo-ab_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index ca5f147..0000000
Binary files a/Figures/Plots/dd_demo-ab_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-ab_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_demo-ab_cls--shuffled:True--exclude at risk:0.png
index f9cbc95..928161e 100644
Binary files a/Figures/Plots/dd_demo-ab_cls--shuffled:True--exclude at risk:0.png and b/Figures/Plots/dd_demo-ab_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_demo-ab_reg-False.png b/Figures/Plots/dd_demo-ab_reg-False.png
deleted file mode 100644
index cf4ad75..0000000
Binary files a/Figures/Plots/dd_demo-ab_reg-False.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-ab_reg-True-1.png b/Figures/Plots/dd_demo-ab_reg-True-1.png
deleted file mode 100644
index 479ea3a..0000000
Binary files a/Figures/Plots/dd_demo-ab_reg-True-1.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-ab_reg-True-2.png b/Figures/Plots/dd_demo-ab_reg-True-2.png
deleted file mode 100644
index 764aaa6..0000000
Binary files a/Figures/Plots/dd_demo-ab_reg-True-2.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-ab_reg-True-4.png b/Figures/Plots/dd_demo-ab_reg-True-4.png
deleted file mode 100644
index 9182328..0000000
Binary files a/Figures/Plots/dd_demo-ab_reg-True-4.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-ap_clu--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_demo-ap_clu--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index f66590a..0000000
Binary files a/Figures/Plots/dd_demo-ap_clu--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-ap_clu--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_demo-ap_clu--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index cb7d037..0000000
Binary files a/Figures/Plots/dd_demo-ap_clu--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-bg_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_demo-bg_cls--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index 59cd4b3..0000000
Binary files a/Figures/Plots/dd_demo-bg_cls--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-br_reg--shuffled:True--exclude at risk:True.png b/Figures/Plots/dd_demo-br_reg--shuffled:True--exclude at risk:True.png
deleted file mode 100644
index 2908734..0000000
Binary files a/Figures/Plots/dd_demo-br_reg--shuffled:True--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-br_reg-False.png b/Figures/Plots/dd_demo-br_reg-False.png
deleted file mode 100644
index 7b412bf..0000000
Binary files a/Figures/Plots/dd_demo-br_reg-False.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-br_reg-True-1.png b/Figures/Plots/dd_demo-br_reg-True-1.png
deleted file mode 100644
index 2b0aa1f..0000000
Binary files a/Figures/Plots/dd_demo-br_reg-True-1.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-cnb_cls--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_demo-cnb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 3f7fad1..0000000
Binary files a/Figures/Plots/dd_demo-cnb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-cnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_demo-cnb_cls--shuffled:True--exclude at risk:0.png
index 33e2b64..5cdf20f 100644
Binary files a/Figures/Plots/dd_demo-cnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Plots/dd_demo-cnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_demo-dbs_clu--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_demo-dbs_clu--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 5498800..0000000
Binary files a/Figures/Plots/dd_demo-dbs_clu--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-dbs_clu--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_demo-dbs_clu--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index 7e20e71..0000000
Binary files a/Figures/Plots/dd_demo-dbs_clu--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-gb_cls--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_demo-gb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 105a973..0000000
Binary files a/Figures/Plots/dd_demo-gb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-gb_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_demo-gb_cls--shuffled:True--exclude at risk:0.png
index 8e7c2f4..0be6a26 100644
Binary files a/Figures/Plots/dd_demo-gb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Plots/dd_demo-gb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_demo-gb_reg--shuffled:False--exclude at risk:True.png b/Figures/Plots/dd_demo-gb_reg--shuffled:False--exclude at risk:True.png
deleted file mode 100644
index 437ea15..0000000
Binary files a/Figures/Plots/dd_demo-gb_reg--shuffled:False--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-gb_reg-False.png b/Figures/Plots/dd_demo-gb_reg-False.png
deleted file mode 100644
index 2136b80..0000000
Binary files a/Figures/Plots/dd_demo-gb_reg-False.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-gb_reg-True-1.png b/Figures/Plots/dd_demo-gb_reg-True-1.png
deleted file mode 100644
index dc60f11..0000000
Binary files a/Figures/Plots/dd_demo-gb_reg-True-1.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-gb_reg-True-2.png b/Figures/Plots/dd_demo-gb_reg-True-2.png
deleted file mode 100644
index 8bd9e58..0000000
Binary files a/Figures/Plots/dd_demo-gb_reg-True-2.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-gm_clu--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_demo-gm_clu--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 8e4a42b..0000000
Binary files a/Figures/Plots/dd_demo-gm_clu--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-gm_clu--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_demo-gm_clu--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index eb47b04..0000000
Binary files a/Figures/Plots/dd_demo-gm_clu--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-gnb_cls--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_demo-gnb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 2d91161..0000000
Binary files a/Figures/Plots/dd_demo-gnb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-km_clu--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_demo-km_clu--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index f345c6e..0000000
Binary files a/Figures/Plots/dd_demo-km_clu--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-km_clu--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_demo-km_clu--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index 060921d..0000000
Binary files a/Figures/Plots/dd_demo-km_clu--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-knn_cls--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_demo-knn_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 9b3bc3a..0000000
Binary files a/Figures/Plots/dd_demo-knn_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-knn_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_demo-knn_cls--shuffled:True--exclude at risk:0.png
index 9069fc3..86ccafe 100644
Binary files a/Figures/Plots/dd_demo-knn_cls--shuffled:True--exclude at risk:0.png and b/Figures/Plots/dd_demo-knn_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_demo-knn_reg--shuffled:True--exclude at risk:True.png b/Figures/Plots/dd_demo-knn_reg--shuffled:True--exclude at risk:True.png
deleted file mode 100644
index 64edb0e..0000000
Binary files a/Figures/Plots/dd_demo-knn_reg--shuffled:True--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-knn_reg-False.png b/Figures/Plots/dd_demo-knn_reg-False.png
deleted file mode 100644
index a3a716f..0000000
Binary files a/Figures/Plots/dd_demo-knn_reg-False.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-knn_reg-True-1.png b/Figures/Plots/dd_demo-knn_reg-True-1.png
deleted file mode 100644
index 14f8d3e..0000000
Binary files a/Figures/Plots/dd_demo-knn_reg-True-1.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-l_cls--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_demo-l_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index e5daee1..0000000
Binary files a/Figures/Plots/dd_demo-l_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-l_cls--shuffled:False--exclude at risk:True.png b/Figures/Plots/dd_demo-l_cls--shuffled:False--exclude at risk:True.png
deleted file mode 100644
index 53c9206..0000000
Binary files a/Figures/Plots/dd_demo-l_cls--shuffled:False--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-l_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_demo-l_cls--shuffled:True--exclude at risk:0.png
index 8fe49ab..fcc5ac0 100644
Binary files a/Figures/Plots/dd_demo-l_cls--shuffled:True--exclude at risk:0.png and b/Figures/Plots/dd_demo-l_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_demo-l_cls--shuffled:True--exclude at risk:True.png b/Figures/Plots/dd_demo-l_cls--shuffled:True--exclude at risk:True.png
index a132834..a6ff805 100644
Binary files a/Figures/Plots/dd_demo-l_cls--shuffled:True--exclude at risk:True.png and b/Figures/Plots/dd_demo-l_cls--shuffled:True--exclude at risk:True.png differ
diff --git a/Figures/Plots/dd_demo-l_reg--shuffled:False--exclude at risk:True.png b/Figures/Plots/dd_demo-l_reg--shuffled:False--exclude at risk:True.png
index ed38960..4817ba8 100644
Binary files a/Figures/Plots/dd_demo-l_reg--shuffled:False--exclude at risk:True.png and b/Figures/Plots/dd_demo-l_reg--shuffled:False--exclude at risk:True.png differ
diff --git a/Figures/Plots/dd_demo-l_reg--shuffled:True--exclude at risk:True.png b/Figures/Plots/dd_demo-l_reg--shuffled:True--exclude at risk:True.png
index 7848ff0..321a226 100644
Binary files a/Figures/Plots/dd_demo-l_reg--shuffled:True--exclude at risk:True.png and b/Figures/Plots/dd_demo-l_reg--shuffled:True--exclude at risk:True.png differ
diff --git a/Figures/Plots/dd_demo-l_reg-False.png b/Figures/Plots/dd_demo-l_reg-False.png
deleted file mode 100644
index 015899e..0000000
Binary files a/Figures/Plots/dd_demo-l_reg-False.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-l_reg-True-1.png b/Figures/Plots/dd_demo-l_reg-True-1.png
deleted file mode 100644
index 94fd9b2..0000000
Binary files a/Figures/Plots/dd_demo-l_reg-True-1.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-mlp_cls--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_demo-mlp_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index d149b98..0000000
Binary files a/Figures/Plots/dd_demo-mlp_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-mlp_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_demo-mlp_cls--shuffled:True--exclude at risk:0.png
index f643b3b..d620479 100644
Binary files a/Figures/Plots/dd_demo-mlp_cls--shuffled:True--exclude at risk:0.png and b/Figures/Plots/dd_demo-mlp_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_demo-mlp_reg-False.png b/Figures/Plots/dd_demo-mlp_reg-False.png
deleted file mode 100644
index b054ae8..0000000
Binary files a/Figures/Plots/dd_demo-mlp_reg-False.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-mlp_reg-True.png b/Figures/Plots/dd_demo-mlp_reg-True.png
deleted file mode 100644
index a4c2d4f..0000000
Binary files a/Figures/Plots/dd_demo-mlp_reg-True.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-mnb_cls--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_demo-mnb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index e366a8b..0000000
Binary files a/Figures/Plots/dd_demo-mnb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-mnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_demo-mnb_cls--shuffled:True--exclude at risk:0.png
index ea4fa07..3b692f5 100644
Binary files a/Figures/Plots/dd_demo-mnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Plots/dd_demo-mnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_demo-ms_clu--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_demo-ms_clu--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 0d5b2c9..0000000
Binary files a/Figures/Plots/dd_demo-ms_clu--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-ms_clu--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_demo-ms_clu--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index 578a44a..0000000
Binary files a/Figures/Plots/dd_demo-ms_clu--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-rf_cls--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_demo-rf_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 6eb87e1..0000000
Binary files a/Figures/Plots/dd_demo-rf_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-rf_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_demo-rf_cls--shuffled:True--exclude at risk:0.png
index 678cbaa..6203ab0 100644
Binary files a/Figures/Plots/dd_demo-rf_cls--shuffled:True--exclude at risk:0.png and b/Figures/Plots/dd_demo-rf_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_demo-rf_cls--shuffled:True--exclude at risk:True.png b/Figures/Plots/dd_demo-rf_cls--shuffled:True--exclude at risk:True.png
deleted file mode 100644
index 909176c..0000000
Binary files a/Figures/Plots/dd_demo-rf_cls--shuffled:True--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-rf_reg--shuffled:True--exclude at risk:True.png b/Figures/Plots/dd_demo-rf_reg--shuffled:True--exclude at risk:True.png
deleted file mode 100644
index 4b73787..0000000
Binary files a/Figures/Plots/dd_demo-rf_reg--shuffled:True--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-rf_reg-False.png b/Figures/Plots/dd_demo-rf_reg-False.png
deleted file mode 100644
index 714eb06..0000000
Binary files a/Figures/Plots/dd_demo-rf_reg-False.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-rf_reg-True-1.png b/Figures/Plots/dd_demo-rf_reg-True-1.png
deleted file mode 100644
index 0ee94e4..0000000
Binary files a/Figures/Plots/dd_demo-rf_reg-True-1.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-rf_reg-True-2.png b/Figures/Plots/dd_demo-rf_reg-True-2.png
deleted file mode 100644
index fc7b841..0000000
Binary files a/Figures/Plots/dd_demo-rf_reg-True-2.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-s_clu--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_demo-s_clu--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index de6bba7..0000000
Binary files a/Figures/Plots/dd_demo-s_clu--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-s_clu--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_demo-s_clu--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index bcfa8b5..0000000
Binary files a/Figures/Plots/dd_demo-s_clu--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-sv_cls--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_demo-sv_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 1805d68..0000000
Binary files a/Figures/Plots/dd_demo-sv_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-sv_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_demo-sv_cls--shuffled:True--exclude at risk:0.png
index badf443..aca50a5 100644
Binary files a/Figures/Plots/dd_demo-sv_cls--shuffled:True--exclude at risk:0.png and b/Figures/Plots/dd_demo-sv_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_demo-sv_reg--shuffled:True--exclude at risk:True.png b/Figures/Plots/dd_demo-sv_reg--shuffled:True--exclude at risk:True.png
deleted file mode 100644
index 3d195ae..0000000
Binary files a/Figures/Plots/dd_demo-sv_reg--shuffled:True--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-sv_reg-False.png b/Figures/Plots/dd_demo-sv_reg-False.png
deleted file mode 100644
index 35c0a51..0000000
Binary files a/Figures/Plots/dd_demo-sv_reg-False.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-sv_reg-True-1.png b/Figures/Plots/dd_demo-sv_reg-True-1.png
deleted file mode 100644
index dfebe0f..0000000
Binary files a/Figures/Plots/dd_demo-sv_reg-True-1.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-sv_reg-True-2.png b/Figures/Plots/dd_demo-sv_reg-True-2.png
deleted file mode 100644
index 1d5fe70..0000000
Binary files a/Figures/Plots/dd_demo-sv_reg-True-2.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-sv_reg-True-5.png b/Figures/Plots/dd_demo-sv_reg-True-5.png
deleted file mode 100644
index 64a890c..0000000
Binary files a/Figures/Plots/dd_demo-sv_reg-True-5.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-xgb_cls--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_demo-xgb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index c522da5..0000000
Binary files a/Figures/Plots/dd_demo-xgb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-xgb_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_demo-xgb_cls--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index 02f886f..0000000
Binary files a/Figures/Plots/dd_demo-xgb_cls--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-xgb_reg-False.png b/Figures/Plots/dd_demo-xgb_reg-False.png
deleted file mode 100644
index f8b7d0a..0000000
Binary files a/Figures/Plots/dd_demo-xgb_reg-False.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-xgb_reg-True-1.png b/Figures/Plots/dd_demo-xgb_reg-True-1.png
deleted file mode 100644
index 0fcacfa..0000000
Binary files a/Figures/Plots/dd_demo-xgb_reg-True-1.png and /dev/null differ
diff --git a/Figures/Plots/dd_demo-xgb_reg-True-2.png b/Figures/Plots/dd_demo-xgb_reg-True-2.png
deleted file mode 100644
index 761998e..0000000
Binary files a/Figures/Plots/dd_demo-xgb_reg-True-2.png and /dev/null differ
diff --git a/Figures/Plots/dd_fix_demo-ab_cls--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_fix_demo-ab_cls--shuffled:False--exclude at risk:0.png
index bb90996..6602ff8 100644
Binary files a/Figures/Plots/dd_fix_demo-ab_cls--shuffled:False--exclude at risk:0.png and b/Figures/Plots/dd_fix_demo-ab_cls--shuffled:False--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_fix_demo-ab_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_fix_demo-ab_cls--shuffled:True--exclude at risk:0.png
index 83314a9..deb5da5 100644
Binary files a/Figures/Plots/dd_fix_demo-ab_cls--shuffled:True--exclude at risk:0.png and b/Figures/Plots/dd_fix_demo-ab_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_fix_demo-cnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_fix_demo-cnb_cls--shuffled:True--exclude at risk:0.png
index 85e5c3f..6a6aa1a 100644
Binary files a/Figures/Plots/dd_fix_demo-cnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Plots/dd_fix_demo-cnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_fix_demo-gnb_cls--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_fix_demo-gnb_cls--shuffled:False--exclude at risk:0.png
index fcf9dda..d6ba90e 100644
Binary files a/Figures/Plots/dd_fix_demo-gnb_cls--shuffled:False--exclude at risk:0.png and b/Figures/Plots/dd_fix_demo-gnb_cls--shuffled:False--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_fix_demo-gnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_fix_demo-gnb_cls--shuffled:True--exclude at risk:0.png
index f4647f0..74679b1 100644
Binary files a/Figures/Plots/dd_fix_demo-gnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Plots/dd_fix_demo-gnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_fix_demo-l_cls--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_fix_demo-l_cls--shuffled:False--exclude at risk:0.png
index 98ebeea..2ecc59a 100644
Binary files a/Figures/Plots/dd_fix_demo-l_cls--shuffled:False--exclude at risk:0.png and b/Figures/Plots/dd_fix_demo-l_cls--shuffled:False--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_fix_demo-l_cls--shuffled:False--exclude at risk:True.png b/Figures/Plots/dd_fix_demo-l_cls--shuffled:False--exclude at risk:True.png
index acac66a..5b4ed44 100644
Binary files a/Figures/Plots/dd_fix_demo-l_cls--shuffled:False--exclude at risk:True.png and b/Figures/Plots/dd_fix_demo-l_cls--shuffled:False--exclude at risk:True.png differ
diff --git a/Figures/Plots/dd_fix_demo-l_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_fix_demo-l_cls--shuffled:True--exclude at risk:0.png
index 2e8a6a7..2fb71bc 100644
Binary files a/Figures/Plots/dd_fix_demo-l_cls--shuffled:True--exclude at risk:0.png and b/Figures/Plots/dd_fix_demo-l_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_fix_demo-l_cls--shuffled:True--exclude at risk:True.png b/Figures/Plots/dd_fix_demo-l_cls--shuffled:True--exclude at risk:True.png
index 8e0139a..fbd5a2b 100644
Binary files a/Figures/Plots/dd_fix_demo-l_cls--shuffled:True--exclude at risk:True.png and b/Figures/Plots/dd_fix_demo-l_cls--shuffled:True--exclude at risk:True.png differ
diff --git a/Figures/Plots/dd_fix_demo-mnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_fix_demo-mnb_cls--shuffled:True--exclude at risk:0.png
index 2dc42ad..732a1f5 100644
Binary files a/Figures/Plots/dd_fix_demo-mnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Plots/dd_fix_demo-mnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_ia_demo-ab_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_ia_demo-ab_cls--shuffled:True--exclude at risk:0.png
index 888612d..aff5d62 100644
Binary files a/Figures/Plots/dd_ia_demo-ab_cls--shuffled:True--exclude at risk:0.png and b/Figures/Plots/dd_ia_demo-ab_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_ia_demo-cnb_cls--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_ia_demo-cnb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 27dfa36..0000000
Binary files a/Figures/Plots/dd_ia_demo-cnb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_ia_demo-cnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_ia_demo-cnb_cls--shuffled:True--exclude at risk:0.png
index cbcf892..b8a0430 100644
Binary files a/Figures/Plots/dd_ia_demo-cnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Plots/dd_ia_demo-cnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_ia_demo-gnb_cls--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_ia_demo-gnb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 55f6ab4..0000000
Binary files a/Figures/Plots/dd_ia_demo-gnb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_ia_demo-gnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_ia_demo-gnb_cls--shuffled:True--exclude at risk:0.png
index d45232a..6b6fc4f 100644
Binary files a/Figures/Plots/dd_ia_demo-gnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Plots/dd_ia_demo-gnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_ia_demo-knn_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_ia_demo-knn_cls--shuffled:True--exclude at risk:0.png
index be7c98a..6874b43 100644
Binary files a/Figures/Plots/dd_ia_demo-knn_cls--shuffled:True--exclude at risk:0.png and b/Figures/Plots/dd_ia_demo-knn_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_ia_demo-l_cls--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_ia_demo-l_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 0afed08..0000000
Binary files a/Figures/Plots/dd_ia_demo-l_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_ia_demo-l_cls--shuffled:False--exclude at risk:True.png b/Figures/Plots/dd_ia_demo-l_cls--shuffled:False--exclude at risk:True.png
deleted file mode 100644
index 1121345..0000000
Binary files a/Figures/Plots/dd_ia_demo-l_cls--shuffled:False--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Plots/dd_ia_demo-l_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_ia_demo-l_cls--shuffled:True--exclude at risk:0.png
index 0f19286..8a6961a 100644
Binary files a/Figures/Plots/dd_ia_demo-l_cls--shuffled:True--exclude at risk:0.png and b/Figures/Plots/dd_ia_demo-l_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Plots/dd_ia_demo-l_cls--shuffled:True--exclude at risk:True.png b/Figures/Plots/dd_ia_demo-l_cls--shuffled:True--exclude at risk:True.png
index c09bfc6..f7b6ffb 100644
Binary files a/Figures/Plots/dd_ia_demo-l_cls--shuffled:True--exclude at risk:True.png and b/Figures/Plots/dd_ia_demo-l_cls--shuffled:True--exclude at risk:True.png differ
diff --git a/Figures/Plots/dd_ia_demo-mnb_cls--shuffled:False--exclude at risk:0.png b/Figures/Plots/dd_ia_demo-mnb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 40cfd0a..0000000
Binary files a/Figures/Plots/dd_ia_demo-mnb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Plots/dd_ia_demo-mnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Plots/dd_ia_demo-mnb_cls--shuffled:True--exclude at risk:0.png
index 44b2083..f23e721 100644
Binary files a/Figures/Plots/dd_ia_demo-mnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Plots/dd_ia_demo-mnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_demo-a_clu--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_demo-a_clu--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 32b0473..0000000
Binary files a/Figures/Scatters/dd_demo-a_clu--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-a_clu--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_demo-a_clu--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index 6059cc9..0000000
Binary files a/Figures/Scatters/dd_demo-a_clu--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-ab_cls--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_demo-ab_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index eab464a..0000000
Binary files a/Figures/Scatters/dd_demo-ab_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-ab_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_demo-ab_cls--shuffled:True--exclude at risk:0.png
index 5f44bfe..d15d8eb 100644
Binary files a/Figures/Scatters/dd_demo-ab_cls--shuffled:True--exclude at risk:0.png and b/Figures/Scatters/dd_demo-ab_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_demo-ab_reg-False.png b/Figures/Scatters/dd_demo-ab_reg-False.png
deleted file mode 100644
index 1979da0..0000000
Binary files a/Figures/Scatters/dd_demo-ab_reg-False.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-ab_reg-True-1.png b/Figures/Scatters/dd_demo-ab_reg-True-1.png
deleted file mode 100644
index 08d9381..0000000
Binary files a/Figures/Scatters/dd_demo-ab_reg-True-1.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-ab_reg-True-2.png b/Figures/Scatters/dd_demo-ab_reg-True-2.png
deleted file mode 100644
index 808aad1..0000000
Binary files a/Figures/Scatters/dd_demo-ab_reg-True-2.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-ab_reg-True-4.png b/Figures/Scatters/dd_demo-ab_reg-True-4.png
deleted file mode 100644
index 5ce0d6b..0000000
Binary files a/Figures/Scatters/dd_demo-ab_reg-True-4.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-ap_clu--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_demo-ap_clu--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index ac003a1..0000000
Binary files a/Figures/Scatters/dd_demo-ap_clu--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-ap_clu--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_demo-ap_clu--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index 1bd2b73..0000000
Binary files a/Figures/Scatters/dd_demo-ap_clu--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-bg_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_demo-bg_cls--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index a1f66df..0000000
Binary files a/Figures/Scatters/dd_demo-bg_cls--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-br_reg--shuffled:True--exclude at risk:True.png b/Figures/Scatters/dd_demo-br_reg--shuffled:True--exclude at risk:True.png
deleted file mode 100644
index 1ead3bb..0000000
Binary files a/Figures/Scatters/dd_demo-br_reg--shuffled:True--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-br_reg-False.png b/Figures/Scatters/dd_demo-br_reg-False.png
deleted file mode 100644
index 25ad468..0000000
Binary files a/Figures/Scatters/dd_demo-br_reg-False.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-br_reg-True-1.png b/Figures/Scatters/dd_demo-br_reg-True-1.png
deleted file mode 100644
index f74ed21..0000000
Binary files a/Figures/Scatters/dd_demo-br_reg-True-1.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-cnb_cls--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_demo-cnb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 3e2de9b..0000000
Binary files a/Figures/Scatters/dd_demo-cnb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-cnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_demo-cnb_cls--shuffled:True--exclude at risk:0.png
index 02ae042..aaf0413 100644
Binary files a/Figures/Scatters/dd_demo-cnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Scatters/dd_demo-cnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_demo-dbs_clu--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_demo-dbs_clu--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 2010469..0000000
Binary files a/Figures/Scatters/dd_demo-dbs_clu--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-dbs_clu--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_demo-dbs_clu--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index 790a6d7..0000000
Binary files a/Figures/Scatters/dd_demo-dbs_clu--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-gb_cls--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_demo-gb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 640e22f..0000000
Binary files a/Figures/Scatters/dd_demo-gb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-gb_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_demo-gb_cls--shuffled:True--exclude at risk:0.png
index 6e04c17..8982b90 100644
Binary files a/Figures/Scatters/dd_demo-gb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Scatters/dd_demo-gb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_demo-gb_reg--shuffled:False--exclude at risk:True.png b/Figures/Scatters/dd_demo-gb_reg--shuffled:False--exclude at risk:True.png
deleted file mode 100644
index f2f2434..0000000
Binary files a/Figures/Scatters/dd_demo-gb_reg--shuffled:False--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-gb_reg-False.png b/Figures/Scatters/dd_demo-gb_reg-False.png
deleted file mode 100644
index bec101b..0000000
Binary files a/Figures/Scatters/dd_demo-gb_reg-False.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-gb_reg-True-1.png b/Figures/Scatters/dd_demo-gb_reg-True-1.png
deleted file mode 100644
index 9265b09..0000000
Binary files a/Figures/Scatters/dd_demo-gb_reg-True-1.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-gb_reg-True-2.png b/Figures/Scatters/dd_demo-gb_reg-True-2.png
deleted file mode 100644
index 1c66ee1..0000000
Binary files a/Figures/Scatters/dd_demo-gb_reg-True-2.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-gm_clu--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_demo-gm_clu--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 7f31c80..0000000
Binary files a/Figures/Scatters/dd_demo-gm_clu--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-gm_clu--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_demo-gm_clu--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index a478d22..0000000
Binary files a/Figures/Scatters/dd_demo-gm_clu--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-gnb_cls--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_demo-gnb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 0a80bf8..0000000
Binary files a/Figures/Scatters/dd_demo-gnb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-km_clu--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_demo-km_clu--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 5c9a869..0000000
Binary files a/Figures/Scatters/dd_demo-km_clu--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-km_clu--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_demo-km_clu--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index 901b4ed..0000000
Binary files a/Figures/Scatters/dd_demo-km_clu--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-knn_cls--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_demo-knn_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 4ea1bae..0000000
Binary files a/Figures/Scatters/dd_demo-knn_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-knn_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_demo-knn_cls--shuffled:True--exclude at risk:0.png
index a548d49..11a5c79 100644
Binary files a/Figures/Scatters/dd_demo-knn_cls--shuffled:True--exclude at risk:0.png and b/Figures/Scatters/dd_demo-knn_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_demo-knn_reg--shuffled:True--exclude at risk:True.png b/Figures/Scatters/dd_demo-knn_reg--shuffled:True--exclude at risk:True.png
deleted file mode 100644
index 9e321df..0000000
Binary files a/Figures/Scatters/dd_demo-knn_reg--shuffled:True--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-knn_reg-False.png b/Figures/Scatters/dd_demo-knn_reg-False.png
deleted file mode 100644
index 0c9b0d8..0000000
Binary files a/Figures/Scatters/dd_demo-knn_reg-False.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-knn_reg-True-1.png b/Figures/Scatters/dd_demo-knn_reg-True-1.png
deleted file mode 100644
index 654baa7..0000000
Binary files a/Figures/Scatters/dd_demo-knn_reg-True-1.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-l_cls--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_demo-l_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 5954960..0000000
Binary files a/Figures/Scatters/dd_demo-l_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-l_cls--shuffled:False--exclude at risk:True.png b/Figures/Scatters/dd_demo-l_cls--shuffled:False--exclude at risk:True.png
deleted file mode 100644
index d97b07f..0000000
Binary files a/Figures/Scatters/dd_demo-l_cls--shuffled:False--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-l_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_demo-l_cls--shuffled:True--exclude at risk:0.png
index a4a595c..861da40 100644
Binary files a/Figures/Scatters/dd_demo-l_cls--shuffled:True--exclude at risk:0.png and b/Figures/Scatters/dd_demo-l_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_demo-l_cls--shuffled:True--exclude at risk:True.png b/Figures/Scatters/dd_demo-l_cls--shuffled:True--exclude at risk:True.png
index 9466d90..679739f 100644
Binary files a/Figures/Scatters/dd_demo-l_cls--shuffled:True--exclude at risk:True.png and b/Figures/Scatters/dd_demo-l_cls--shuffled:True--exclude at risk:True.png differ
diff --git a/Figures/Scatters/dd_demo-l_reg--shuffled:False--exclude at risk:True.png b/Figures/Scatters/dd_demo-l_reg--shuffled:False--exclude at risk:True.png
index 1bd1d51..7564a9f 100644
Binary files a/Figures/Scatters/dd_demo-l_reg--shuffled:False--exclude at risk:True.png and b/Figures/Scatters/dd_demo-l_reg--shuffled:False--exclude at risk:True.png differ
diff --git a/Figures/Scatters/dd_demo-l_reg--shuffled:True--exclude at risk:True.png b/Figures/Scatters/dd_demo-l_reg--shuffled:True--exclude at risk:True.png
index ed200b4..a44be39 100644
Binary files a/Figures/Scatters/dd_demo-l_reg--shuffled:True--exclude at risk:True.png and b/Figures/Scatters/dd_demo-l_reg--shuffled:True--exclude at risk:True.png differ
diff --git a/Figures/Scatters/dd_demo-l_reg-False.png b/Figures/Scatters/dd_demo-l_reg-False.png
deleted file mode 100644
index 99b9b2e..0000000
Binary files a/Figures/Scatters/dd_demo-l_reg-False.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-l_reg-True-1.png b/Figures/Scatters/dd_demo-l_reg-True-1.png
deleted file mode 100644
index 74f9361..0000000
Binary files a/Figures/Scatters/dd_demo-l_reg-True-1.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-mlp_cls--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_demo-mlp_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 31acb01..0000000
Binary files a/Figures/Scatters/dd_demo-mlp_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-mlp_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_demo-mlp_cls--shuffled:True--exclude at risk:0.png
index 2aa5c7f..ea1ebe6 100644
Binary files a/Figures/Scatters/dd_demo-mlp_cls--shuffled:True--exclude at risk:0.png and b/Figures/Scatters/dd_demo-mlp_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_demo-mlp_reg-False.png b/Figures/Scatters/dd_demo-mlp_reg-False.png
deleted file mode 100644
index 1574981..0000000
Binary files a/Figures/Scatters/dd_demo-mlp_reg-False.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-mlp_reg-True.png b/Figures/Scatters/dd_demo-mlp_reg-True.png
deleted file mode 100644
index e073a3e..0000000
Binary files a/Figures/Scatters/dd_demo-mlp_reg-True.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-mnb_cls--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_demo-mnb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 28e7033..0000000
Binary files a/Figures/Scatters/dd_demo-mnb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-mnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_demo-mnb_cls--shuffled:True--exclude at risk:0.png
index 6b992a9..6aeb072 100644
Binary files a/Figures/Scatters/dd_demo-mnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Scatters/dd_demo-mnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_demo-ms_clu--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_demo-ms_clu--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index fa03777..0000000
Binary files a/Figures/Scatters/dd_demo-ms_clu--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-ms_clu--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_demo-ms_clu--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index e2e4f63..0000000
Binary files a/Figures/Scatters/dd_demo-ms_clu--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-rf_cls--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_demo-rf_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index a0c644e..0000000
Binary files a/Figures/Scatters/dd_demo-rf_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-rf_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_demo-rf_cls--shuffled:True--exclude at risk:0.png
index 576173a..80c5dcc 100644
Binary files a/Figures/Scatters/dd_demo-rf_cls--shuffled:True--exclude at risk:0.png and b/Figures/Scatters/dd_demo-rf_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_demo-rf_cls--shuffled:True--exclude at risk:True.png b/Figures/Scatters/dd_demo-rf_cls--shuffled:True--exclude at risk:True.png
deleted file mode 100644
index 6276d9f..0000000
Binary files a/Figures/Scatters/dd_demo-rf_cls--shuffled:True--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-rf_reg--shuffled:True--exclude at risk:True.png b/Figures/Scatters/dd_demo-rf_reg--shuffled:True--exclude at risk:True.png
deleted file mode 100644
index 1d4b39f..0000000
Binary files a/Figures/Scatters/dd_demo-rf_reg--shuffled:True--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-rf_reg-False.png b/Figures/Scatters/dd_demo-rf_reg-False.png
deleted file mode 100644
index f34a3b9..0000000
Binary files a/Figures/Scatters/dd_demo-rf_reg-False.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-rf_reg-True-1.png b/Figures/Scatters/dd_demo-rf_reg-True-1.png
deleted file mode 100644
index fd76697..0000000
Binary files a/Figures/Scatters/dd_demo-rf_reg-True-1.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-rf_reg-True-2.png b/Figures/Scatters/dd_demo-rf_reg-True-2.png
deleted file mode 100644
index 690f2e6..0000000
Binary files a/Figures/Scatters/dd_demo-rf_reg-True-2.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-s_clu--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_demo-s_clu--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 13ea90b..0000000
Binary files a/Figures/Scatters/dd_demo-s_clu--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-s_clu--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_demo-s_clu--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index 92e5200..0000000
Binary files a/Figures/Scatters/dd_demo-s_clu--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-sv_cls--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_demo-sv_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index e889079..0000000
Binary files a/Figures/Scatters/dd_demo-sv_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-sv_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_demo-sv_cls--shuffled:True--exclude at risk:0.png
index 50eb78c..3d013f7 100644
Binary files a/Figures/Scatters/dd_demo-sv_cls--shuffled:True--exclude at risk:0.png and b/Figures/Scatters/dd_demo-sv_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_demo-sv_reg--shuffled:True--exclude at risk:True.png b/Figures/Scatters/dd_demo-sv_reg--shuffled:True--exclude at risk:True.png
deleted file mode 100644
index b41cb4d..0000000
Binary files a/Figures/Scatters/dd_demo-sv_reg--shuffled:True--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-sv_reg-False.png b/Figures/Scatters/dd_demo-sv_reg-False.png
deleted file mode 100644
index 3262239..0000000
Binary files a/Figures/Scatters/dd_demo-sv_reg-False.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-sv_reg-True-1.png b/Figures/Scatters/dd_demo-sv_reg-True-1.png
deleted file mode 100644
index c28ca65..0000000
Binary files a/Figures/Scatters/dd_demo-sv_reg-True-1.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-sv_reg-True-2.png b/Figures/Scatters/dd_demo-sv_reg-True-2.png
deleted file mode 100644
index 4f76f79..0000000
Binary files a/Figures/Scatters/dd_demo-sv_reg-True-2.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-sv_reg-True-5.png b/Figures/Scatters/dd_demo-sv_reg-True-5.png
deleted file mode 100644
index 30f9bd3..0000000
Binary files a/Figures/Scatters/dd_demo-sv_reg-True-5.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-xgb_cls--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_demo-xgb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 74396b9..0000000
Binary files a/Figures/Scatters/dd_demo-xgb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-xgb_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_demo-xgb_cls--shuffled:True--exclude at risk:0.png
deleted file mode 100644
index 8e5373d..0000000
Binary files a/Figures/Scatters/dd_demo-xgb_cls--shuffled:True--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-xgb_reg-False.png b/Figures/Scatters/dd_demo-xgb_reg-False.png
deleted file mode 100644
index 681588c..0000000
Binary files a/Figures/Scatters/dd_demo-xgb_reg-False.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-xgb_reg-True-1.png b/Figures/Scatters/dd_demo-xgb_reg-True-1.png
deleted file mode 100644
index 30a6b64..0000000
Binary files a/Figures/Scatters/dd_demo-xgb_reg-True-1.png and /dev/null differ
diff --git a/Figures/Scatters/dd_demo-xgb_reg-True-2.png b/Figures/Scatters/dd_demo-xgb_reg-True-2.png
deleted file mode 100644
index c927f1a..0000000
Binary files a/Figures/Scatters/dd_demo-xgb_reg-True-2.png and /dev/null differ
diff --git a/Figures/Scatters/dd_fix_demo-ab_cls--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_fix_demo-ab_cls--shuffled:False--exclude at risk:0.png
index 83b3cfe..a71d1fb 100644
Binary files a/Figures/Scatters/dd_fix_demo-ab_cls--shuffled:False--exclude at risk:0.png and b/Figures/Scatters/dd_fix_demo-ab_cls--shuffled:False--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_fix_demo-ab_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_fix_demo-ab_cls--shuffled:True--exclude at risk:0.png
index 9a9ed4a..a376625 100644
Binary files a/Figures/Scatters/dd_fix_demo-ab_cls--shuffled:True--exclude at risk:0.png and b/Figures/Scatters/dd_fix_demo-ab_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_fix_demo-cnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_fix_demo-cnb_cls--shuffled:True--exclude at risk:0.png
index 9afba49..e6e94dc 100644
Binary files a/Figures/Scatters/dd_fix_demo-cnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Scatters/dd_fix_demo-cnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_fix_demo-gnb_cls--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_fix_demo-gnb_cls--shuffled:False--exclude at risk:0.png
index 5610907..820644c 100644
Binary files a/Figures/Scatters/dd_fix_demo-gnb_cls--shuffled:False--exclude at risk:0.png and b/Figures/Scatters/dd_fix_demo-gnb_cls--shuffled:False--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_fix_demo-gnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_fix_demo-gnb_cls--shuffled:True--exclude at risk:0.png
index 30e2fa8..e563b31 100644
Binary files a/Figures/Scatters/dd_fix_demo-gnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Scatters/dd_fix_demo-gnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_fix_demo-l_cls--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_fix_demo-l_cls--shuffled:False--exclude at risk:0.png
index 58550f4..1060855 100644
Binary files a/Figures/Scatters/dd_fix_demo-l_cls--shuffled:False--exclude at risk:0.png and b/Figures/Scatters/dd_fix_demo-l_cls--shuffled:False--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_fix_demo-l_cls--shuffled:False--exclude at risk:True.png b/Figures/Scatters/dd_fix_demo-l_cls--shuffled:False--exclude at risk:True.png
index e247487..bcf2dc1 100644
Binary files a/Figures/Scatters/dd_fix_demo-l_cls--shuffled:False--exclude at risk:True.png and b/Figures/Scatters/dd_fix_demo-l_cls--shuffled:False--exclude at risk:True.png differ
diff --git a/Figures/Scatters/dd_fix_demo-l_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_fix_demo-l_cls--shuffled:True--exclude at risk:0.png
index 4520622..6dde1c6 100644
Binary files a/Figures/Scatters/dd_fix_demo-l_cls--shuffled:True--exclude at risk:0.png and b/Figures/Scatters/dd_fix_demo-l_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_fix_demo-l_cls--shuffled:True--exclude at risk:True.png b/Figures/Scatters/dd_fix_demo-l_cls--shuffled:True--exclude at risk:True.png
index 1d393c7..616c514 100644
Binary files a/Figures/Scatters/dd_fix_demo-l_cls--shuffled:True--exclude at risk:True.png and b/Figures/Scatters/dd_fix_demo-l_cls--shuffled:True--exclude at risk:True.png differ
diff --git a/Figures/Scatters/dd_fix_demo-mnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_fix_demo-mnb_cls--shuffled:True--exclude at risk:0.png
index daff4e5..226ac75 100644
Binary files a/Figures/Scatters/dd_fix_demo-mnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Scatters/dd_fix_demo-mnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_ia_demo-ab_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_ia_demo-ab_cls--shuffled:True--exclude at risk:0.png
index c725103..eeaa997 100644
Binary files a/Figures/Scatters/dd_ia_demo-ab_cls--shuffled:True--exclude at risk:0.png and b/Figures/Scatters/dd_ia_demo-ab_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_ia_demo-cnb_cls--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_ia_demo-cnb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index a49052e..0000000
Binary files a/Figures/Scatters/dd_ia_demo-cnb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_ia_demo-cnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_ia_demo-cnb_cls--shuffled:True--exclude at risk:0.png
index 0203506..991e78c 100644
Binary files a/Figures/Scatters/dd_ia_demo-cnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Scatters/dd_ia_demo-cnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_ia_demo-gnb_cls--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_ia_demo-gnb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 6e86759..0000000
Binary files a/Figures/Scatters/dd_ia_demo-gnb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_ia_demo-gnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_ia_demo-gnb_cls--shuffled:True--exclude at risk:0.png
index e05ef5c..d5dc4db 100644
Binary files a/Figures/Scatters/dd_ia_demo-gnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Scatters/dd_ia_demo-gnb_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_ia_demo-knn_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_ia_demo-knn_cls--shuffled:True--exclude at risk:0.png
index 3900fd6..db2cd23 100644
Binary files a/Figures/Scatters/dd_ia_demo-knn_cls--shuffled:True--exclude at risk:0.png and b/Figures/Scatters/dd_ia_demo-knn_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_ia_demo-l_cls--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_ia_demo-l_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index 7a89041..0000000
Binary files a/Figures/Scatters/dd_ia_demo-l_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_ia_demo-l_cls--shuffled:False--exclude at risk:True.png b/Figures/Scatters/dd_ia_demo-l_cls--shuffled:False--exclude at risk:True.png
deleted file mode 100644
index 4321965..0000000
Binary files a/Figures/Scatters/dd_ia_demo-l_cls--shuffled:False--exclude at risk:True.png and /dev/null differ
diff --git a/Figures/Scatters/dd_ia_demo-l_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_ia_demo-l_cls--shuffled:True--exclude at risk:0.png
index 9065072..6ae8958 100644
Binary files a/Figures/Scatters/dd_ia_demo-l_cls--shuffled:True--exclude at risk:0.png and b/Figures/Scatters/dd_ia_demo-l_cls--shuffled:True--exclude at risk:0.png differ
diff --git a/Figures/Scatters/dd_ia_demo-l_cls--shuffled:True--exclude at risk:True.png b/Figures/Scatters/dd_ia_demo-l_cls--shuffled:True--exclude at risk:True.png
index 509a131..282f3ed 100644
Binary files a/Figures/Scatters/dd_ia_demo-l_cls--shuffled:True--exclude at risk:True.png and b/Figures/Scatters/dd_ia_demo-l_cls--shuffled:True--exclude at risk:True.png differ
diff --git a/Figures/Scatters/dd_ia_demo-mnb_cls--shuffled:False--exclude at risk:0.png b/Figures/Scatters/dd_ia_demo-mnb_cls--shuffled:False--exclude at risk:0.png
deleted file mode 100644
index b619b51..0000000
Binary files a/Figures/Scatters/dd_ia_demo-mnb_cls--shuffled:False--exclude at risk:0.png and /dev/null differ
diff --git a/Figures/Scatters/dd_ia_demo-mnb_cls--shuffled:True--exclude at risk:0.png b/Figures/Scatters/dd_ia_demo-mnb_cls--shuffled:True--exclude at risk:0.png
index 0155ecf..6f2cfe0 100644
Binary files a/Figures/Scatters/dd_ia_demo-mnb_cls--shuffled:True--exclude at risk:0.png and b/Figures/Scatters/dd_ia_demo-mnb_cls--shuffled:True--exclude at risk:0.png differ
